{
    "registry": {
        "comment": [
            "Copyright 2015-2022 The Khronos Group Inc.\n\nSPDX-License-Identifier: Apache-2.0 OR MIT",
            "This file, vk.xml, is the Vulkan API Registry. It is a critically important\nand normative part of the Vulkan Specification, including a canonical\nmachine-readable definition of the API, parameter and member validation\nlanguage incorporated into the Specification and reference pages, and other\nmaterial which is registered by Khronos, such as tags used by extension and\nlayer authors. The authoritative public version of vk.xml is maintained in\nthe default branch (currently named main) of the Khronos Vulkan GitHub\nproject. The authoritative private version is maintained in the default\nbranch of the member gitlab server.",
            "Vulkan enumerant (token) definitions",
            "Unlike OpenGL, most tokens in Vulkan are actual typed enumerants in\n        their own numeric namespaces. The \"name\" attribute is the C enum\n        type name, and is pulled in from a type tag definition above\n        (slightly clunky, but retains the type / enum distinction). \"type\"\n        attributes of \"enum\" or \"bitmask\" indicate that these values should\n        be generated inside an appropriate definition.",
            "Flags",
            "WSI Extensions"
        ],
        "platforms": {
            "@comment": "Vulkan platform names, reserved for use with platform- and window system-specific extensions",
            "platform": [
                {
                    "@name": "xlib",
                    "@protect": "VK_USE_PLATFORM_XLIB_KHR",
                    "@comment": "X Window System, Xlib client library"
                },
                {
                    "@name": "xlib_xrandr",
                    "@protect": "VK_USE_PLATFORM_XLIB_XRANDR_EXT",
                    "@comment": "X Window System, Xlib client library, XRandR extension"
                },
                {
                    "@name": "xcb",
                    "@protect": "VK_USE_PLATFORM_XCB_KHR",
                    "@comment": "X Window System, Xcb client library"
                },
                {
                    "@name": "wayland",
                    "@protect": "VK_USE_PLATFORM_WAYLAND_KHR",
                    "@comment": "Wayland display server protocol"
                },
                {
                    "@name": "directfb",
                    "@protect": "VK_USE_PLATFORM_DIRECTFB_EXT",
                    "@comment": "DirectFB library"
                },
                {
                    "@name": "android",
                    "@protect": "VK_USE_PLATFORM_ANDROID_KHR",
                    "@comment": "Android OS"
                },
                {
                    "@name": "win32",
                    "@protect": "VK_USE_PLATFORM_WIN32_KHR",
                    "@comment": "Microsoft Win32 API (also refers to Win64 apps)"
                },
                {
                    "@name": "vi",
                    "@protect": "VK_USE_PLATFORM_VI_NN",
                    "@comment": "Nintendo Vi"
                },
                {
                    "@name": "ios",
                    "@protect": "VK_USE_PLATFORM_IOS_MVK",
                    "@comment": "Apple IOS"
                },
                {
                    "@name": "macos",
                    "@protect": "VK_USE_PLATFORM_MACOS_MVK",
                    "@comment": "Apple MacOS"
                },
                {
                    "@name": "metal",
                    "@protect": "VK_USE_PLATFORM_METAL_EXT",
                    "@comment": "Metal on CoreAnimation on Apple platforms"
                },
                {
                    "@name": "fuchsia",
                    "@protect": "VK_USE_PLATFORM_FUCHSIA",
                    "@comment": "Fuchsia"
                },
                {
                    "@name": "ggp",
                    "@protect": "VK_USE_PLATFORM_GGP",
                    "@comment": "Google Games Platform"
                },
                {
                    "@name": "provisional",
                    "@protect": "VK_ENABLE_BETA_EXTENSIONS",
                    "@comment": "Enable declarations for beta/provisional extensions"
                },
                {
                    "@name": "screen",
                    "@protect": "VK_USE_PLATFORM_SCREEN_QNX",
                    "@comment": "QNX Screen Graphics Subsystem"
                }
            ]
        },
        "tags": {
            "@comment": "Vulkan vendor/author tags for extensions and layers",
            "tag": [
                {
                    "@name": "IMG",
                    "@author": "Imagination Technologies",
                    "@contact": "Michael Worcester @michaelworcester"
                },
                {
                    "@name": "AMD",
                    "@author": "Advanced Micro Devices, Inc.",
                    "@contact": "Daniel Rakos @drakos-amd"
                },
                {
                    "@name": "AMDX",
                    "@author": "Advanced Micro Devices, Inc.",
                    "@contact": "Daniel Rakos @drakos-amd"
                },
                {
                    "@name": "ARM",
                    "@author": "ARM Limited",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm"
                },
                {
                    "@name": "FSL",
                    "@author": "Freescale Semiconductor, Inc.",
                    "@contact": "Norbert Nopper @FslNopper"
                },
                {
                    "@name": "BRCM",
                    "@author": "Broadcom Corporation",
                    "@contact": "Graeme Leese @gnl21"
                },
                {
                    "@name": "NXP",
                    "@author": "NXP Semiconductors N.V.",
                    "@contact": "Norbert Nopper @FslNopper"
                },
                {
                    "@name": "NV",
                    "@author": "NVIDIA Corporation",
                    "@contact": "Daniel Koch @dgkoch"
                },
                {
                    "@name": "NVX",
                    "@author": "NVIDIA Corporation",
                    "@contact": "Daniel Koch @dgkoch"
                },
                {
                    "@name": "VIV",
                    "@author": "Vivante Corporation",
                    "@contact": "Yanjun Zhang gitlab:@yanjunzhang"
                },
                {
                    "@name": "VSI",
                    "@author": "VeriSilicon Holdings Co., Ltd.",
                    "@contact": "Yanjun Zhang gitlab:@yanjunzhang"
                },
                {
                    "@name": "KDAB",
                    "@author": "KDAB",
                    "@contact": "Sean Harmer @seanharmer"
                },
                {
                    "@name": "ANDROID",
                    "@author": "Google LLC",
                    "@contact": "Jesse Hall @critsec"
                },
                {
                    "@name": "CHROMIUM",
                    "@author": "Google LLC",
                    "@contact": "Jesse Hall @critsec"
                },
                {
                    "@name": "FUCHSIA",
                    "@author": "Google LLC",
                    "@contact": "Craig Stout @cdotstout, Jesse Hall @critsec, John Rosasco @rosasco"
                },
                {
                    "@name": "GGP",
                    "@author": "Google, LLC",
                    "@contact": "Jean-Francois Roy @jfroy, Hai Nguyen @chaoticbob, Jesse Hall @critsec"
                },
                {
                    "@name": "GOOGLE",
                    "@author": "Google LLC",
                    "@contact": "Jesse Hall @critsec"
                },
                {
                    "@name": "QCOM",
                    "@author": "Qualcomm Technologies, Inc.",
                    "@contact": "Jeff Leger @jackohounhd"
                },
                {
                    "@name": "LUNARG",
                    "@author": "LunarG, Inc.",
                    "@contact": "Karen Ghavam @karenghavam-lunarg"
                },
                {
                    "@name": "SAMSUNG",
                    "@author": "Samsung Electronics Co., Ltd.",
                    "@contact": "Alon Or-bach @alonorbach"
                },
                {
                    "@name": "SEC",
                    "@author": "Samsung Electronics Co., Ltd.",
                    "@contact": "Alon Or-bach @alonorbach"
                },
                {
                    "@name": "TIZEN",
                    "@author": "Samsung Electronics Co., Ltd.",
                    "@contact": "Alon Or-bach @alonorbach"
                },
                {
                    "@name": "RENDERDOC",
                    "@author": "RenderDoc (renderdoc.org)",
                    "@contact": "Baldur Karlsson @baldurk"
                },
                {
                    "@name": "NN",
                    "@author": "Nintendo Co., Ltd.",
                    "@contact": "Yasuhiro Yoshioka gitlab:@yoshioka_yasuhiro"
                },
                {
                    "@name": "MVK",
                    "@author": "The Brenwill Workshop Ltd.",
                    "@contact": "Bill Hollings @billhollings"
                },
                {
                    "@name": "KHR",
                    "@author": "Khronos",
                    "@contact": "Tom Olson @tomolson"
                },
                {
                    "@name": "KHX",
                    "@author": "Khronos",
                    "@contact": "Tom Olson @tomolson"
                },
                {
                    "@name": "EXT",
                    "@author": "Multivendor",
                    "@contact": "Jon Leech @oddhack"
                },
                {
                    "@name": "MESA",
                    "@author": "Mesa open source project",
                    "@contact": "Chad Versace @chadversary, Daniel Stone @fooishbar, David Airlie @airlied, Jason Ekstrand @jekstrand"
                },
                {
                    "@name": "INTEL",
                    "@author": "Intel Corporation",
                    "@contact": "Slawek Grajewski @sgrajewski"
                },
                {
                    "@name": "HUAWEI",
                    "@author": "Huawei Technologies Co. Ltd.",
                    "@contact": "Hueilong Wang @wyvernathuawei, Yunpeng Zhu @yunxingzhu"
                },
                {
                    "@name": "VALVE",
                    "@author": "Valve Corporation",
                    "@contact": "Pierre-Loup Griffais @plagman, Joshua Ashton @Joshua-Ashton, Hans-Kristian Arntzen @HansKristian-Work"
                },
                {
                    "@name": "QNX",
                    "@author": "BlackBerry Limited",
                    "@contact": "Mike Gorchak @mgorchak-blackberry"
                },
                {
                    "@name": "JUICE",
                    "@author": "Juice Technologies, Inc.",
                    "@contact": "David McCloskey @damcclos, Dean Beeler @canadacow"
                },
                {
                    "@name": "FB",
                    "@author": "Facebook, Inc",
                    "@contact": "Artem Bolgar @artyom17"
                }
            ]
        },
        "types": {
            "@comment": "Vulkan type definitions",
            "type": [
                {
                    "@name": "vk_platform",
                    "@category": "include",
                    "#text": "#include \"vk_platform.h\""
                },
                {
                    "@category": "include",
                    "@name": "X11/Xlib.h"
                },
                {
                    "@category": "include",
                    "@name": "X11/extensions/Xrandr.h"
                },
                {
                    "@category": "include",
                    "@name": "wayland-client.h"
                },
                {
                    "@category": "include",
                    "@name": "windows.h"
                },
                {
                    "@category": "include",
                    "@name": "xcb/xcb.h"
                },
                {
                    "@category": "include",
                    "@name": "directfb.h"
                },
                {
                    "@category": "include",
                    "@name": "zircon/types.h"
                },
                {
                    "@category": "include",
                    "@name": "ggp_c/vulkan_types.h"
                },
                {
                    "@category": "include",
                    "@name": "screen/screen.h"
                },
                {
                    "@requires": "X11/Xlib.h",
                    "@name": "Display"
                },
                {
                    "@requires": "X11/Xlib.h",
                    "@name": "VisualID"
                },
                {
                    "@requires": "X11/Xlib.h",
                    "@name": "Window"
                },
                {
                    "@requires": "X11/extensions/Xrandr.h",
                    "@name": "RROutput"
                },
                {
                    "@requires": "wayland-client.h",
                    "@name": "wl_display"
                },
                {
                    "@requires": "wayland-client.h",
                    "@name": "wl_surface"
                },
                {
                    "@requires": "windows.h",
                    "@name": "HINSTANCE"
                },
                {
                    "@requires": "windows.h",
                    "@name": "HWND"
                },
                {
                    "@requires": "windows.h",
                    "@name": "HMONITOR"
                },
                {
                    "@requires": "windows.h",
                    "@name": "HANDLE"
                },
                {
                    "@requires": "windows.h",
                    "@name": "SECURITY_ATTRIBUTES"
                },
                {
                    "@requires": "windows.h",
                    "@name": "DWORD"
                },
                {
                    "@requires": "windows.h",
                    "@name": "LPCWSTR"
                },
                {
                    "@requires": "xcb/xcb.h",
                    "@name": "xcb_connection_t"
                },
                {
                    "@requires": "xcb/xcb.h",
                    "@name": "xcb_visualid_t"
                },
                {
                    "@requires": "xcb/xcb.h",
                    "@name": "xcb_window_t"
                },
                {
                    "@requires": "directfb.h",
                    "@name": "IDirectFB"
                },
                {
                    "@requires": "directfb.h",
                    "@name": "IDirectFBSurface"
                },
                {
                    "@requires": "zircon/types.h",
                    "@name": "zx_handle_t"
                },
                {
                    "@requires": "ggp_c/vulkan_types.h",
                    "@name": "GgpStreamDescriptor"
                },
                {
                    "@requires": "ggp_c/vulkan_types.h",
                    "@name": "GgpFrameToken"
                },
                {
                    "@requires": "screen/screen.h",
                    "@name": "_screen_context"
                },
                {
                    "@requires": "screen/screen.h",
                    "@name": "_screen_window"
                },
                {
                    "@category": "define",
                    "name": "VK_MAKE_VERSION",
                    "#text": "// DEPRECATED: This define is deprecated. VK_MAKE_API_VERSION should be used instead.\n#define (major, minor, patch) \\\n    ((((uint32_t)(major)) << 22) | (((uint32_t)(minor)) << 12) | ((uint32_t)(patch)))"
                },
                {
                    "@category": "define",
                    "name": "VK_VERSION_MAJOR",
                    "#text": "// DEPRECATED: This define is deprecated. VK_API_VERSION_MAJOR should be used instead.\n#define (version) ((uint32_t)(version) >> 22)"
                },
                {
                    "@category": "define",
                    "name": "VK_VERSION_MINOR",
                    "#text": "// DEPRECATED: This define is deprecated. VK_API_VERSION_MINOR should be used instead.\n#define (version) (((uint32_t)(version) >> 12) & 0x3FFU)"
                },
                {
                    "@category": "define",
                    "name": "VK_VERSION_PATCH",
                    "#text": "// DEPRECATED: This define is deprecated. VK_API_VERSION_PATCH should be used instead.\n#define (version) ((uint32_t)(version) & 0xFFFU)"
                },
                {
                    "@category": "define",
                    "name": "VK_MAKE_API_VERSION",
                    "#text": "#define (variant, major, minor, patch) \\\n    ((((uint32_t)(variant)) << 29) | (((uint32_t)(major)) << 22) | (((uint32_t)(minor)) << 12) | ((uint32_t)(patch)))"
                },
                {
                    "@category": "define",
                    "name": "VK_API_VERSION_VARIANT",
                    "#text": "#define (version) ((uint32_t)(version) >> 29)"
                },
                {
                    "@category": "define",
                    "name": "VK_API_VERSION_MAJOR",
                    "#text": "#define (version) (((uint32_t)(version) >> 22) & 0x7FU)"
                },
                {
                    "@category": "define",
                    "name": "VK_API_VERSION_MINOR",
                    "#text": "#define (version) (((uint32_t)(version) >> 12) & 0x3FFU)"
                },
                {
                    "@category": "define",
                    "name": "VK_API_VERSION_PATCH",
                    "#text": "#define (version) ((uint32_t)(version) & 0xFFFU)"
                },
                {
                    "@category": "define",
                    "name": "VK_API_VERSION",
                    "type": "VK_MAKE_VERSION",
                    "#text": "// DEPRECATED: This define has been removed. Specific version defines (e.g. VK_API_VERSION_1_0), or the VK_MAKE_VERSION macro, should be used instead.\n//#define  (1, 0, 0) // Patch version should always be set to 0"
                },
                {
                    "@category": "define",
                    "@requires": "VK_MAKE_API_VERSION",
                    "name": "VK_API_VERSION_1_0",
                    "type": "VK_MAKE_API_VERSION",
                    "#text": "// Vulkan 1.0 version number\n#define  (0, 1, 0, 0)// Patch version should always be set to 0"
                },
                {
                    "@category": "define",
                    "@requires": "VK_MAKE_API_VERSION",
                    "name": "VK_API_VERSION_1_1",
                    "type": "VK_MAKE_API_VERSION",
                    "#text": "// Vulkan 1.1 version number\n#define  (0, 1, 1, 0)// Patch version should always be set to 0"
                },
                {
                    "@category": "define",
                    "@requires": "VK_MAKE_API_VERSION",
                    "name": "VK_API_VERSION_1_2",
                    "type": "VK_MAKE_API_VERSION",
                    "#text": "// Vulkan 1.2 version number\n#define  (0, 1, 2, 0)// Patch version should always be set to 0"
                },
                {
                    "@category": "define",
                    "@requires": "VK_MAKE_API_VERSION",
                    "name": "VK_API_VERSION_1_3",
                    "type": "VK_MAKE_API_VERSION",
                    "#text": "// Vulkan 1.3 version number\n#define  (0, 1, 3, 0)// Patch version should always be set to 0"
                },
                {
                    "@category": "define",
                    "name": "VK_HEADER_VERSION",
                    "#text": "// Version of this file\n#define  204"
                },
                {
                    "@category": "define",
                    "@requires": "VK_HEADER_VERSION",
                    "name": "VK_HEADER_VERSION_COMPLETE",
                    "type": "VK_MAKE_API_VERSION",
                    "#text": "// Complete version of this file\n#define  (0, 1, 3, VK_HEADER_VERSION)"
                },
                {
                    "@category": "define",
                    "name": "VK_DEFINE_HANDLE",
                    "#text": "#define (object) typedef struct object##_T* object;"
                },
                {
                    "@category": "define",
                    "@name": "VK_USE_64_BIT_PTR_DEFINES",
                    "#text": "#ifndef VK_USE_64_BIT_PTR_DEFINES\n    #if defined(__LP64__) || defined(_WIN64) || (defined(__x86_64__) && !defined(__ILP32__) ) || defined(_M_X64) || defined(__ia64) || defined (_M_IA64) || defined(__aarch64__) || defined(__powerpc64__)\n        #define VK_USE_64_BIT_PTR_DEFINES 1\n    #else\n        #define VK_USE_64_BIT_PTR_DEFINES 0\n    #endif\n#endif"
                },
                {
                    "@category": "define",
                    "@requires": "VK_USE_64_BIT_PTR_DEFINES",
                    "@name": "VK_NULL_HANDLE",
                    "#text": "#ifndef VK_DEFINE_NON_DISPATCHABLE_HANDLE\n    #if (VK_USE_64_BIT_PTR_DEFINES==1)\n        #if (defined(__cplusplus) && (__cplusplus >= 201103L)) || (defined(_MSVC_LANG) && (_MSVC_LANG >= 201103L))\n            #define VK_NULL_HANDLE nullptr\n        #else\n            #define VK_NULL_HANDLE ((void*)0)\n        #endif\n    #else\n        #define VK_NULL_HANDLE 0ULL\n    #endif\n#endif\n#ifndef VK_NULL_HANDLE\n    #define VK_NULL_HANDLE 0\n#endif"
                },
                {
                    "@category": "define",
                    "@requires": "VK_NULL_HANDLE",
                    "@name": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "#text": "#ifndef VK_DEFINE_NON_DISPATCHABLE_HANDLE\n    #if (VK_USE_64_BIT_PTR_DEFINES==1)\n        #define VK_DEFINE_NON_DISPATCHABLE_HANDLE(object) typedef struct object##_T *object;\n    #else\n        #define VK_DEFINE_NON_DISPATCHABLE_HANDLE(object) typedef uint64_t object;\n    #endif\n#endif"
                },
                {
                    "@category": "basetype",
                    "name": "ANativeWindow",
                    "#text": "struct ;"
                },
                {
                    "@category": "basetype",
                    "name": "AHardwareBuffer",
                    "#text": "struct ;"
                },
                {
                    "@category": "basetype",
                    "name": "CAMetalLayer",
                    "#text": "#ifdef __OBJC__\n@class CAMetalLayer;\n#else\ntypedef void ;\n#endif"
                },
                {
                    "@category": "basetype",
                    "type": "uint32_t",
                    "name": "VkSampleMask",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "basetype",
                    "type": "uint32_t",
                    "name": "VkBool32",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "basetype",
                    "type": "uint32_t",
                    "name": "VkFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "basetype",
                    "type": "uint64_t",
                    "name": "VkFlags64",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "basetype",
                    "type": "uint64_t",
                    "name": "VkDeviceSize",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "basetype",
                    "type": "uint64_t",
                    "name": "VkDeviceAddress",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "void"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "char"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "float"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "double"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "int8_t"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "uint8_t"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "int16_t"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "uint16_t"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "uint32_t"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "uint64_t"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "int32_t"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "int64_t"
                },
                {
                    "@requires": "vk_platform",
                    "@name": "size_t"
                },
                {
                    "@name": "int"
                },
                {
                    "@requires": "VkFramebufferCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkFramebufferCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkQueryPoolCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkRenderPassCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkRenderPassCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkSamplerCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSamplerCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineLayoutCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkPipelineCacheCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineCacheCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkPipelineDepthStencilStateCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineDepthStencilStateCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineDynamicStateCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkPipelineColorBlendStateCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineColorBlendStateCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineMultisampleStateCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineRasterizationStateCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineViewportStateCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineTessellationStateCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineInputAssemblyStateCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineVertexInputStateCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkPipelineShaderStageCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineShaderStageCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkDescriptorSetLayoutCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDescriptorSetLayoutCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkBufferViewCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkInstanceCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDeviceCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkDeviceQueueCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDeviceQueueCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkQueueFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkQueueFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkMemoryPropertyFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkMemoryPropertyFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkMemoryHeapFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkMemoryHeapFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkAccessFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkAccessFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkBufferUsageFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkBufferUsageFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkBufferCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkBufferCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkShaderStageFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkShaderStageFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkImageUsageFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkImageUsageFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkImageCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkImageCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkImageViewCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkImageViewCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkPipelineCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkColorComponentFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkColorComponentFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkFenceCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkFenceCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSemaphoreCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkFormatFeatureFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkFormatFeatureFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkQueryControlFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkQueryControlFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkQueryResultFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkQueryResultFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkShaderModuleCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkEventCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkEventCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkCommandPoolCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkCommandPoolCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkCommandPoolResetFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkCommandPoolResetFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkCommandBufferResetFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkCommandBufferResetFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkCommandBufferUsageFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkCommandBufferUsageFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkQueryPipelineStatisticFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkQueryPipelineStatisticFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkMemoryMapFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkImageAspectFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkImageAspectFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkSparseMemoryBindFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSparseMemoryBindFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkSparseImageFormatFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSparseImageFormatFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkSubpassDescriptionFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSubpassDescriptionFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkPipelineStageFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineStageFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkSampleCountFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSampleCountFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkAttachmentDescriptionFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkAttachmentDescriptionFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkStencilFaceFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkStencilFaceFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkCullModeFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkCullModeFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkDescriptorPoolCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDescriptorPoolCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDescriptorPoolResetFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkDependencyFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDependencyFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkSubgroupFeatureFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSubgroupFeatureFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkIndirectCommandsLayoutUsageFlagBitsNV",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkIndirectCommandsLayoutUsageFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkIndirectStateFlagBitsNV",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkIndirectStateFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkGeometryFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkGeometryFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkGeometryFlagsNV",
                    "@alias": "VkGeometryFlagsKHR"
                },
                {
                    "@requires": "VkGeometryInstanceFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkGeometryInstanceFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkGeometryInstanceFlagsNV",
                    "@alias": "VkGeometryInstanceFlagsKHR"
                },
                {
                    "@requires": "VkBuildAccelerationStructureFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkBuildAccelerationStructureFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkBuildAccelerationStructureFlagsNV",
                    "@alias": "VkBuildAccelerationStructureFlagsKHR"
                },
                {
                    "@requires": "VkPrivateDataSlotCreateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPrivateDataSlotCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkPrivateDataSlotCreateFlagsEXT",
                    "@alias": "VkPrivateDataSlotCreateFlags"
                },
                {
                    "@requires": "VkAccelerationStructureCreateFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkAccelerationStructureCreateFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDescriptorUpdateTemplateCreateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkDescriptorUpdateTemplateCreateFlagsKHR",
                    "@alias": "VkDescriptorUpdateTemplateCreateFlags"
                },
                {
                    "@requires": "VkPipelineCreationFeedbackFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineCreationFeedbackFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkPipelineCreationFeedbackFlagsEXT",
                    "@alias": "VkPipelineCreationFeedbackFlags"
                },
                {
                    "@requires": "VkPerformanceCounterDescriptionFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPerformanceCounterDescriptionFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkAcquireProfilingLockFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkAcquireProfilingLockFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkSemaphoreWaitFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSemaphoreWaitFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkSemaphoreWaitFlagsKHR",
                    "@alias": "VkSemaphoreWaitFlags"
                },
                {
                    "@requires": "VkPipelineCompilerControlFlagBitsAMD",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineCompilerControlFlagsAMD",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkShaderCorePropertiesFlagBitsAMD",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkShaderCorePropertiesFlagsAMD",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkDeviceDiagnosticsConfigFlagBitsNV",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDeviceDiagnosticsConfigFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@bitvalues": "VkAccessFlagBits2",
                    "@category": "bitmask",
                    "type": "VkFlags64",
                    "name": "VkAccessFlags2",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkAccessFlags2KHR",
                    "@alias": "VkAccessFlags2"
                },
                {
                    "@bitvalues": "VkPipelineStageFlagBits2",
                    "@category": "bitmask",
                    "type": "VkFlags64",
                    "name": "VkPipelineStageFlags2",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkPipelineStageFlags2KHR",
                    "@alias": "VkPipelineStageFlags2"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkAccelerationStructureMotionInfoFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkAccelerationStructureMotionInstanceFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@bitvalues": "VkFormatFeatureFlagBits2",
                    "@category": "bitmask",
                    "type": "VkFlags64",
                    "name": "VkFormatFeatureFlags2",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkFormatFeatureFlags2KHR",
                    "@alias": "VkFormatFeatureFlags2"
                },
                {
                    "@requires": "VkRenderingFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkRenderingFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkRenderingFlagsKHR",
                    "@alias": "VkRenderingFlags"
                },
                {
                    "@requires": "VkCompositeAlphaFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkCompositeAlphaFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkDisplayPlaneAlphaFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDisplayPlaneAlphaFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkSurfaceTransformFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSurfaceTransformFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkSwapchainCreateFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSwapchainCreateFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDisplayModeCreateFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDisplaySurfaceCreateFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkAndroidSurfaceCreateFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkViSurfaceCreateFlagsNN",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkWaylandSurfaceCreateFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkWin32SurfaceCreateFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkXlibSurfaceCreateFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkXcbSurfaceCreateFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDirectFBSurfaceCreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkIOSSurfaceCreateFlagsMVK",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkMacOSSurfaceCreateFlagsMVK",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkMetalSurfaceCreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkImagePipeSurfaceCreateFlagsFUCHSIA",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkStreamDescriptorSurfaceCreateFlagsGGP",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkHeadlessSurfaceCreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkScreenSurfaceCreateFlagsQNX",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkPeerMemoryFeatureFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPeerMemoryFeatureFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkPeerMemoryFeatureFlagsKHR",
                    "@alias": "VkPeerMemoryFeatureFlags"
                },
                {
                    "@requires": "VkMemoryAllocateFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkMemoryAllocateFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkMemoryAllocateFlagsKHR",
                    "@alias": "VkMemoryAllocateFlags"
                },
                {
                    "@requires": "VkDeviceGroupPresentModeFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDeviceGroupPresentModeFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkDebugReportFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDebugReportFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkCommandPoolTrimFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkCommandPoolTrimFlagsKHR",
                    "@alias": "VkCommandPoolTrimFlags"
                },
                {
                    "@requires": "VkExternalMemoryHandleTypeFlagBitsNV",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkExternalMemoryHandleTypeFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkExternalMemoryFeatureFlagBitsNV",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkExternalMemoryFeatureFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkExternalMemoryHandleTypeFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkExternalMemoryHandleTypeFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkExternalMemoryHandleTypeFlagsKHR",
                    "@alias": "VkExternalMemoryHandleTypeFlags"
                },
                {
                    "@requires": "VkExternalMemoryFeatureFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkExternalMemoryFeatureFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkExternalMemoryFeatureFlagsKHR",
                    "@alias": "VkExternalMemoryFeatureFlags"
                },
                {
                    "@requires": "VkExternalSemaphoreHandleTypeFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkExternalSemaphoreHandleTypeFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkExternalSemaphoreHandleTypeFlagsKHR",
                    "@alias": "VkExternalSemaphoreHandleTypeFlags"
                },
                {
                    "@requires": "VkExternalSemaphoreFeatureFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkExternalSemaphoreFeatureFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkExternalSemaphoreFeatureFlagsKHR",
                    "@alias": "VkExternalSemaphoreFeatureFlags"
                },
                {
                    "@requires": "VkSemaphoreImportFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSemaphoreImportFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkSemaphoreImportFlagsKHR",
                    "@alias": "VkSemaphoreImportFlags"
                },
                {
                    "@requires": "VkExternalFenceHandleTypeFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkExternalFenceHandleTypeFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkExternalFenceHandleTypeFlagsKHR",
                    "@alias": "VkExternalFenceHandleTypeFlags"
                },
                {
                    "@requires": "VkExternalFenceFeatureFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkExternalFenceFeatureFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkExternalFenceFeatureFlagsKHR",
                    "@alias": "VkExternalFenceFeatureFlags"
                },
                {
                    "@requires": "VkFenceImportFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkFenceImportFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkFenceImportFlagsKHR",
                    "@alias": "VkFenceImportFlags"
                },
                {
                    "@requires": "VkSurfaceCounterFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSurfaceCounterFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineViewportSwizzleStateCreateFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineDiscardRectangleStateCreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineCoverageToColorStateCreateFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineCoverageModulationStateCreateFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineCoverageReductionStateCreateFlagsNV",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkValidationCacheCreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkDebugUtilsMessageSeverityFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDebugUtilsMessageSeverityFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkDebugUtilsMessageTypeFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDebugUtilsMessageTypeFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDebugUtilsMessengerCreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDebugUtilsMessengerCallbackDataFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDeviceMemoryReportFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineRasterizationConservativeStateCreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkDescriptorBindingFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkDescriptorBindingFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkDescriptorBindingFlagsEXT",
                    "@alias": "VkDescriptorBindingFlags"
                },
                {
                    "@requires": "VkConditionalRenderingFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkConditionalRenderingFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkResolveModeFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkResolveModeFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkResolveModeFlagsKHR",
                    "@alias": "VkResolveModeFlags"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineRasterizationStateStreamCreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkPipelineRasterizationDepthClipStateCreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkSwapchainImageUsageFlagBitsANDROID",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSwapchainImageUsageFlagsANDROID",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkToolPurposeFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkToolPurposeFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkToolPurposeFlagsEXT",
                    "@alias": "VkToolPurposeFlags"
                },
                {
                    "@requires": "VkSubmitFlagBits",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkSubmitFlags",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "@name": "VkSubmitFlagsKHR",
                    "@alias": "VkSubmitFlags"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkImageFormatConstraintsFlagsFUCHSIA",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkImageConstraintsInfoFlagBitsFUCHSIA",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkImageConstraintsInfoFlagsFUCHSIA",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoCodecOperationFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoCodecOperationFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoCapabilityFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoCapabilityFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoSessionCreateFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoSessionCreateFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoBeginCodingFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEndCodingFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoCodingQualityPresetFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoCodingQualityPresetFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoCodingControlFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoCodingControlFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoDecodeFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoDecodeFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoDecodeH264PictureLayoutFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoDecodeH264PictureLayoutFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoDecodeH264CreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoDecodeH265CreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeRateControlFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeRateControlFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeRateControlModeFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeRateControlModeFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoChromaSubsamplingFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoChromaSubsamplingFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoComponentBitDepthFlagBitsKHR",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoComponentBitDepthFlagsKHR",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeH264CapabilityFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH264CapabilityFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeH264InputModeFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH264InputModeFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeH264OutputModeFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH264OutputModeFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeH264CreateFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH264CreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeH264RateControlStructureFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH264RateControlStructureFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH265CapabilityFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeH265InputModeFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH265InputModeFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeH265OutputModeFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH265OutputModeFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH265CreateFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeH265CtbSizeFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH265CtbSizeFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@requires": "VkVideoEncodeH265RateControlStructureFlagBitsEXT",
                    "@category": "bitmask",
                    "type": "VkFlags",
                    "name": "VkVideoEncodeH265RateControlStructureFlagsEXT",
                    "#text": "typedef  ;"
                },
                {
                    "@category": "handle",
                    "@objtypeenum": "VK_OBJECT_TYPE_INSTANCE",
                    "type": "VK_DEFINE_HANDLE",
                    "name": "VkInstance",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkInstance",
                    "@objtypeenum": "VK_OBJECT_TYPE_PHYSICAL_DEVICE",
                    "type": "VK_DEFINE_HANDLE",
                    "name": "VkPhysicalDevice",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkPhysicalDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_DEVICE",
                    "type": "VK_DEFINE_HANDLE",
                    "name": "VkDevice",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_QUEUE",
                    "type": "VK_DEFINE_HANDLE",
                    "name": "VkQueue",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkCommandPool",
                    "@objtypeenum": "VK_OBJECT_TYPE_COMMAND_BUFFER",
                    "type": "VK_DEFINE_HANDLE",
                    "name": "VkCommandBuffer",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_DEVICE_MEMORY",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkDeviceMemory",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_COMMAND_POOL",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkCommandPool",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_BUFFER",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkBuffer",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_BUFFER_VIEW",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkBufferView",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_IMAGE",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkImage",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_IMAGE_VIEW",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkImageView",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_SHADER_MODULE",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkShaderModule",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_PIPELINE",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkPipeline",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_PIPELINE_LAYOUT",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkPipelineLayout",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_SAMPLER",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkSampler",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDescriptorPool",
                    "@objtypeenum": "VK_OBJECT_TYPE_DESCRIPTOR_SET",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkDescriptorSet",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkDescriptorSetLayout",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_DESCRIPTOR_POOL",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkDescriptorPool",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_FENCE",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkFence",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_SEMAPHORE",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkSemaphore",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_EVENT",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkEvent",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_QUERY_POOL",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkQueryPool",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_FRAMEBUFFER",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkFramebuffer",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_RENDER_PASS",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkRenderPass",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_PIPELINE_CACHE",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkPipelineCache",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkIndirectCommandsLayoutNV",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkDescriptorUpdateTemplate",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@name": "VkDescriptorUpdateTemplateKHR",
                    "@alias": "VkDescriptorUpdateTemplate"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkSamplerYcbcrConversion",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@name": "VkSamplerYcbcrConversionKHR",
                    "@alias": "VkSamplerYcbcrConversion"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_VALIDATION_CACHE_EXT",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkValidationCacheEXT",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkAccelerationStructureKHR",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkAccelerationStructureNV",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkPerformanceConfigurationINTEL",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkBufferCollectionFUCHSIA",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkDeferredOperationKHR",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_PRIVATE_DATA_SLOT",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkPrivateDataSlot",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@name": "VkPrivateDataSlotEXT",
                    "@alias": "VkPrivateDataSlot"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_CU_MODULE_NVX",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkCuModuleNVX",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_CU_FUNCTION_NVX",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkCuFunctionNVX",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkPhysicalDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_DISPLAY_KHR",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkDisplayKHR",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDisplayKHR",
                    "@objtypeenum": "VK_OBJECT_TYPE_DISPLAY_MODE_KHR",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkDisplayModeKHR",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkInstance",
                    "@objtypeenum": "VK_OBJECT_TYPE_SURFACE_KHR",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkSurfaceKHR",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkSurfaceKHR",
                    "@objtypeenum": "VK_OBJECT_TYPE_SWAPCHAIN_KHR",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkSwapchainKHR",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkInstance",
                    "@objtypeenum": "VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkDebugReportCallbackEXT",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkInstance",
                    "@objtypeenum": "VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkDebugUtilsMessengerEXT",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkDevice",
                    "@objtypeenum": "VK_OBJECT_TYPE_VIDEO_SESSION_KHR",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkVideoSessionKHR",
                    "#text": "()"
                },
                {
                    "@category": "handle",
                    "@parent": "VkVideoSessionKHR",
                    "@objtypeenum": "VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR",
                    "type": "VK_DEFINE_NON_DISPATCHABLE_HANDLE",
                    "name": "VkVideoSessionParametersKHR",
                    "#text": "()"
                },
                {
                    "@name": "VkAttachmentLoadOp",
                    "@category": "enum"
                },
                {
                    "@name": "VkAttachmentStoreOp",
                    "@category": "enum"
                },
                {
                    "@name": "VkBlendFactor",
                    "@category": "enum"
                },
                {
                    "@name": "VkBlendOp",
                    "@category": "enum"
                },
                {
                    "@name": "VkBorderColor",
                    "@category": "enum"
                },
                {
                    "@name": "VkFramebufferCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkQueryPoolCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkRenderPassCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkSamplerCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineCacheHeaderVersion",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineCacheCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineShaderStageCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkDescriptorSetLayoutCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkInstanceCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkDeviceQueueCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkBufferCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkBufferUsageFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkColorComponentFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkComponentSwizzle",
                    "@category": "enum"
                },
                {
                    "@name": "VkCommandPoolCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkCommandPoolResetFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkCommandBufferResetFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkCommandBufferLevel",
                    "@category": "enum"
                },
                {
                    "@name": "VkCommandBufferUsageFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkCompareOp",
                    "@category": "enum"
                },
                {
                    "@name": "VkCullModeFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkDescriptorType",
                    "@category": "enum"
                },
                {
                    "@name": "VkDeviceCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkDynamicState",
                    "@category": "enum"
                },
                {
                    "@name": "VkFenceCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkPolygonMode",
                    "@category": "enum"
                },
                {
                    "@name": "VkFormat",
                    "@category": "enum"
                },
                {
                    "@name": "VkFormatFeatureFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkFrontFace",
                    "@category": "enum"
                },
                {
                    "@name": "VkImageAspectFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkImageCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkImageLayout",
                    "@category": "enum"
                },
                {
                    "@name": "VkImageTiling",
                    "@category": "enum"
                },
                {
                    "@name": "VkImageType",
                    "@category": "enum"
                },
                {
                    "@name": "VkImageUsageFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkImageViewCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkImageViewType",
                    "@category": "enum"
                },
                {
                    "@name": "VkSharingMode",
                    "@category": "enum"
                },
                {
                    "@name": "VkIndexType",
                    "@category": "enum"
                },
                {
                    "@name": "VkLogicOp",
                    "@category": "enum"
                },
                {
                    "@name": "VkMemoryHeapFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkAccessFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkMemoryPropertyFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkPhysicalDeviceType",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineBindPoint",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkPrimitiveTopology",
                    "@category": "enum"
                },
                {
                    "@name": "VkQueryControlFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkQueryPipelineStatisticFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkQueryResultFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkQueryType",
                    "@category": "enum"
                },
                {
                    "@name": "VkQueueFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkSubpassContents",
                    "@category": "enum"
                },
                {
                    "@name": "VkResult",
                    "@category": "enum"
                },
                {
                    "@name": "VkShaderStageFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkSparseMemoryBindFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkStencilFaceFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkStencilOp",
                    "@category": "enum"
                },
                {
                    "@name": "VkStructureType",
                    "@category": "enum"
                },
                {
                    "@name": "VkSystemAllocationScope",
                    "@category": "enum"
                },
                {
                    "@name": "VkInternalAllocationType",
                    "@category": "enum"
                },
                {
                    "@name": "VkSamplerAddressMode",
                    "@category": "enum"
                },
                {
                    "@name": "VkFilter",
                    "@category": "enum"
                },
                {
                    "@name": "VkSamplerMipmapMode",
                    "@category": "enum"
                },
                {
                    "@name": "VkVertexInputRate",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineStageFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkSparseImageFormatFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkSampleCountFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkAttachmentDescriptionFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkDescriptorPoolCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkDependencyFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkObjectType",
                    "@category": "enum"
                },
                {
                    "@name": "VkEventCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineLayoutCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkSemaphoreCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkIndirectCommandsLayoutUsageFlagBitsNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkIndirectCommandsTokenTypeNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkIndirectStateFlagBitsNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkPrivateDataSlotCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkPrivateDataSlotCreateFlagBitsEXT",
                    "@alias": "VkPrivateDataSlotCreateFlagBits"
                },
                {
                    "@name": "VkDescriptorUpdateTemplateType",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkDescriptorUpdateTemplateTypeKHR",
                    "@alias": "VkDescriptorUpdateTemplateType"
                },
                {
                    "@name": "VkViewportCoordinateSwizzleNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkDiscardRectangleModeEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkSubpassDescriptionFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkPointClippingBehavior",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkPointClippingBehaviorKHR",
                    "@alias": "VkPointClippingBehavior"
                },
                {
                    "@name": "VkCoverageModulationModeNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkCoverageReductionModeNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkValidationCacheHeaderVersionEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkShaderInfoTypeAMD",
                    "@category": "enum"
                },
                {
                    "@name": "VkQueueGlobalPriorityKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkQueueGlobalPriorityEXT",
                    "@category": "enum",
                    "@alias": "VkQueueGlobalPriorityKHR"
                },
                {
                    "@name": "VkTimeDomainEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkConservativeRasterizationModeEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkResolveModeFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkResolveModeFlagBitsKHR",
                    "@alias": "VkResolveModeFlagBits"
                },
                {
                    "@name": "VkDescriptorBindingFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkDescriptorBindingFlagBitsEXT",
                    "@alias": "VkDescriptorBindingFlagBits"
                },
                {
                    "@name": "VkConditionalRenderingFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkSemaphoreType",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkSemaphoreTypeKHR",
                    "@alias": "VkSemaphoreType"
                },
                {
                    "@name": "VkGeometryFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkGeometryFlagBitsNV",
                    "@alias": "VkGeometryFlagBitsKHR"
                },
                {
                    "@name": "VkGeometryInstanceFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkGeometryInstanceFlagBitsNV",
                    "@alias": "VkGeometryInstanceFlagBitsKHR"
                },
                {
                    "@name": "VkBuildAccelerationStructureFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkBuildAccelerationStructureFlagBitsNV",
                    "@alias": "VkBuildAccelerationStructureFlagBitsKHR"
                },
                {
                    "@name": "VkAccelerationStructureCreateFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkBuildAccelerationStructureModeKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkCopyAccelerationStructureModeKHR",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkCopyAccelerationStructureModeNV",
                    "@alias": "VkCopyAccelerationStructureModeKHR"
                },
                {
                    "@name": "VkAccelerationStructureTypeKHR",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkAccelerationStructureTypeNV",
                    "@alias": "VkAccelerationStructureTypeKHR"
                },
                {
                    "@name": "VkGeometryTypeKHR",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkGeometryTypeNV",
                    "@alias": "VkGeometryTypeKHR"
                },
                {
                    "@name": "VkRayTracingShaderGroupTypeKHR",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkRayTracingShaderGroupTypeNV",
                    "@alias": "VkRayTracingShaderGroupTypeKHR"
                },
                {
                    "@name": "VkAccelerationStructureMemoryRequirementsTypeNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkAccelerationStructureBuildTypeKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkAccelerationStructureCompatibilityKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkShaderGroupShaderKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkMemoryOverallocationBehaviorAMD",
                    "@category": "enum"
                },
                {
                    "@name": "VkScopeNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkComponentTypeNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkDeviceDiagnosticsConfigFlagBitsNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineCreationFeedbackFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkPipelineCreationFeedbackFlagBitsEXT",
                    "@alias": "VkPipelineCreationFeedbackFlagBits"
                },
                {
                    "@name": "VkPerformanceCounterScopeKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkPerformanceCounterUnitKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkPerformanceCounterStorageKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkPerformanceCounterDescriptionFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkAcquireProfilingLockFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkSemaphoreWaitFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkSemaphoreWaitFlagBitsKHR",
                    "@alias": "VkSemaphoreWaitFlagBits"
                },
                {
                    "@name": "VkPerformanceConfigurationTypeINTEL",
                    "@category": "enum"
                },
                {
                    "@name": "VkQueryPoolSamplingModeINTEL",
                    "@category": "enum"
                },
                {
                    "@name": "VkPerformanceOverrideTypeINTEL",
                    "@category": "enum"
                },
                {
                    "@name": "VkPerformanceParameterTypeINTEL",
                    "@category": "enum"
                },
                {
                    "@name": "VkPerformanceValueTypeINTEL",
                    "@category": "enum"
                },
                {
                    "@name": "VkLineRasterizationModeEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkShaderModuleCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineCompilerControlFlagBitsAMD",
                    "@category": "enum"
                },
                {
                    "@name": "VkShaderCorePropertiesFlagBitsAMD",
                    "@category": "enum"
                },
                {
                    "@name": "VkToolPurposeFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkToolPurposeFlagBitsEXT",
                    "@alias": "VkToolPurposeFlagBits"
                },
                {
                    "@name": "VkFragmentShadingRateNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkFragmentShadingRateTypeNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkAccessFlagBits2",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkAccessFlagBits2KHR",
                    "@alias": "VkAccessFlagBits2"
                },
                {
                    "@name": "VkPipelineStageFlagBits2",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkPipelineStageFlagBits2KHR",
                    "@alias": "VkPipelineStageFlagBits2"
                },
                {
                    "@name": "VkProvokingVertexModeEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkImageFormatConstraintsFlagBitsFUCHSIA",
                    "@category": "enum"
                },
                {
                    "@name": "VkImageConstraintsInfoFlagBitsFUCHSIA",
                    "@category": "enum"
                },
                {
                    "@name": "VkFormatFeatureFlagBits2",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkFormatFeatureFlagBits2KHR",
                    "@alias": "VkFormatFeatureFlagBits2"
                },
                {
                    "@name": "VkRenderingFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkRenderingFlagBitsKHR",
                    "@alias": "VkRenderingFlagBits"
                },
                {
                    "@name": "VkPipelineDepthStencilStateCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineColorBlendStateCreateFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkColorSpaceKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkCompositeAlphaFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkDisplayPlaneAlphaFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkPresentModeKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkSurfaceTransformFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkDebugReportFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkDebugReportObjectTypeEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkDeviceMemoryReportEventTypeEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkRasterizationOrderAMD",
                    "@category": "enum"
                },
                {
                    "@name": "VkExternalMemoryHandleTypeFlagBitsNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkExternalMemoryFeatureFlagBitsNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkValidationCheckEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkValidationFeatureEnableEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkValidationFeatureDisableEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkExternalMemoryHandleTypeFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkExternalMemoryHandleTypeFlagBitsKHR",
                    "@alias": "VkExternalMemoryHandleTypeFlagBits"
                },
                {
                    "@name": "VkExternalMemoryFeatureFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkExternalMemoryFeatureFlagBitsKHR",
                    "@alias": "VkExternalMemoryFeatureFlagBits"
                },
                {
                    "@name": "VkExternalSemaphoreHandleTypeFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkExternalSemaphoreHandleTypeFlagBitsKHR",
                    "@alias": "VkExternalSemaphoreHandleTypeFlagBits"
                },
                {
                    "@name": "VkExternalSemaphoreFeatureFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkExternalSemaphoreFeatureFlagBitsKHR",
                    "@alias": "VkExternalSemaphoreFeatureFlagBits"
                },
                {
                    "@name": "VkSemaphoreImportFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkSemaphoreImportFlagBitsKHR",
                    "@alias": "VkSemaphoreImportFlagBits"
                },
                {
                    "@name": "VkExternalFenceHandleTypeFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkExternalFenceHandleTypeFlagBitsKHR",
                    "@alias": "VkExternalFenceHandleTypeFlagBits"
                },
                {
                    "@name": "VkExternalFenceFeatureFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkExternalFenceFeatureFlagBitsKHR",
                    "@alias": "VkExternalFenceFeatureFlagBits"
                },
                {
                    "@name": "VkFenceImportFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkFenceImportFlagBitsKHR",
                    "@alias": "VkFenceImportFlagBits"
                },
                {
                    "@name": "VkSurfaceCounterFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkDisplayPowerStateEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkDeviceEventTypeEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkDisplayEventTypeEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkPeerMemoryFeatureFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkPeerMemoryFeatureFlagBitsKHR",
                    "@alias": "VkPeerMemoryFeatureFlagBits"
                },
                {
                    "@name": "VkMemoryAllocateFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkMemoryAllocateFlagBitsKHR",
                    "@alias": "VkMemoryAllocateFlagBits"
                },
                {
                    "@name": "VkDeviceGroupPresentModeFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkSwapchainCreateFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkSubgroupFeatureFlagBits",
                    "@category": "enum"
                },
                {
                    "@name": "VkTessellationDomainOrigin",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkTessellationDomainOriginKHR",
                    "@alias": "VkTessellationDomainOrigin"
                },
                {
                    "@name": "VkSamplerYcbcrModelConversion",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkSamplerYcbcrModelConversionKHR",
                    "@alias": "VkSamplerYcbcrModelConversion"
                },
                {
                    "@name": "VkSamplerYcbcrRange",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkSamplerYcbcrRangeKHR",
                    "@alias": "VkSamplerYcbcrRange"
                },
                {
                    "@name": "VkChromaLocation",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkChromaLocationKHR",
                    "@alias": "VkChromaLocation"
                },
                {
                    "@name": "VkSamplerReductionMode",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkSamplerReductionModeEXT",
                    "@alias": "VkSamplerReductionMode"
                },
                {
                    "@name": "VkBlendOverlapEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkDebugUtilsMessageSeverityFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkDebugUtilsMessageTypeFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkFullScreenExclusiveEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkShaderFloatControlsIndependence",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkShaderFloatControlsIndependenceKHR",
                    "@alias": "VkShaderFloatControlsIndependence"
                },
                {
                    "@name": "VkSwapchainImageUsageFlagBitsANDROID",
                    "@category": "enum"
                },
                {
                    "@name": "VkFragmentShadingRateCombinerOpKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkSubmitFlagBits",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkSubmitFlagBitsKHR",
                    "@alias": "VkSubmitFlagBits"
                },
                {
                    "@name": "VkVendorId",
                    "@category": "enum"
                },
                {
                    "@name": "VkDriverId",
                    "@category": "enum"
                },
                {
                    "@category": "enum",
                    "@name": "VkDriverIdKHR",
                    "@alias": "VkDriverId"
                },
                {
                    "@name": "VkShadingRatePaletteEntryNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkCoarseSampleOrderTypeNV",
                    "@category": "enum"
                },
                {
                    "@name": "VkPipelineExecutableStatisticFormatKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoCodecOperationFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoChromaSubsamplingFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoComponentBitDepthFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoCapabilityFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoSessionCreateFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoCodingQualityPresetFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoCodingControlFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkQueryResultStatusKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoDecodeFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoDecodeH264PictureLayoutFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeRateControlFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeRateControlModeFlagBitsKHR",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeH264CapabilityFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeH264InputModeFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeH264OutputModeFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeH264CreateFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeH264RateControlStructureFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeH265InputModeFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeH265OutputModeFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeH265CtbSizeFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@name": "VkVideoEncodeH265RateControlStructureFlagBitsEXT",
                    "@category": "enum"
                },
                {
                    "@category": "funcpointer",
                    "name": "PFN_vkInternalAllocationNotification",
                    "type": [
                        "void",
                        "size_t",
                        "VkInternalAllocationType",
                        "VkSystemAllocationScope"
                    ],
                    "#text": "typedef void (VKAPI_PTR *)(\n    *                                       pUserData,\n                                          size,\n                        allocationType,\n                         allocationScope);"
                },
                {
                    "@category": "funcpointer",
                    "name": "PFN_vkInternalFreeNotification",
                    "type": [
                        "void",
                        "size_t",
                        "VkInternalAllocationType",
                        "VkSystemAllocationScope"
                    ],
                    "#text": "typedef void (VKAPI_PTR *)(\n    *                                       pUserData,\n                                          size,\n                        allocationType,\n                         allocationScope);"
                },
                {
                    "@category": "funcpointer",
                    "name": "PFN_vkReallocationFunction",
                    "type": [
                        "void",
                        "void",
                        "size_t",
                        "size_t",
                        "VkSystemAllocationScope"
                    ],
                    "#text": "typedef void* (VKAPI_PTR *)(\n    *                                       pUserData,\n    *                                       pOriginal,\n                                          size,\n                                          alignment,\n                         allocationScope);"
                },
                {
                    "@category": "funcpointer",
                    "name": "PFN_vkAllocationFunction",
                    "type": [
                        "void",
                        "size_t",
                        "size_t",
                        "VkSystemAllocationScope"
                    ],
                    "#text": "typedef void* (VKAPI_PTR *)(\n    *                                       pUserData,\n                                          size,\n                                          alignment,\n                         allocationScope);"
                },
                {
                    "@category": "funcpointer",
                    "name": "PFN_vkFreeFunction",
                    "type": [
                        "void",
                        "void"
                    ],
                    "#text": "typedef void (VKAPI_PTR *)(\n    *                                       pUserData,\n    *                                       pMemory);"
                },
                {
                    "@category": "funcpointer",
                    "name": "PFN_vkVoidFunction",
                    "#text": "typedef void (VKAPI_PTR *)(void);"
                },
                {
                    "@category": "funcpointer",
                    "name": "PFN_vkDebugReportCallbackEXT",
                    "type": [
                        "VkDebugReportFlagsEXT",
                        "VkDebugReportObjectTypeEXT",
                        "uint64_t",
                        "size_t",
                        "int32_t",
                        "char",
                        "char",
                        "void"
                    ],
                    "#text": "typedef VkBool32 (VKAPI_PTR *)(\n                           flags,\n                      objectType,\n                                        object,\n                                          location,\n                                         messageCode,\n    const *                                 pLayerPrefix,\n    const *                                 pMessage,\n    *                                       pUserData);"
                },
                {
                    "@category": "funcpointer",
                    "@requires": "VkDebugUtilsMessengerCallbackDataEXT",
                    "name": "PFN_vkDebugUtilsMessengerCallbackEXT",
                    "type": [
                        "VkDebugUtilsMessageSeverityFlagBitsEXT",
                        "VkDebugUtilsMessageTypeFlagsEXT",
                        "VkDebugUtilsMessengerCallbackDataEXT",
                        "void"
                    ],
                    "#text": "typedef VkBool32 (VKAPI_PTR *)(\n               messageSeverity,\n                      messageTypes,\n    const *      pCallbackData,\n    *                                            pUserData);"
                },
                {
                    "@category": "funcpointer",
                    "@requires": "VkDeviceMemoryReportCallbackDataEXT",
                    "name": "PFN_vkDeviceMemoryReportCallbackEXT",
                    "type": [
                        "VkDeviceMemoryReportCallbackDataEXT",
                        "void"
                    ],
                    "#text": "typedef void (VKAPI_PTR *)(\n    const *  pCallbackData,\n    *                                       pUserData);"
                },
                {
                    "@category": "struct",
                    "@name": "VkBaseOutStructure",
                    "member": [
                        {
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBaseOutStructure",
                            "name": "pNext",
                            "#text": "struct *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBaseInStructure",
                    "member": [
                        {
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBaseInStructure",
                            "name": "pNext",
                            "#text": "const struct *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkOffset2D",
                    "member": [
                        {
                            "type": "int32_t",
                            "name": "x"
                        },
                        {
                            "type": "int32_t",
                            "name": "y"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkOffset3D",
                    "member": [
                        {
                            "type": "int32_t",
                            "name": "x"
                        },
                        {
                            "type": "int32_t",
                            "name": "y"
                        },
                        {
                            "type": "int32_t",
                            "name": "z"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExtent2D",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "width"
                        },
                        {
                            "type": "uint32_t",
                            "name": "height"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExtent3D",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "width"
                        },
                        {
                            "type": "uint32_t",
                            "name": "height"
                        },
                        {
                            "type": "uint32_t",
                            "name": "depth"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkViewport",
                    "member": [
                        {
                            "@noautovalidity": "true",
                            "type": "float",
                            "name": "x"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "float",
                            "name": "y"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "float",
                            "name": "width"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "float",
                            "name": "height"
                        },
                        {
                            "type": "float",
                            "name": "minDepth"
                        },
                        {
                            "type": "float",
                            "name": "maxDepth"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRect2D",
                    "member": [
                        {
                            "type": "VkOffset2D",
                            "name": "offset"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "extent"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkClearRect",
                    "member": [
                        {
                            "type": "VkRect2D",
                            "name": "rect"
                        },
                        {
                            "type": "uint32_t",
                            "name": "baseArrayLayer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "layerCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkComponentMapping",
                    "member": [
                        {
                            "type": "VkComponentSwizzle",
                            "name": "r"
                        },
                        {
                            "type": "VkComponentSwizzle",
                            "name": "g"
                        },
                        {
                            "type": "VkComponentSwizzle",
                            "name": "b"
                        },
                        {
                            "type": "VkComponentSwizzle",
                            "name": "a"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "apiVersion"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "driverVersion"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "vendorID"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "deviceID"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkPhysicalDeviceType",
                            "name": "deviceType"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "char",
                            "name": "deviceName",
                            "enum": [
                                "VK_MAX_PHYSICAL_DEVICE_NAME_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint8_t",
                            "name": "pipelineCacheUUID",
                            "enum": [
                                "VK_UUID_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "struct",
                            "type": "VkPhysicalDeviceLimits",
                            "name": "limits"
                        },
                        {
                            "@limittype": "struct",
                            "type": "VkPhysicalDeviceSparseProperties",
                            "name": "sparseProperties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExtensionProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "char",
                            "name": "extensionName",
                            "enum": [
                                "VK_MAX_EXTENSION_NAME_SIZE"
                            ],
                            "comment": "extension name",
                            "#text": "[]"
                        },
                        {
                            "type": "uint32_t",
                            "name": "specVersion",
                            "comment": "version of the extension specification implemented"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkLayerProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "char",
                            "name": "layerName",
                            "enum": [
                                "VK_MAX_EXTENSION_NAME_SIZE"
                            ],
                            "comment": "layer name",
                            "#text": "[]"
                        },
                        {
                            "type": "uint32_t",
                            "name": "specVersion",
                            "comment": "version of the layer specification implemented"
                        },
                        {
                            "type": "uint32_t",
                            "name": "implementationVersion",
                            "comment": "build or release version of the layer's library"
                        },
                        {
                            "type": "char",
                            "name": "description",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "comment": "Free-form description of the layer",
                            "#text": "[]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkApplicationInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_APPLICATION_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pApplicationName",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "applicationVersion"
                        },
                        {
                            "@optional": "true",
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pEngineName",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "engineVersion"
                        },
                        {
                            "type": "uint32_t",
                            "name": "apiVersion"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAllocationCallbacks",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pUserData",
                            "#text": "*"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "PFN_vkAllocationFunction",
                            "name": "pfnAllocation"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "PFN_vkReallocationFunction",
                            "name": "pfnReallocation"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "PFN_vkFreeFunction",
                            "name": "pfnFree"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "PFN_vkInternalAllocationNotification",
                            "name": "pfnInternalAllocation"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "PFN_vkInternalFreeNotification",
                            "name": "pfnInternalFree"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceQueueCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeviceQueueCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueCount"
                        },
                        {
                            "@len": "queueCount",
                            "type": "float",
                            "name": "pQueuePriorities",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeviceCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueCreateInfoCount"
                        },
                        {
                            "@len": "queueCreateInfoCount",
                            "type": "VkDeviceQueueCreateInfo",
                            "name": "pQueueCreateInfos",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "enabledLayerCount"
                        },
                        {
                            "@len": "enabledLayerCount,null-terminated",
                            "type": "char",
                            "name": "ppEnabledLayerNames",
                            "comment": "Ordered list of layer names to be enabled",
                            "#text": "const * const*"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "enabledExtensionCount"
                        },
                        {
                            "@len": "enabledExtensionCount,null-terminated",
                            "type": "char",
                            "name": "ppEnabledExtensionNames",
                            "#text": "const * const*"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPhysicalDeviceFeatures",
                            "name": "pEnabledFeatures",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkInstanceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkInstanceCreateFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "VkApplicationInfo",
                            "name": "pApplicationInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "enabledLayerCount"
                        },
                        {
                            "@len": "enabledLayerCount,null-terminated",
                            "type": "char",
                            "name": "ppEnabledLayerNames",
                            "comment": "Ordered list of layer names to be enabled",
                            "#text": "const * const*"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "enabledExtensionCount"
                        },
                        {
                            "@len": "enabledExtensionCount,null-terminated",
                            "type": "char",
                            "name": "ppEnabledExtensionNames",
                            "comment": "Extension names to be enabled",
                            "#text": "const * const*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkQueueFamilyProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "VkQueueFlags",
                            "name": "queueFlags",
                            "comment": "Queue flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "timestampValidBits"
                        },
                        {
                            "type": "VkExtent3D",
                            "name": "minImageTransferGranularity",
                            "comment": "Minimum alignment requirement for image transfers"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMemoryProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "memoryTypeCount"
                        },
                        {
                            "type": "VkMemoryType",
                            "name": "memoryTypes",
                            "enum": [
                                "VK_MAX_MEMORY_TYPES"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryHeapCount"
                        },
                        {
                            "type": "VkMemoryHeap",
                            "name": "memoryHeaps",
                            "enum": [
                                "VK_MAX_MEMORY_HEAPS"
                            ],
                            "#text": "[]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "allocationSize",
                            "comment": "Size of memory allocation"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryTypeIndex",
                            "comment": "Index of the of the memory type to allocate from"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryRequirements",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkDeviceSize",
                            "name": "size",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "alignment",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryTypeBits",
                            "comment": "Bitmask of the allowed memory type indices into memoryTypes[] for this object"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseImageFormatProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "VkImageAspectFlags",
                            "name": "aspectMask"
                        },
                        {
                            "type": "VkExtent3D",
                            "name": "imageGranularity"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSparseImageFormatFlags",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseImageMemoryRequirements",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkSparseImageFormatProperties",
                            "name": "formatProperties"
                        },
                        {
                            "type": "uint32_t",
                            "name": "imageMipTailFirstLod"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "imageMipTailSize",
                            "comment": "Specified in bytes, must be a multiple of sparse block size in bytes / alignment"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "imageMipTailOffset",
                            "comment": "Specified in bytes, must be a multiple of sparse block size in bytes / alignment"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "imageMipTailStride",
                            "comment": "Specified in bytes, must be a multiple of sparse block size in bytes / alignment"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryType",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "VkMemoryPropertyFlags",
                            "name": "propertyFlags",
                            "comment": "Memory properties of this memory type"
                        },
                        {
                            "type": "uint32_t",
                            "name": "heapIndex",
                            "comment": "Index of the memory heap allocations of this memory type are taken from"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryHeap",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkDeviceSize",
                            "name": "size",
                            "comment": "Available memory in the heap"
                        },
                        {
                            "@optional": "true",
                            "type": "VkMemoryHeapFlags",
                            "name": "flags",
                            "comment": "Flags for the heap"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMappedMemoryRange",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory",
                            "comment": "Mapped memory object"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset",
                            "comment": "Offset within the memory object where the range starts"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size",
                            "comment": "Size of the range within the memory object"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFormatProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "VkFormatFeatureFlags",
                            "name": "linearTilingFeatures",
                            "comment": "Format features in case of linear tiling"
                        },
                        {
                            "@optional": "true",
                            "type": "VkFormatFeatureFlags",
                            "name": "optimalTilingFeatures",
                            "comment": "Format features in case of optimal tiling"
                        },
                        {
                            "@optional": "true",
                            "type": "VkFormatFeatureFlags",
                            "name": "bufferFeatures",
                            "comment": "Format features supported by buffers"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageFormatProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkExtent3D",
                            "name": "maxExtent",
                            "comment": "max image dimensions for this resource type"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxMipLevels",
                            "comment": "max number of mipmap levels for this resource type"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxArrayLayers",
                            "comment": "max array size for this resource type"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "sampleCounts",
                            "comment": "supported sample counts for this resource type"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "maxResourceSize",
                            "comment": "max size (in bytes) of this resource type"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorBufferInfo",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "buffer",
                            "comment": "Buffer used for this descriptor slot."
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset",
                            "comment": "Base offset from buffer start in bytes to update in the descriptor set."
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "range",
                            "comment": "Size in bytes of the buffer resource for this descriptor update."
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorImageInfo",
                    "member": [
                        {
                            "@noautovalidity": "true",
                            "type": "VkSampler",
                            "name": "sampler",
                            "comment": "Sampler to write to the descriptor in case it is a SAMPLER or COMBINED_IMAGE_SAMPLER descriptor. Ignored otherwise."
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkImageView",
                            "name": "imageView",
                            "comment": "Image view to write to the descriptor in case it is a SAMPLED_IMAGE, STORAGE_IMAGE, COMBINED_IMAGE_SAMPLER, or INPUT_ATTACHMENT descriptor. Ignored otherwise."
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkImageLayout",
                            "name": "imageLayout",
                            "comment": "Layout the image is expected to be in when accessed using this descriptor (only used if imageView is not VK_NULL_HANDLE)."
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkWriteDescriptorSet",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDescriptorSet",
                            "name": "dstSet",
                            "comment": "Destination descriptor set"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstBinding",
                            "comment": "Binding within the destination descriptor set to write"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstArrayElement",
                            "comment": "Array element within the destination binding to write"
                        },
                        {
                            "type": "uint32_t",
                            "name": "descriptorCount",
                            "comment": "Number of descriptors to write (determines the size of the array pointed by pDescriptors)"
                        },
                        {
                            "type": "VkDescriptorType",
                            "name": "descriptorType",
                            "comment": "Descriptor type to write (determines which members of the array pointed by pDescriptors are going to be used)"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "descriptorCount",
                            "type": "VkDescriptorImageInfo",
                            "name": "pImageInfo",
                            "comment": "Sampler, image view, and layout for SAMPLER, COMBINED_IMAGE_SAMPLER, {SAMPLED,STORAGE}_IMAGE, and INPUT_ATTACHMENT descriptor types.",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "descriptorCount",
                            "type": "VkDescriptorBufferInfo",
                            "name": "pBufferInfo",
                            "comment": "Raw buffer, size, and offset for {UNIFORM,STORAGE}_BUFFER[_DYNAMIC] descriptor types.",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "descriptorCount",
                            "type": "VkBufferView",
                            "name": "pTexelBufferView",
                            "comment": "Buffer view to write to the descriptor for {UNIFORM,STORAGE}_TEXEL_BUFFER descriptor types.",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyDescriptorSet",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDescriptorSet",
                            "name": "srcSet",
                            "comment": "Source descriptor set"
                        },
                        {
                            "type": "uint32_t",
                            "name": "srcBinding",
                            "comment": "Binding within the source descriptor set to copy from"
                        },
                        {
                            "type": "uint32_t",
                            "name": "srcArrayElement",
                            "comment": "Array element within the source binding to copy from"
                        },
                        {
                            "type": "VkDescriptorSet",
                            "name": "dstSet",
                            "comment": "Destination descriptor set"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstBinding",
                            "comment": "Binding within the destination descriptor set to copy to"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstArrayElement",
                            "comment": "Array element within the destination binding to copy to"
                        },
                        {
                            "type": "uint32_t",
                            "name": "descriptorCount",
                            "comment": "Number of descriptors to write (determines the size of the array pointed by pDescriptors)"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBufferCreateFlags",
                            "name": "flags",
                            "comment": "Buffer creation flags"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkBufferUsageFlags",
                            "name": "usage",
                            "comment": "Buffer usage flags"
                        },
                        {
                            "type": "VkSharingMode",
                            "name": "sharingMode"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "queueFamilyIndexCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "queueFamilyIndexCount",
                            "type": "uint32_t",
                            "name": "pQueueFamilyIndices",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferViewCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBufferViewCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format",
                            "comment": "Optionally specifies format of elements"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "range",
                            "comment": "View size specified in bytes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageSubresource",
                    "member": [
                        {
                            "type": "VkImageAspectFlags",
                            "name": "aspectMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "mipLevel"
                        },
                        {
                            "type": "uint32_t",
                            "name": "arrayLayer"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageSubresourceLayers",
                    "member": [
                        {
                            "type": "VkImageAspectFlags",
                            "name": "aspectMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "mipLevel"
                        },
                        {
                            "type": "uint32_t",
                            "name": "baseArrayLayer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "layerCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageSubresourceRange",
                    "member": [
                        {
                            "type": "VkImageAspectFlags",
                            "name": "aspectMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "baseMipLevel"
                        },
                        {
                            "type": "uint32_t",
                            "name": "levelCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "baseArrayLayer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "layerCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryBarrier",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_BARRIER",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags",
                            "name": "srcAccessMask",
                            "comment": "Memory accesses from the source of the dependency to synchronize"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags",
                            "name": "dstAccessMask",
                            "comment": "Memory accesses from the destination of the dependency to synchronize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferMemoryBarrier",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkAccessFlags",
                            "name": "srcAccessMask",
                            "comment": "Memory accesses from the source of the dependency to synchronize"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkAccessFlags",
                            "name": "dstAccessMask",
                            "comment": "Memory accesses from the destination of the dependency to synchronize"
                        },
                        {
                            "type": "uint32_t",
                            "name": "srcQueueFamilyIndex",
                            "comment": "Queue family to transition ownership from"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstQueueFamilyIndex",
                            "comment": "Queue family to transition ownership to"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer",
                            "comment": "Buffer to sync"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset",
                            "comment": "Offset within the buffer to sync"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size",
                            "comment": "Amount of bytes to sync"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageMemoryBarrier",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkAccessFlags",
                            "name": "srcAccessMask",
                            "comment": "Memory accesses from the source of the dependency to synchronize"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkAccessFlags",
                            "name": "dstAccessMask",
                            "comment": "Memory accesses from the destination of the dependency to synchronize"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "oldLayout",
                            "comment": "Current layout of the image"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "newLayout",
                            "comment": "New layout to transition the image to"
                        },
                        {
                            "type": "uint32_t",
                            "name": "srcQueueFamilyIndex",
                            "comment": "Queue family to transition ownership from"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstQueueFamilyIndex",
                            "comment": "Queue family to transition ownership to"
                        },
                        {
                            "type": "VkImage",
                            "name": "image",
                            "comment": "Image to sync"
                        },
                        {
                            "type": "VkImageSubresourceRange",
                            "name": "subresourceRange",
                            "comment": "Subresource range to sync"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageCreateFlags",
                            "name": "flags",
                            "comment": "Image creation flags"
                        },
                        {
                            "type": "VkImageType",
                            "name": "imageType"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkExtent3D",
                            "name": "extent"
                        },
                        {
                            "type": "uint32_t",
                            "name": "mipLevels"
                        },
                        {
                            "type": "uint32_t",
                            "name": "arrayLayers"
                        },
                        {
                            "type": "VkSampleCountFlagBits",
                            "name": "samples"
                        },
                        {
                            "type": "VkImageTiling",
                            "name": "tiling"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "usage",
                            "comment": "Image usage flags"
                        },
                        {
                            "type": "VkSharingMode",
                            "name": "sharingMode",
                            "comment": "Cross-queue-family sharing mode"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "queueFamilyIndexCount",
                            "comment": "Number of queue families to share across"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "queueFamilyIndexCount",
                            "type": "uint32_t",
                            "name": "pQueueFamilyIndices",
                            "comment": "Array of queue family indices to share across",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "initialLayout",
                            "comment": "Initial image layout for all subresources"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubresourceLayout",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkDeviceSize",
                            "name": "offset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "rowPitch",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "arrayPitch",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "depthPitch",
                            "comment": "Specified in bytes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageViewCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageViewCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "VkImageViewType",
                            "name": "viewType"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkComponentMapping",
                            "name": "components"
                        },
                        {
                            "type": "VkImageSubresourceRange",
                            "name": "subresourceRange"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferCopy",
                    "member": [
                        {
                            "type": "VkDeviceSize",
                            "name": "srcOffset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "dstOffset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceSize",
                            "name": "size",
                            "comment": "Specified in bytes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseMemoryBind",
                    "member": [
                        {
                            "type": "VkDeviceSize",
                            "name": "resourceOffset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size",
                            "comment": "Specified in bytes"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "memoryOffset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSparseMemoryBindFlags",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseImageMemoryBind",
                    "member": [
                        {
                            "type": "VkImageSubresource",
                            "name": "subresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "offset"
                        },
                        {
                            "type": "VkExtent3D",
                            "name": "extent"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "memoryOffset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSparseMemoryBindFlags",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseBufferMemoryBindInfo",
                    "member": [
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bindCount"
                        },
                        {
                            "@len": "bindCount",
                            "type": "VkSparseMemoryBind",
                            "name": "pBinds",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseImageOpaqueMemoryBindInfo",
                    "member": [
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bindCount"
                        },
                        {
                            "@len": "bindCount",
                            "type": "VkSparseMemoryBind",
                            "name": "pBinds",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseImageMemoryBindInfo",
                    "member": [
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bindCount"
                        },
                        {
                            "@len": "bindCount",
                            "type": "VkSparseImageMemoryBind",
                            "name": "pBinds",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindSparseInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BIND_SPARSE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "waitSemaphoreCount"
                        },
                        {
                            "@len": "waitSemaphoreCount",
                            "type": "VkSemaphore",
                            "name": "pWaitSemaphores",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "bufferBindCount"
                        },
                        {
                            "@len": "bufferBindCount",
                            "type": "VkSparseBufferMemoryBindInfo",
                            "name": "pBufferBinds",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "imageOpaqueBindCount"
                        },
                        {
                            "@len": "imageOpaqueBindCount",
                            "type": "VkSparseImageOpaqueMemoryBindInfo",
                            "name": "pImageOpaqueBinds",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "imageBindCount"
                        },
                        {
                            "@len": "imageBindCount",
                            "type": "VkSparseImageMemoryBindInfo",
                            "name": "pImageBinds",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "signalSemaphoreCount"
                        },
                        {
                            "@len": "signalSemaphoreCount",
                            "type": "VkSemaphore",
                            "name": "pSignalSemaphores",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageCopy",
                    "member": [
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "srcSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "srcOffset",
                            "comment": "Specified in pixels for both compressed and uncompressed images"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "dstSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "dstOffset",
                            "comment": "Specified in pixels for both compressed and uncompressed images"
                        },
                        {
                            "type": "VkExtent3D",
                            "name": "extent",
                            "comment": "Specified in pixels for both compressed and uncompressed images"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageBlit",
                    "member": [
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "srcSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "srcOffsets",
                            "comment": "Specified in pixels for both compressed and uncompressed images",
                            "#text": "[2]"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "dstSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "dstOffsets",
                            "comment": "Specified in pixels for both compressed and uncompressed images",
                            "#text": "[2]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferImageCopy",
                    "member": [
                        {
                            "type": "VkDeviceSize",
                            "name": "bufferOffset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bufferRowLength",
                            "comment": "Specified in texels"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bufferImageHeight"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "imageSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "imageOffset",
                            "comment": "Specified in pixels for both compressed and uncompressed images"
                        },
                        {
                            "type": "VkExtent3D",
                            "name": "imageExtent",
                            "comment": "Specified in pixels for both compressed and uncompressed images"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageResolve",
                    "member": [
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "srcSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "srcOffset"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "dstSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "dstOffset"
                        },
                        {
                            "type": "VkExtent3D",
                            "name": "extent"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkShaderModuleCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkShaderModuleCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "size_t",
                            "name": "codeSize",
                            "comment": "Specified in bytes"
                        },
                        {
                            "@len": "latexmath:[\\textrm{codeSize} \\over 4]",
                            "@altlen": "codeSize / 4",
                            "type": "uint32_t",
                            "name": "pCode",
                            "comment": "Binary code of size codeSize",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetLayoutBinding",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "binding",
                            "comment": "Binding number for this entry"
                        },
                        {
                            "type": "VkDescriptorType",
                            "name": "descriptorType",
                            "comment": "Type of the descriptors in this binding"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "descriptorCount",
                            "comment": "Number of descriptors in this binding"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkShaderStageFlags",
                            "name": "stageFlags",
                            "comment": "Shader stages this binding is visible to"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "@len": "descriptorCount",
                            "type": "VkSampler",
                            "name": "pImmutableSamplers",
                            "comment": "Immutable samplers (used if descriptor type is SAMPLER or COMBINED_IMAGE_SAMPLER, is either NULL or contains count number of elements)",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetLayoutCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDescriptorSetLayoutCreateFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "bindingCount",
                            "comment": "Number of bindings in the descriptor set layout"
                        },
                        {
                            "@len": "bindingCount",
                            "type": "VkDescriptorSetLayoutBinding",
                            "name": "pBindings",
                            "comment": "Array of descriptor set layout bindings",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorPoolSize",
                    "member": [
                        {
                            "type": "VkDescriptorType",
                            "name": "type"
                        },
                        {
                            "type": "uint32_t",
                            "name": "descriptorCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorPoolCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDescriptorPoolCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxSets"
                        },
                        {
                            "type": "uint32_t",
                            "name": "poolSizeCount"
                        },
                        {
                            "@len": "poolSizeCount",
                            "type": "VkDescriptorPoolSize",
                            "name": "pPoolSizes",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDescriptorPool",
                            "name": "descriptorPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "descriptorSetCount"
                        },
                        {
                            "@len": "descriptorSetCount",
                            "type": "VkDescriptorSetLayout",
                            "name": "pSetLayouts",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSpecializationMapEntry",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "constantID",
                            "comment": "The SpecConstant ID specified in the BIL"
                        },
                        {
                            "type": "uint32_t",
                            "name": "offset",
                            "comment": "Offset of the value in the data block"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "size_t",
                            "name": "size",
                            "comment": "Size in bytes of the SpecConstant"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSpecializationInfo",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "mapEntryCount",
                            "comment": "Number of entries in the map"
                        },
                        {
                            "@len": "mapEntryCount",
                            "type": "VkSpecializationMapEntry",
                            "name": "pMapEntries",
                            "comment": "Array of map entries",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "size_t",
                            "name": "dataSize",
                            "comment": "Size in bytes of pData"
                        },
                        {
                            "@len": "dataSize",
                            "type": "void",
                            "name": "pData",
                            "comment": "Pointer to SpecConstant data",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineShaderStageCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineShaderStageCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkShaderStageFlagBits",
                            "name": "stage",
                            "comment": "Shader stage"
                        },
                        {
                            "type": "VkShaderModule",
                            "name": "module",
                            "comment": "Module containing entry point"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pName",
                            "comment": "Null-terminated entry point name",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSpecializationInfo",
                            "name": "pSpecializationInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkComputePipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCreateFlags",
                            "name": "flags",
                            "comment": "Pipeline creation flags"
                        },
                        {
                            "type": "VkPipelineShaderStageCreateInfo",
                            "name": "stage"
                        },
                        {
                            "type": "VkPipelineLayout",
                            "name": "layout",
                            "comment": "Interface layout of the pipeline"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipeline",
                            "name": "basePipelineHandle",
                            "comment": "If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of"
                        },
                        {
                            "type": "int32_t",
                            "name": "basePipelineIndex",
                            "comment": "If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVertexInputBindingDescription",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "binding",
                            "comment": "Vertex buffer binding id"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride",
                            "comment": "Distance between vertices in bytes (0 = no advancement)"
                        },
                        {
                            "type": "VkVertexInputRate",
                            "name": "inputRate",
                            "comment": "The rate at which the vertex data is consumed"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVertexInputAttributeDescription",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "location",
                            "comment": "location of the shader vertex attrib"
                        },
                        {
                            "type": "uint32_t",
                            "name": "binding",
                            "comment": "Vertex buffer binding id"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format",
                            "comment": "format of source data"
                        },
                        {
                            "type": "uint32_t",
                            "name": "offset",
                            "comment": "Offset of first element in bytes from base of vertex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineVertexInputStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineVertexInputStateCreateFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "vertexBindingDescriptionCount",
                            "comment": "number of bindings"
                        },
                        {
                            "@len": "vertexBindingDescriptionCount",
                            "type": "VkVertexInputBindingDescription",
                            "name": "pVertexBindingDescriptions",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "vertexAttributeDescriptionCount",
                            "comment": "number of attributes"
                        },
                        {
                            "@len": "vertexAttributeDescriptionCount",
                            "type": "VkVertexInputAttributeDescription",
                            "name": "pVertexAttributeDescriptions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineInputAssemblyStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineInputAssemblyStateCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkPrimitiveTopology",
                            "name": "topology"
                        },
                        {
                            "type": "VkBool32",
                            "name": "primitiveRestartEnable"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineTessellationStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineTessellationStateCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "patchControlPoints"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineViewportStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineViewportStateCreateFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "viewportCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "@len": "viewportCount",
                            "type": "VkViewport",
                            "name": "pViewports",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "scissorCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "@len": "scissorCount",
                            "type": "VkRect2D",
                            "name": "pScissors",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineRasterizationStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineRasterizationStateCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthClampEnable"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rasterizerDiscardEnable"
                        },
                        {
                            "type": "VkPolygonMode",
                            "name": "polygonMode",
                            "comment": "optional (GL45)"
                        },
                        {
                            "@optional": "true",
                            "type": "VkCullModeFlags",
                            "name": "cullMode"
                        },
                        {
                            "type": "VkFrontFace",
                            "name": "frontFace"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthBiasEnable"
                        },
                        {
                            "type": "float",
                            "name": "depthBiasConstantFactor"
                        },
                        {
                            "type": "float",
                            "name": "depthBiasClamp"
                        },
                        {
                            "type": "float",
                            "name": "depthBiasSlopeFactor"
                        },
                        {
                            "type": "float",
                            "name": "lineWidth"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineMultisampleStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineMultisampleStateCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkSampleCountFlagBits",
                            "name": "rasterizationSamples",
                            "comment": "Number of samples used for rasterization"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sampleShadingEnable",
                            "comment": "optional (GL45)"
                        },
                        {
                            "type": "float",
                            "name": "minSampleShading",
                            "comment": "optional (GL45)"
                        },
                        {
                            "@optional": "true",
                            "@len": "latexmath:[\\lceil{\\mathit{rasterizationSamples} \\over 32}\\rceil]",
                            "@altlen": "(rasterizationSamples + 31) / 32",
                            "type": "VkSampleMask",
                            "name": "pSampleMask",
                            "comment": "Array of sampleMask words",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "alphaToCoverageEnable"
                        },
                        {
                            "type": "VkBool32",
                            "name": "alphaToOneEnable"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineColorBlendAttachmentState",
                    "member": [
                        {
                            "type": "VkBool32",
                            "name": "blendEnable"
                        },
                        {
                            "type": "VkBlendFactor",
                            "name": "srcColorBlendFactor"
                        },
                        {
                            "type": "VkBlendFactor",
                            "name": "dstColorBlendFactor"
                        },
                        {
                            "type": "VkBlendOp",
                            "name": "colorBlendOp"
                        },
                        {
                            "type": "VkBlendFactor",
                            "name": "srcAlphaBlendFactor"
                        },
                        {
                            "type": "VkBlendFactor",
                            "name": "dstAlphaBlendFactor"
                        },
                        {
                            "type": "VkBlendOp",
                            "name": "alphaBlendOp"
                        },
                        {
                            "@optional": "true",
                            "type": "VkColorComponentFlags",
                            "name": "colorWriteMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineColorBlendStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineColorBlendStateCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkBool32",
                            "name": "logicOpEnable"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkLogicOp",
                            "name": "logicOp"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "attachmentCount",
                            "comment": "# of pAttachments"
                        },
                        {
                            "@len": "attachmentCount",
                            "type": "VkPipelineColorBlendAttachmentState",
                            "name": "pAttachments",
                            "#text": "const *"
                        },
                        {
                            "type": "float",
                            "name": "blendConstants",
                            "#text": "[4]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineDynamicStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineDynamicStateCreateFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "dynamicStateCount"
                        },
                        {
                            "@len": "dynamicStateCount",
                            "type": "VkDynamicState",
                            "name": "pDynamicStates",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkStencilOpState",
                    "member": [
                        {
                            "type": "VkStencilOp",
                            "name": "failOp"
                        },
                        {
                            "type": "VkStencilOp",
                            "name": "passOp"
                        },
                        {
                            "type": "VkStencilOp",
                            "name": "depthFailOp"
                        },
                        {
                            "type": "VkCompareOp",
                            "name": "compareOp"
                        },
                        {
                            "type": "uint32_t",
                            "name": "compareMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "writeMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "reference"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineDepthStencilStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineDepthStencilStateCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthTestEnable"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthWriteEnable"
                        },
                        {
                            "type": "VkCompareOp",
                            "name": "depthCompareOp"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthBoundsTestEnable",
                            "comment": "optional (depth_bounds_test)"
                        },
                        {
                            "type": "VkBool32",
                            "name": "stencilTestEnable"
                        },
                        {
                            "type": "VkStencilOpState",
                            "name": "front"
                        },
                        {
                            "type": "VkStencilOpState",
                            "name": "back"
                        },
                        {
                            "type": "float",
                            "name": "minDepthBounds"
                        },
                        {
                            "type": "float",
                            "name": "maxDepthBounds"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkGraphicsPipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCreateFlags",
                            "name": "flags",
                            "comment": "Pipeline creation flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stageCount"
                        },
                        {
                            "@len": "stageCount",
                            "type": "VkPipelineShaderStageCreateInfo",
                            "name": "pStages",
                            "comment": "One entry for each active shader stage",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipelineVertexInputStateCreateInfo",
                            "name": "pVertexInputState",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipelineInputAssemblyStateCreateInfo",
                            "name": "pInputAssemblyState",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipelineTessellationStateCreateInfo",
                            "name": "pTessellationState",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipelineViewportStateCreateInfo",
                            "name": "pViewportState",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPipelineRasterizationStateCreateInfo",
                            "name": "pRasterizationState",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipelineMultisampleStateCreateInfo",
                            "name": "pMultisampleState",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipelineDepthStencilStateCreateInfo",
                            "name": "pDepthStencilState",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipelineColorBlendStateCreateInfo",
                            "name": "pColorBlendState",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineDynamicStateCreateInfo",
                            "name": "pDynamicState",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPipelineLayout",
                            "name": "layout",
                            "comment": "Interface layout of the pipeline"
                        },
                        {
                            "@optional": "true",
                            "type": "VkRenderPass",
                            "name": "renderPass"
                        },
                        {
                            "type": "uint32_t",
                            "name": "subpass"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipeline",
                            "name": "basePipelineHandle",
                            "comment": "If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of"
                        },
                        {
                            "type": "int32_t",
                            "name": "basePipelineIndex",
                            "comment": "If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineCacheCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCacheCreateFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "size_t",
                            "name": "initialDataSize",
                            "comment": "Size of initial data to populate cache, in bytes"
                        },
                        {
                            "@len": "initialDataSize",
                            "type": "void",
                            "name": "pInitialData",
                            "comment": "Initial data to populate cache",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineCacheHeaderVersionOne",
                    "comment": "The fields in this structure are non-normative since structure packing is implementation-defined in C. The specification defines the normative layout.",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "headerSize"
                        },
                        {
                            "type": "VkPipelineCacheHeaderVersion",
                            "name": "headerVersion"
                        },
                        {
                            "type": "uint32_t",
                            "name": "vendorID"
                        },
                        {
                            "type": "uint32_t",
                            "name": "deviceID"
                        },
                        {
                            "type": "uint8_t",
                            "name": "pipelineCacheUUID",
                            "enum": [
                                "VK_UUID_SIZE"
                            ],
                            "#text": "[]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPushConstantRange",
                    "member": [
                        {
                            "type": "VkShaderStageFlags",
                            "name": "stageFlags",
                            "comment": "Which stages use the range"
                        },
                        {
                            "type": "uint32_t",
                            "name": "offset",
                            "comment": "Start of the range, in bytes"
                        },
                        {
                            "type": "uint32_t",
                            "name": "size",
                            "comment": "Size of the range, in bytes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineLayoutCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineLayoutCreateFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "setLayoutCount",
                            "comment": "Number of descriptor sets interfaced by the pipeline"
                        },
                        {
                            "@len": "setLayoutCount",
                            "type": "VkDescriptorSetLayout",
                            "name": "pSetLayouts",
                            "comment": "Array of setCount number of descriptor set layout objects defining the layout of the",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "pushConstantRangeCount",
                            "comment": "Number of push-constant ranges used by the pipeline"
                        },
                        {
                            "@len": "pushConstantRangeCount",
                            "type": "VkPushConstantRange",
                            "name": "pPushConstantRanges",
                            "comment": "Array of pushConstantRangeCount number of ranges used by various shader stages",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSamplerCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkFilter",
                            "name": "magFilter",
                            "comment": "Filter mode for magnification"
                        },
                        {
                            "type": "VkFilter",
                            "name": "minFilter",
                            "comment": "Filter mode for minifiation"
                        },
                        {
                            "type": "VkSamplerMipmapMode",
                            "name": "mipmapMode",
                            "comment": "Mipmap selection mode"
                        },
                        {
                            "type": "VkSamplerAddressMode",
                            "name": "addressModeU"
                        },
                        {
                            "type": "VkSamplerAddressMode",
                            "name": "addressModeV"
                        },
                        {
                            "type": "VkSamplerAddressMode",
                            "name": "addressModeW"
                        },
                        {
                            "type": "float",
                            "name": "mipLodBias"
                        },
                        {
                            "type": "VkBool32",
                            "name": "anisotropyEnable"
                        },
                        {
                            "type": "float",
                            "name": "maxAnisotropy"
                        },
                        {
                            "type": "VkBool32",
                            "name": "compareEnable"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkCompareOp",
                            "name": "compareOp"
                        },
                        {
                            "type": "float",
                            "name": "minLod"
                        },
                        {
                            "type": "float",
                            "name": "maxLod"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkBorderColor",
                            "name": "borderColor"
                        },
                        {
                            "type": "VkBool32",
                            "name": "unnormalizedCoordinates"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandPoolCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkCommandPoolCreateFlags",
                            "name": "flags",
                            "comment": "Command pool creation flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandBufferAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkCommandPool",
                            "name": "commandPool"
                        },
                        {
                            "type": "VkCommandBufferLevel",
                            "name": "level"
                        },
                        {
                            "type": "uint32_t",
                            "name": "commandBufferCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandBufferInheritanceInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "VkRenderPass",
                            "name": "renderPass",
                            "comment": "Render pass for secondary command buffers"
                        },
                        {
                            "type": "uint32_t",
                            "name": "subpass"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "VkFramebuffer",
                            "name": "framebuffer",
                            "comment": "Framebuffer for secondary command buffers"
                        },
                        {
                            "type": "VkBool32",
                            "name": "occlusionQueryEnable",
                            "comment": "Whether this secondary command buffer may be executed during an occlusion query"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "VkQueryControlFlags",
                            "name": "queryFlags",
                            "comment": "Query flags used by this secondary command buffer, if executed during an occlusion query"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "VkQueryPipelineStatisticFlags",
                            "name": "pipelineStatistics",
                            "comment": "Pipeline statistics that may be counted for this secondary command buffer"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandBufferBeginInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkCommandBufferUsageFlags",
                            "name": "flags",
                            "comment": "Command buffer usage flags"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "VkCommandBufferInheritanceInfo",
                            "name": "pInheritanceInfo",
                            "comment": "Pointer to inheritance info for secondary command buffers",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassBeginInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkRenderPass",
                            "name": "renderPass"
                        },
                        {
                            "type": "VkFramebuffer",
                            "name": "framebuffer"
                        },
                        {
                            "type": "VkRect2D",
                            "name": "renderArea"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "clearValueCount"
                        },
                        {
                            "@len": "clearValueCount",
                            "@noautovalidity": "true",
                            "type": "VkClearValue",
                            "name": "pClearValues",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "union",
                    "@name": "VkClearColorValue",
                    "@comment": "// Union allowing specification of floating point, integer, or unsigned integer color data. Actual value selected is based on image/attachment being cleared.",
                    "member": [
                        {
                            "type": "float",
                            "name": "float32",
                            "#text": "[4]"
                        },
                        {
                            "type": "int32_t",
                            "name": "int32",
                            "#text": "[4]"
                        },
                        {
                            "type": "uint32_t",
                            "name": "uint32",
                            "#text": "[4]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkClearDepthStencilValue",
                    "member": [
                        {
                            "type": "float",
                            "name": "depth"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stencil"
                        }
                    ]
                },
                {
                    "@category": "union",
                    "@name": "VkClearValue",
                    "@comment": "// Union allowing specification of color or depth and stencil values. Actual value selected is based on attachment being cleared.",
                    "member": [
                        {
                            "@noautovalidity": "true",
                            "type": "VkClearColorValue",
                            "name": "color"
                        },
                        {
                            "type": "VkClearDepthStencilValue",
                            "name": "depthStencil"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkClearAttachment",
                    "member": [
                        {
                            "type": "VkImageAspectFlags",
                            "name": "aspectMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "colorAttachment"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkClearValue",
                            "name": "clearValue"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentDescription",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "VkAttachmentDescriptionFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkSampleCountFlagBits",
                            "name": "samples"
                        },
                        {
                            "type": "VkAttachmentLoadOp",
                            "name": "loadOp",
                            "comment": "Load operation for color or depth data"
                        },
                        {
                            "type": "VkAttachmentStoreOp",
                            "name": "storeOp",
                            "comment": "Store operation for color or depth data"
                        },
                        {
                            "type": "VkAttachmentLoadOp",
                            "name": "stencilLoadOp",
                            "comment": "Load operation for stencil data"
                        },
                        {
                            "type": "VkAttachmentStoreOp",
                            "name": "stencilStoreOp",
                            "comment": "Store operation for stencil data"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "initialLayout"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "finalLayout"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentReference",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "attachment"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "layout"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassDescription",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "VkSubpassDescriptionFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkPipelineBindPoint",
                            "name": "pipelineBindPoint",
                            "comment": "Must be VK_PIPELINE_BIND_POINT_GRAPHICS for now"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "inputAttachmentCount"
                        },
                        {
                            "@len": "inputAttachmentCount",
                            "type": "VkAttachmentReference",
                            "name": "pInputAttachments",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "colorAttachmentCount"
                        },
                        {
                            "@len": "colorAttachmentCount",
                            "type": "VkAttachmentReference",
                            "name": "pColorAttachments",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@len": "colorAttachmentCount",
                            "type": "VkAttachmentReference",
                            "name": "pResolveAttachments",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAttachmentReference",
                            "name": "pDepthStencilAttachment",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "preserveAttachmentCount"
                        },
                        {
                            "@len": "preserveAttachmentCount",
                            "type": "uint32_t",
                            "name": "pPreserveAttachments",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassDependency",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "srcSubpass"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstSubpass"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags",
                            "name": "srcStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags",
                            "name": "dstStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags",
                            "name": "srcAccessMask",
                            "comment": "Memory accesses from the source of the dependency to synchronize"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags",
                            "name": "dstAccessMask",
                            "comment": "Memory accesses from the destination of the dependency to synchronize"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDependencyFlags",
                            "name": "dependencyFlags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkRenderPassCreateFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "attachmentCount"
                        },
                        {
                            "@len": "attachmentCount",
                            "type": "VkAttachmentDescription",
                            "name": "pAttachments",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "subpassCount"
                        },
                        {
                            "@len": "subpassCount",
                            "type": "VkSubpassDescription",
                            "name": "pSubpasses",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "dependencyCount"
                        },
                        {
                            "@len": "dependencyCount",
                            "type": "VkSubpassDependency",
                            "name": "pDependencies",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkEventCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EVENT_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkEventCreateFlags",
                            "name": "flags",
                            "comment": "Event creation flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFenceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FENCE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkFenceCreateFlags",
                            "name": "flags",
                            "comment": "Fence creation flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFeatures",
                    "member": [
                        {
                            "type": "VkBool32",
                            "name": "robustBufferAccess",
                            "comment": "out of bounds buffer accesses are well defined"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fullDrawIndexUint32",
                            "comment": "full 32-bit range of indices for indexed draw calls"
                        },
                        {
                            "type": "VkBool32",
                            "name": "imageCubeArray",
                            "comment": "image views which are arrays of cube maps"
                        },
                        {
                            "type": "VkBool32",
                            "name": "independentBlend",
                            "comment": "blending operations are controlled per-attachment"
                        },
                        {
                            "type": "VkBool32",
                            "name": "geometryShader",
                            "comment": "geometry stage"
                        },
                        {
                            "type": "VkBool32",
                            "name": "tessellationShader",
                            "comment": "tessellation control and evaluation stage"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sampleRateShading",
                            "comment": "per-sample shading and interpolation"
                        },
                        {
                            "type": "VkBool32",
                            "name": "dualSrcBlend",
                            "comment": "blend operations which take two sources"
                        },
                        {
                            "type": "VkBool32",
                            "name": "logicOp",
                            "comment": "logic operations"
                        },
                        {
                            "type": "VkBool32",
                            "name": "multiDrawIndirect",
                            "comment": "multi draw indirect"
                        },
                        {
                            "type": "VkBool32",
                            "name": "drawIndirectFirstInstance",
                            "comment": "indirect drawing can use non-zero firstInstance"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthClamp",
                            "comment": "depth clamping"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthBiasClamp",
                            "comment": "depth bias clamping"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fillModeNonSolid",
                            "comment": "point and wireframe fill modes"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthBounds",
                            "comment": "depth bounds test"
                        },
                        {
                            "type": "VkBool32",
                            "name": "wideLines",
                            "comment": "lines with width greater than 1"
                        },
                        {
                            "type": "VkBool32",
                            "name": "largePoints",
                            "comment": "points with size greater than 1"
                        },
                        {
                            "type": "VkBool32",
                            "name": "alphaToOne",
                            "comment": "the fragment alpha component can be forced to maximum representable alpha value"
                        },
                        {
                            "type": "VkBool32",
                            "name": "multiViewport",
                            "comment": "viewport arrays"
                        },
                        {
                            "type": "VkBool32",
                            "name": "samplerAnisotropy",
                            "comment": "anisotropic sampler filtering"
                        },
                        {
                            "type": "VkBool32",
                            "name": "textureCompressionETC2",
                            "comment": "ETC texture compression formats"
                        },
                        {
                            "type": "VkBool32",
                            "name": "textureCompressionASTC_LDR",
                            "comment": "ASTC LDR texture compression formats"
                        },
                        {
                            "type": "VkBool32",
                            "name": "textureCompressionBC",
                            "comment": "BC1-7 texture compressed formats"
                        },
                        {
                            "type": "VkBool32",
                            "name": "occlusionQueryPrecise",
                            "comment": "precise occlusion queries returning actual sample counts"
                        },
                        {
                            "type": "VkBool32",
                            "name": "pipelineStatisticsQuery",
                            "comment": "pipeline statistics query"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vertexPipelineStoresAndAtomics",
                            "comment": "stores and atomic ops on storage buffers and images are supported in vertex, tessellation, and geometry stages"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentStoresAndAtomics",
                            "comment": "stores and atomic ops on storage buffers and images are supported in the fragment stage"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderTessellationAndGeometryPointSize",
                            "comment": "tessellation and geometry stages can export point size"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderImageGatherExtended",
                            "comment": "image gather with run-time values and independent offsets"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageImageExtendedFormats",
                            "comment": "the extended set of formats can be used for storage images"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageImageMultisample",
                            "comment": "multisample images can be used for storage images"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageImageReadWithoutFormat",
                            "comment": "read from storage image does not require format qualifier"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageImageWriteWithoutFormat",
                            "comment": "write to storage image does not require format qualifier"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderUniformBufferArrayDynamicIndexing",
                            "comment": "arrays of uniform buffers can be accessed with dynamically uniform indices"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSampledImageArrayDynamicIndexing",
                            "comment": "arrays of sampled images can be accessed with dynamically uniform indices"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageBufferArrayDynamicIndexing",
                            "comment": "arrays of storage buffers can be accessed with dynamically uniform indices"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageImageArrayDynamicIndexing",
                            "comment": "arrays of storage images can be accessed with dynamically uniform indices"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderClipDistance",
                            "comment": "clip distance in shaders"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderCullDistance",
                            "comment": "cull distance in shaders"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderFloat64",
                            "comment": "64-bit floats (doubles) in shaders"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderInt64",
                            "comment": "64-bit integers in shaders"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderInt16",
                            "comment": "16-bit integers in shaders"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderResourceResidency",
                            "comment": "shader can use texture operations that return resource residency information (requires sparseNonResident support)"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderResourceMinLod",
                            "comment": "shader can use texture operations that specify minimum resource LOD"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseBinding",
                            "comment": "Sparse resources support: Resource memory can be managed at opaque page level rather than object level"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseResidencyBuffer",
                            "comment": "Sparse resources support: GPU can access partially resident buffers"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseResidencyImage2D",
                            "comment": "Sparse resources support: GPU can access partially resident 2D (non-MSAA non-depth/stencil) images"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseResidencyImage3D",
                            "comment": "Sparse resources support: GPU can access partially resident 3D images"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseResidency2Samples",
                            "comment": "Sparse resources support: GPU can access partially resident MSAA 2D images with 2 samples"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseResidency4Samples",
                            "comment": "Sparse resources support: GPU can access partially resident MSAA 2D images with 4 samples"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseResidency8Samples",
                            "comment": "Sparse resources support: GPU can access partially resident MSAA 2D images with 8 samples"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseResidency16Samples",
                            "comment": "Sparse resources support: GPU can access partially resident MSAA 2D images with 16 samples"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseResidencyAliased",
                            "comment": "Sparse resources support: GPU can correctly access data aliased into multiple locations (opt-in)"
                        },
                        {
                            "type": "VkBool32",
                            "name": "variableMultisampleRate",
                            "comment": "multisample rate must be the same for all pipelines in a subpass"
                        },
                        {
                            "type": "VkBool32",
                            "name": "inheritedQueries",
                            "comment": "Queries may be inherited from primary to secondary command buffers"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSparseProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "residencyStandard2DBlockShape",
                            "comment": "Sparse resources support: GPU will access all 2D (single sample) sparse resources using the standard sparse image block shapes (based on pixel format)"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "residencyStandard2DMultisampleBlockShape",
                            "comment": "Sparse resources support: GPU will access all 2D (multisample) sparse resources using the standard sparse image block shapes (based on pixel format)"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "residencyStandard3DBlockShape",
                            "comment": "Sparse resources support: GPU will access all 3D sparse resources using the standard sparse image block shapes (based on pixel format)"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "residencyAlignedMipSize",
                            "comment": "Sparse resources support: Images with mip level dimensions that are NOT a multiple of the sparse image block dimensions will be placed in the mip tail"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "residencyNonResidentStrict",
                            "comment": "Sparse resources support: GPU can consistently access non-resident regions of a resource, all reads return as if data is 0, writes are discarded"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceLimits",
                    "@returnedonly": "true",
                    "comment": [
                        "resource maximum sizes",
                        "memory limits",
                        "descriptor set limits",
                        "vertex stage limits",
                        "tessellation control stage limits",
                        "tessellation evaluation stage limits",
                        "geometry stage limits",
                        "fragment stage limits",
                        "compute stage limits"
                    ],
                    "member": [
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxImageDimension1D",
                            "comment": "max 1D image dimension"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxImageDimension2D",
                            "comment": "max 2D image dimension"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxImageDimension3D",
                            "comment": "max 3D image dimension"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxImageDimensionCube",
                            "comment": "max cubemap image dimension"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxImageArrayLayers",
                            "comment": "max layers for image arrays"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTexelBufferElements",
                            "comment": "max texel buffer size (fstexels)"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxUniformBufferRange",
                            "comment": "max uniform buffer range (bytes)"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxStorageBufferRange",
                            "comment": "max storage buffer range (bytes)"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPushConstantsSize",
                            "comment": "max size of the push constants pool (bytes)"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMemoryAllocationCount",
                            "comment": "max number of device memory allocations supported"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxSamplerAllocationCount",
                            "comment": "max number of samplers that can be allocated on a device"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "bufferImageGranularity",
                            "comment": "Granularity (in bytes) at which buffers and images can be bound to adjacent memory for simultaneous usage"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkDeviceSize",
                            "name": "sparseAddressSpaceSize",
                            "comment": "Total address space available for sparse allocations (bytes)"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxBoundDescriptorSets",
                            "comment": "max number of descriptors sets that can be bound to a pipeline"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorSamplers",
                            "comment": "max number of samplers allowed per-stage in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUniformBuffers",
                            "comment": "max number of uniform buffers allowed per-stage in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorStorageBuffers",
                            "comment": "max number of storage buffers allowed per-stage in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorSampledImages",
                            "comment": "max number of sampled images allowed per-stage in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorStorageImages",
                            "comment": "max number of storage images allowed per-stage in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorInputAttachments",
                            "comment": "max number of input attachments allowed per-stage in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageResources",
                            "comment": "max number of resources allowed by a single stage"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetSamplers",
                            "comment": "max number of samplers allowed in all stages in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUniformBuffers",
                            "comment": "max number of uniform buffers allowed in all stages in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUniformBuffersDynamic",
                            "comment": "max number of dynamic uniform buffers allowed in all stages in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetStorageBuffers",
                            "comment": "max number of storage buffers allowed in all stages in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetStorageBuffersDynamic",
                            "comment": "max number of dynamic storage buffers allowed in all stages in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetSampledImages",
                            "comment": "max number of sampled images allowed in all stages in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetStorageImages",
                            "comment": "max number of storage images allowed in all stages in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetInputAttachments",
                            "comment": "max number of input attachments allowed in all stages in a descriptor set"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxVertexInputAttributes",
                            "comment": "max number of vertex input attribute slots"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxVertexInputBindings",
                            "comment": "max number of vertex input binding slots"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxVertexInputAttributeOffset",
                            "comment": "max vertex input attribute offset added to vertex buffer offset"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxVertexInputBindingStride",
                            "comment": "max vertex input binding stride"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxVertexOutputComponents",
                            "comment": "max number of output components written by vertex shader"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTessellationGenerationLevel",
                            "comment": "max level supported by tessellation primitive generator"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTessellationPatchSize",
                            "comment": "max patch size (vertices)"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTessellationControlPerVertexInputComponents",
                            "comment": "max number of input components per-vertex in TCS"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTessellationControlPerVertexOutputComponents",
                            "comment": "max number of output components per-vertex in TCS"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTessellationControlPerPatchOutputComponents",
                            "comment": "max number of output components per-patch in TCS"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTessellationControlTotalOutputComponents",
                            "comment": "max total number of per-vertex and per-patch output components in TCS"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTessellationEvaluationInputComponents",
                            "comment": "max number of input components per vertex in TES"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTessellationEvaluationOutputComponents",
                            "comment": "max number of output components per vertex in TES"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxGeometryShaderInvocations",
                            "comment": "max invocation count supported in geometry shader"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxGeometryInputComponents",
                            "comment": "max number of input components read in geometry stage"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxGeometryOutputComponents",
                            "comment": "max number of output components written in geometry stage"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxGeometryOutputVertices",
                            "comment": "max number of vertices that can be emitted in geometry stage"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxGeometryTotalOutputComponents",
                            "comment": "max total number of components (all vertices) written in geometry stage"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxFragmentInputComponents",
                            "comment": "max number of input components read in fragment stage"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxFragmentOutputAttachments",
                            "comment": "max number of output attachments written in fragment stage"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxFragmentDualSrcAttachments",
                            "comment": "max number of output attachments written when using dual source blending"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxFragmentCombinedOutputResources",
                            "comment": "max total number of storage buffers, storage images and output buffers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxComputeSharedMemorySize",
                            "comment": "max total storage size of work group local storage (bytes)"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxComputeWorkGroupCount",
                            "comment": "max num of compute work groups that may be dispatched by a single command (x,y,z)",
                            "#text": "[3]"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxComputeWorkGroupInvocations",
                            "comment": "max total compute invocations in a single local work group"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxComputeWorkGroupSize",
                            "comment": "max local size of a compute work group (x,y,z)",
                            "#text": "[3]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "subPixelPrecisionBits",
                            "comment": "number bits of subpixel precision in screen x and y"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "subTexelPrecisionBits",
                            "comment": "number bits of precision for selecting texel weights"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "mipmapPrecisionBits",
                            "comment": "number bits of precision for selecting mipmap weights"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDrawIndexedIndexValue",
                            "comment": "max index value for indexed draw calls (for 32-bit indices)"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDrawIndirectCount",
                            "comment": "max draw count for indirect drawing calls"
                        },
                        {
                            "@limittype": "max",
                            "type": "float",
                            "name": "maxSamplerLodBias",
                            "comment": "max absolute sampler LOD bias"
                        },
                        {
                            "@limittype": "max",
                            "type": "float",
                            "name": "maxSamplerAnisotropy",
                            "comment": "max degree of sampler anisotropy"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxViewports",
                            "comment": "max number of active viewports"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxViewportDimensions",
                            "comment": "max viewport dimensions (x,y)",
                            "#text": "[2]"
                        },
                        {
                            "@limittype": "range",
                            "type": "float",
                            "name": "viewportBoundsRange",
                            "comment": "viewport bounds range (min,max)",
                            "#text": "[2]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "viewportSubPixelBits",
                            "comment": "number bits of subpixel precision for viewport"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "size_t",
                            "name": "minMemoryMapAlignment",
                            "comment": "min required alignment of pointers returned by MapMemory (bytes)"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "minTexelBufferOffsetAlignment",
                            "comment": "min required alignment for texel buffer offsets (bytes)"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "minUniformBufferOffsetAlignment",
                            "comment": "min required alignment for uniform buffer sizes and offsets (bytes)"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "minStorageBufferOffsetAlignment",
                            "comment": "min required alignment for storage buffer offsets (bytes)"
                        },
                        {
                            "@limittype": "min",
                            "type": "int32_t",
                            "name": "minTexelOffset",
                            "comment": "min texel offset for OpTextureSampleOffset"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTexelOffset",
                            "comment": "max texel offset for OpTextureSampleOffset"
                        },
                        {
                            "@limittype": "min",
                            "type": "int32_t",
                            "name": "minTexelGatherOffset",
                            "comment": "min texel offset for OpTextureGatherOffset"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTexelGatherOffset",
                            "comment": "max texel offset for OpTextureGatherOffset"
                        },
                        {
                            "@limittype": "min",
                            "type": "float",
                            "name": "minInterpolationOffset",
                            "comment": "furthest negative offset for interpolateAtOffset"
                        },
                        {
                            "@limittype": "max",
                            "type": "float",
                            "name": "maxInterpolationOffset",
                            "comment": "furthest positive offset for interpolateAtOffset"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "subPixelInterpolationOffsetBits",
                            "comment": "number of subpixel bits for interpolateAtOffset"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxFramebufferWidth",
                            "comment": "max width for a framebuffer"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxFramebufferHeight",
                            "comment": "max height for a framebuffer"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxFramebufferLayers",
                            "comment": "max layer count for a layered framebuffer"
                        },
                        {
                            "@limittype": "bitmask",
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "framebufferColorSampleCounts",
                            "comment": "supported color sample counts for a framebuffer"
                        },
                        {
                            "@limittype": "bitmask",
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "framebufferDepthSampleCounts",
                            "comment": "supported depth sample counts for a framebuffer"
                        },
                        {
                            "@limittype": "bitmask",
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "framebufferStencilSampleCounts",
                            "comment": "supported stencil sample counts for a framebuffer"
                        },
                        {
                            "@limittype": "bitmask",
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "framebufferNoAttachmentsSampleCounts",
                            "comment": "supported sample counts for a subpass which uses no attachments"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "uint32_t",
                            "name": "maxColorAttachments",
                            "comment": "max number of color attachments per subpass"
                        },
                        {
                            "@limittype": "bitmask",
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "sampledImageColorSampleCounts",
                            "comment": "supported color sample counts for a non-integer sampled image"
                        },
                        {
                            "@limittype": "bitmask",
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "sampledImageIntegerSampleCounts",
                            "comment": "supported sample counts for an integer image"
                        },
                        {
                            "@limittype": "bitmask",
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "sampledImageDepthSampleCounts",
                            "comment": "supported depth sample counts for a sampled image"
                        },
                        {
                            "@limittype": "bitmask",
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "sampledImageStencilSampleCounts",
                            "comment": "supported stencil sample counts for a sampled image"
                        },
                        {
                            "@limittype": "bitmask",
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "storageImageSampleCounts",
                            "comment": "supported sample counts for a storage image"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxSampleMaskWords",
                            "comment": "max number of sample mask words"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "timestampComputeAndGraphics",
                            "comment": "timestamps on graphics and compute queues"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "float",
                            "name": "timestampPeriod",
                            "comment": "number of nanoseconds it takes for timestamp query value to increment by 1"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxClipDistances",
                            "comment": "max number of clip distances"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxCullDistances",
                            "comment": "max number of cull distances"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxCombinedClipAndCullDistances",
                            "comment": "max combined number of user clipping"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "discreteQueuePriorities",
                            "comment": "distinct queue priorities available"
                        },
                        {
                            "@limittype": "range",
                            "type": "float",
                            "name": "pointSizeRange",
                            "comment": "range (min,max) of supported point sizes",
                            "#text": "[2]"
                        },
                        {
                            "@limittype": "range",
                            "type": "float",
                            "name": "lineWidthRange",
                            "comment": "range (min,max) of supported line widths",
                            "#text": "[2]"
                        },
                        {
                            "@limittype": "max",
                            "type": "float",
                            "name": "pointSizeGranularity",
                            "comment": "granularity of supported point sizes"
                        },
                        {
                            "@limittype": "max",
                            "type": "float",
                            "name": "lineWidthGranularity",
                            "comment": "granularity of supported line widths"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "strictLines",
                            "comment": "line rasterization follows preferred rules"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "standardSampleLocations",
                            "comment": "supports standard sample locations for all supported sample counts"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "optimalBufferCopyOffsetAlignment",
                            "comment": "optimal offset of buffer copies"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "optimalBufferCopyRowPitchAlignment",
                            "comment": "optimal pitch of buffer copies"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "nonCoherentAtomSize",
                            "comment": "minimum size and alignment for non-coherent host-mapped device memory access"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSemaphoreCreateFlags",
                            "name": "flags",
                            "comment": "Semaphore creation flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkQueryPoolCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkQueryPoolCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkQueryType",
                            "name": "queryType"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queryCount"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "VkQueryPipelineStatisticFlags",
                            "name": "pipelineStatistics",
                            "comment": "Optional"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFramebufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkFramebufferCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkRenderPass",
                            "name": "renderPass"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "attachmentCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "attachmentCount",
                            "type": "VkImageView",
                            "name": "pAttachments",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "width"
                        },
                        {
                            "type": "uint32_t",
                            "name": "height"
                        },
                        {
                            "type": "uint32_t",
                            "name": "layers"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDrawIndirectCommand",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "vertexCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstVertex"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "firstInstance"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDrawIndexedIndirectCommand",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "indexCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstIndex"
                        },
                        {
                            "type": "int32_t",
                            "name": "vertexOffset"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "firstInstance"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDispatchIndirectCommand",
                    "member": [
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "x"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "y"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "z"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMultiDrawInfoEXT",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "firstVertex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "vertexCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMultiDrawIndexedInfoEXT",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "firstIndex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "indexCount"
                        },
                        {
                            "type": "int32_t",
                            "name": "vertexOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubmitInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SUBMIT_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "waitSemaphoreCount"
                        },
                        {
                            "@len": "waitSemaphoreCount",
                            "type": "VkSemaphore",
                            "name": "pWaitSemaphores",
                            "#text": "const *"
                        },
                        {
                            "@len": "waitSemaphoreCount",
                            "type": "VkPipelineStageFlags",
                            "name": "pWaitDstStageMask",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "commandBufferCount"
                        },
                        {
                            "@len": "commandBufferCount",
                            "type": "VkCommandBuffer",
                            "name": "pCommandBuffers",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "signalSemaphoreCount"
                        },
                        {
                            "@len": "signalSemaphoreCount",
                            "type": "VkSemaphore",
                            "name": "pSignalSemaphores",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayPropertiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkDisplayKHR",
                            "name": "display",
                            "comment": "Handle of the display object"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "displayName",
                            "comment": "Name of the display",
                            "#text": "const *"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "physicalDimensions",
                            "comment": "In millimeters?"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "physicalResolution",
                            "comment": "Max resolution for CRT?"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSurfaceTransformFlagsKHR",
                            "name": "supportedTransforms",
                            "comment": "one or more bits from VkSurfaceTransformFlagsKHR"
                        },
                        {
                            "type": "VkBool32",
                            "name": "planeReorderPossible",
                            "comment": "VK_TRUE if the overlay plane's z-order can be changed on this display."
                        },
                        {
                            "type": "VkBool32",
                            "name": "persistentContent",
                            "comment": "VK_TRUE if this is a \"smart\" display that supports self-refresh/internal buffering."
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayPlanePropertiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkDisplayKHR",
                            "name": "currentDisplay",
                            "comment": "Display the plane is currently associated with.  Will be VK_NULL_HANDLE if the plane is not in use."
                        },
                        {
                            "type": "uint32_t",
                            "name": "currentStackIndex",
                            "comment": "Current z-order of the plane."
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayModeParametersKHR",
                    "member": [
                        {
                            "type": "VkExtent2D",
                            "name": "visibleRegion",
                            "comment": "Visible scanout region."
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "refreshRate",
                            "comment": "Number of times per second the display is updated."
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayModePropertiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkDisplayModeKHR",
                            "name": "displayMode",
                            "comment": "Handle of this display mode."
                        },
                        {
                            "type": "VkDisplayModeParametersKHR",
                            "name": "parameters",
                            "comment": "The parameters this mode uses."
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayModeCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDisplayModeCreateFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "type": "VkDisplayModeParametersKHR",
                            "name": "parameters",
                            "comment": "The parameters this mode uses."
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayPlaneCapabilitiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "VkDisplayPlaneAlphaFlagsKHR",
                            "name": "supportedAlpha",
                            "comment": "Types of alpha blending supported, if any."
                        },
                        {
                            "type": "VkOffset2D",
                            "name": "minSrcPosition",
                            "comment": "Does the plane have any position and extent restrictions?"
                        },
                        {
                            "type": "VkOffset2D",
                            "name": "maxSrcPosition"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "minSrcExtent"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "maxSrcExtent"
                        },
                        {
                            "type": "VkOffset2D",
                            "name": "minDstPosition"
                        },
                        {
                            "type": "VkOffset2D",
                            "name": "maxDstPosition"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "minDstExtent"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "maxDstExtent"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplaySurfaceCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDisplaySurfaceCreateFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "type": "VkDisplayModeKHR",
                            "name": "displayMode",
                            "comment": "The mode to use when displaying this surface"
                        },
                        {
                            "type": "uint32_t",
                            "name": "planeIndex",
                            "comment": "The plane on which this surface appears.  Must be between 0 and the value returned by vkGetPhysicalDeviceDisplayPlanePropertiesKHR() in pPropertyCount."
                        },
                        {
                            "type": "uint32_t",
                            "name": "planeStackIndex",
                            "comment": "The z-order of the plane."
                        },
                        {
                            "type": "VkSurfaceTransformFlagBitsKHR",
                            "name": "transform",
                            "comment": "Transform to apply to the images as part of the scanout operation"
                        },
                        {
                            "type": "float",
                            "name": "globalAlpha",
                            "comment": "Global alpha value.  Must be between 0 and 1, inclusive.  Ignored if alphaMode is not VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR"
                        },
                        {
                            "type": "VkDisplayPlaneAlphaFlagBitsKHR",
                            "name": "alphaMode",
                            "comment": "What type of alpha blending to use.  Must be a bit from vkGetDisplayPlanePropertiesKHR::supportedAlpha."
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "imageExtent",
                            "comment": "size of the images to use with this surface"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayPresentInfoKHR",
                    "@structextends": "VkPresentInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkRect2D",
                            "name": "srcRect",
                            "comment": "Rectangle within the presentable image to read pixel data from when presenting to the display."
                        },
                        {
                            "type": "VkRect2D",
                            "name": "dstRect",
                            "comment": "Rectangle within the current display mode's visible region to display srcRectangle in."
                        },
                        {
                            "type": "VkBool32",
                            "name": "persistent",
                            "comment": "For smart displays, use buffered mode.  If the display properties member \"persistentMode\" is VK_FALSE, this member must always be VK_FALSE."
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSurfaceCapabilitiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "minImageCount",
                            "comment": "Supported minimum number of images for the surface"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxImageCount",
                            "comment": "Supported maximum number of images for the surface, 0 for unlimited"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "currentExtent",
                            "comment": "Current image width and height for the surface, (0, 0) if undefined"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "minImageExtent",
                            "comment": "Supported minimum image width and height for the surface"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "maxImageExtent",
                            "comment": "Supported maximum image width and height for the surface"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxImageArrayLayers",
                            "comment": "Supported maximum number of image layers for the surface"
                        },
                        {
                            "type": "VkSurfaceTransformFlagsKHR",
                            "name": "supportedTransforms",
                            "comment": "1 or more bits representing the transforms supported"
                        },
                        {
                            "type": "VkSurfaceTransformFlagBitsKHR",
                            "name": "currentTransform",
                            "comment": "The surface's current transform relative to the device's natural orientation"
                        },
                        {
                            "type": "VkCompositeAlphaFlagsKHR",
                            "name": "supportedCompositeAlpha",
                            "comment": "1 or more bits representing the alpha compositing modes supported"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "supportedUsageFlags",
                            "comment": "Supported image usage flags for the surface"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAndroidSurfaceCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAndroidSurfaceCreateFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "ANativeWindow",
                            "name": "window",
                            "#text": "struct *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkViSurfaceCreateInfoNN",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkViSurfaceCreateFlagsNN",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "window",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkWaylandSurfaceCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkWaylandSurfaceCreateFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "wl_display",
                            "name": "display",
                            "#text": "struct *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "wl_surface",
                            "name": "surface",
                            "#text": "struct *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkWin32SurfaceCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkWin32SurfaceCreateFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "type": "HINSTANCE",
                            "name": "hinstance"
                        },
                        {
                            "type": "HWND",
                            "name": "hwnd"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkXlibSurfaceCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkXlibSurfaceCreateFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "Display",
                            "name": "dpy",
                            "#text": "*"
                        },
                        {
                            "type": "Window",
                            "name": "window"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkXcbSurfaceCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkXcbSurfaceCreateFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "xcb_connection_t",
                            "name": "connection",
                            "#text": "*"
                        },
                        {
                            "type": "xcb_window_t",
                            "name": "window"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDirectFBSurfaceCreateInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDirectFBSurfaceCreateFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "IDirectFB",
                            "name": "dfb",
                            "#text": "*"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "IDirectFBSurface",
                            "name": "surface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImagePipeSurfaceCreateInfoFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImagePipeSurfaceCreateFlagsFUCHSIA",
                            "name": "flags"
                        },
                        {
                            "type": "zx_handle_t",
                            "name": "imagePipeHandle"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkStreamDescriptorSurfaceCreateInfoGGP",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkStreamDescriptorSurfaceCreateFlagsGGP",
                            "name": "flags"
                        },
                        {
                            "type": "GgpStreamDescriptor",
                            "name": "streamDescriptor"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkScreenSurfaceCreateInfoQNX",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkScreenSurfaceCreateFlagsQNX",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "_screen_context",
                            "name": "context",
                            "#text": "struct *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "_screen_window",
                            "name": "window",
                            "#text": "struct *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSurfaceFormatKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkFormat",
                            "name": "format",
                            "comment": "Supported pair of rendering format"
                        },
                        {
                            "type": "VkColorSpaceKHR",
                            "name": "colorSpace",
                            "comment": "and color space for the surface"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSwapchainCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSwapchainCreateFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "surface",
                            "comment": "The swapchain's target surface"
                        },
                        {
                            "type": "uint32_t",
                            "name": "minImageCount",
                            "comment": "Minimum number of presentation images the application needs"
                        },
                        {
                            "type": "VkFormat",
                            "name": "imageFormat",
                            "comment": "Format of the presentation images"
                        },
                        {
                            "type": "VkColorSpaceKHR",
                            "name": "imageColorSpace",
                            "comment": "Colorspace of the presentation images"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "imageExtent",
                            "comment": "Dimensions of the presentation images"
                        },
                        {
                            "type": "uint32_t",
                            "name": "imageArrayLayers",
                            "comment": "Determines the number of views for multiview/stereo presentation"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "imageUsage",
                            "comment": "Bits indicating how the presentation images will be used"
                        },
                        {
                            "type": "VkSharingMode",
                            "name": "imageSharingMode",
                            "comment": "Sharing mode used for the presentation images"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "queueFamilyIndexCount",
                            "comment": "Number of queue families having access to the images in case of concurrent sharing mode"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "queueFamilyIndexCount",
                            "type": "uint32_t",
                            "name": "pQueueFamilyIndices",
                            "comment": "Array of queue family indices having access to the images in case of concurrent sharing mode",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceTransformFlagBitsKHR",
                            "name": "preTransform",
                            "comment": "The transform, relative to the device's natural orientation, applied to the image content prior to presentation"
                        },
                        {
                            "type": "VkCompositeAlphaFlagBitsKHR",
                            "name": "compositeAlpha",
                            "comment": "The alpha blending mode used when compositing this surface with other surfaces in the window system"
                        },
                        {
                            "type": "VkPresentModeKHR",
                            "name": "presentMode",
                            "comment": "Which presentation mode to use for presents on this swap chain"
                        },
                        {
                            "type": "VkBool32",
                            "name": "clipped",
                            "comment": "Specifies whether presentable images may be affected by window clip regions"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSwapchainKHR",
                            "name": "oldSwapchain",
                            "comment": "Existing swap chain to replace, if any"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPresentInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PRESENT_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "waitSemaphoreCount",
                            "comment": "Number of semaphores to wait for before presenting"
                        },
                        {
                            "@len": "waitSemaphoreCount",
                            "type": "VkSemaphore",
                            "name": "pWaitSemaphores",
                            "comment": "Semaphores to wait for before presenting",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "swapchainCount",
                            "comment": "Number of swapchains to present in this call"
                        },
                        {
                            "@len": "swapchainCount",
                            "type": "VkSwapchainKHR",
                            "name": "pSwapchains",
                            "comment": "Swapchains to present an image from",
                            "#text": "const *"
                        },
                        {
                            "@len": "swapchainCount",
                            "type": "uint32_t",
                            "name": "pImageIndices",
                            "comment": "Indices of which presentable images to present",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@len": "swapchainCount",
                            "type": "VkResult",
                            "name": "pResults",
                            "comment": "Optional (i.e. if non-NULL) VkResult for each swapchain",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDebugReportCallbackCreateInfoEXT",
                    "@structextends": "VkInstanceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDebugReportFlagsEXT",
                            "name": "flags",
                            "comment": "Indicates which events call this callback"
                        },
                        {
                            "type": "PFN_vkDebugReportCallbackEXT",
                            "name": "pfnCallback",
                            "comment": "Function pointer of a callback function"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pUserData",
                            "comment": "User data provided to callback function",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkValidationFlagsEXT",
                    "@structextends": "VkInstanceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT",
                            "type": "VkStructureType",
                            "name": "sType",
                            "comment": "Must be VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "disabledValidationCheckCount",
                            "comment": "Number of validation checks to disable"
                        },
                        {
                            "@len": "disabledValidationCheckCount",
                            "type": "VkValidationCheckEXT",
                            "name": "pDisabledValidationChecks",
                            "comment": "Validation checks to disable",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkValidationFeaturesEXT",
                    "@structextends": "VkInstanceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType",
                            "comment": "Must be VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "enabledValidationFeatureCount",
                            "comment": "Number of validation features to enable"
                        },
                        {
                            "@len": "enabledValidationFeatureCount",
                            "type": "VkValidationFeatureEnableEXT",
                            "name": "pEnabledValidationFeatures",
                            "comment": "Validation features to enable",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "disabledValidationFeatureCount",
                            "comment": "Number of validation features to disable"
                        },
                        {
                            "@len": "disabledValidationFeatureCount",
                            "type": "VkValidationFeatureDisableEXT",
                            "name": "pDisabledValidationFeatures",
                            "comment": "Validation features to disable",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineRasterizationStateRasterizationOrderAMD",
                    "@structextends": "VkPipelineRasterizationStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkRasterizationOrderAMD",
                            "name": "rasterizationOrder",
                            "comment": "Rasterization order to use for the pipeline"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDebugMarkerObjectNameInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDebugReportObjectTypeEXT",
                            "name": "objectType",
                            "comment": "The type of the object"
                        },
                        {
                            "@objecttype": "objectType",
                            "type": "uint64_t",
                            "name": "object",
                            "comment": "The handle of the object, cast to uint64_t"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pObjectName",
                            "comment": "Name to apply to the object",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDebugMarkerObjectTagInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDebugReportObjectTypeEXT",
                            "name": "objectType",
                            "comment": "The type of the object"
                        },
                        {
                            "@objecttype": "objectType",
                            "type": "uint64_t",
                            "name": "object",
                            "comment": "The handle of the object, cast to uint64_t"
                        },
                        {
                            "type": "uint64_t",
                            "name": "tagName",
                            "comment": "The name of the tag to set on the object"
                        },
                        {
                            "type": "size_t",
                            "name": "tagSize",
                            "comment": "The length in bytes of the tag data"
                        },
                        {
                            "@len": "tagSize",
                            "type": "void",
                            "name": "pTag",
                            "comment": "Tag data to attach to the object",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDebugMarkerMarkerInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pMarkerName",
                            "comment": "Name of the debug marker",
                            "#text": "const *"
                        },
                        {
                            "type": "float",
                            "name": "color",
                            "comment": "Optional color for debug marker",
                            "#text": "[4]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDedicatedAllocationImageCreateInfoNV",
                    "@structextends": "VkImageCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "dedicatedAllocation",
                            "comment": "Whether this image uses a dedicated allocation"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDedicatedAllocationBufferCreateInfoNV",
                    "@structextends": "VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "dedicatedAllocation",
                            "comment": "Whether this buffer uses a dedicated allocation"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDedicatedAllocationMemoryAllocateInfoNV",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImage",
                            "name": "image",
                            "comment": "Image that this allocation will be bound to"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "buffer",
                            "comment": "Buffer that this allocation will be bound to"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalImageFormatPropertiesNV",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkImageFormatProperties",
                            "name": "imageFormatProperties"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryFeatureFlagsNV",
                            "name": "externalMemoryFeatures"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlagsNV",
                            "name": "exportFromImportedHandleTypes"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlagsNV",
                            "name": "compatibleHandleTypes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalMemoryImageCreateInfoNV",
                    "@structextends": "VkImageCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlagsNV",
                            "name": "handleTypes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExportMemoryAllocateInfoNV",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlagsNV",
                            "name": "handleTypes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImportMemoryWin32HandleInfoNV",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlagsNV",
                            "name": "handleType"
                        },
                        {
                            "@optional": "true",
                            "type": "HANDLE",
                            "name": "handle"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExportMemoryWin32HandleInfoNV",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "SECURITY_ATTRIBUTES",
                            "name": "pAttributes",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "DWORD",
                            "name": "dwAccess"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkWin32KeyedMutexAcquireReleaseInfoNV",
                    "@structextends": "VkSubmitInfo,VkSubmitInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "acquireCount"
                        },
                        {
                            "@len": "acquireCount",
                            "type": "VkDeviceMemory",
                            "name": "pAcquireSyncs",
                            "#text": "const *"
                        },
                        {
                            "@len": "acquireCount",
                            "type": "uint64_t",
                            "name": "pAcquireKeys",
                            "#text": "const *"
                        },
                        {
                            "@len": "acquireCount",
                            "type": "uint32_t",
                            "name": "pAcquireTimeoutMilliseconds",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "releaseCount"
                        },
                        {
                            "@len": "releaseCount",
                            "type": "VkDeviceMemory",
                            "name": "pReleaseSyncs",
                            "#text": "const *"
                        },
                        {
                            "@len": "releaseCount",
                            "type": "uint64_t",
                            "name": "pReleaseKeys",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "deviceGeneratedCommands"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDevicePrivateDataCreateInfo",
                    "@allowduplicate": "true",
                    "@structextends": "VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "privateDataSlotRequestCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDevicePrivateDataCreateInfoEXT",
                    "@alias": "VkDevicePrivateDataCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkPrivateDataSlotCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPrivateDataSlotCreateFlags",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPrivateDataSlotCreateInfoEXT",
                    "@alias": "VkPrivateDataSlotCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePrivateDataFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "privateData"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePrivateDataFeaturesEXT",
                    "@alias": "VkPhysicalDevicePrivateDataFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxGraphicsShaderGroupCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxIndirectSequenceCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxIndirectCommandsTokenCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxIndirectCommandsStreamCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxIndirectCommandsTokenOffset"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxIndirectCommandsStreamStride"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "minSequencesCountBufferOffsetAlignment"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "minSequencesIndexBufferOffsetAlignment"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "minIndirectCommandsBufferOffsetAlignment"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMultiDrawPropertiesEXT",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMultiDrawCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkGraphicsShaderGroupCreateInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stageCount"
                        },
                        {
                            "@len": "stageCount",
                            "type": "VkPipelineShaderStageCreateInfo",
                            "name": "pStages",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipelineVertexInputStateCreateInfo",
                            "name": "pVertexInputState",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipelineTessellationStateCreateInfo",
                            "name": "pTessellationState",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkGraphicsPipelineShaderGroupsCreateInfoNV",
                    "@structextends": "VkGraphicsPipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupCount"
                        },
                        {
                            "@len": "groupCount",
                            "type": "VkGraphicsShaderGroupCreateInfoNV",
                            "name": "pGroups",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "pipelineCount"
                        },
                        {
                            "@len": "pipelineCount",
                            "type": "VkPipeline",
                            "name": "pPipelines",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindShaderGroupIndirectCommandNV",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "groupIndex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindIndexBufferIndirectCommandNV",
                    "member": [
                        {
                            "type": "VkDeviceAddress",
                            "name": "bufferAddress"
                        },
                        {
                            "type": "uint32_t",
                            "name": "size"
                        },
                        {
                            "type": "VkIndexType",
                            "name": "indexType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindVertexBufferIndirectCommandNV",
                    "member": [
                        {
                            "type": "VkDeviceAddress",
                            "name": "bufferAddress"
                        },
                        {
                            "type": "uint32_t",
                            "name": "size"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSetStateFlagsIndirectCommandNV",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "data"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkIndirectCommandsStreamNV",
                    "member": [
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkIndirectCommandsLayoutTokenNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkIndirectCommandsTokenTypeNV",
                            "name": "tokenType"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stream"
                        },
                        {
                            "type": "uint32_t",
                            "name": "offset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "vertexBindingUnit"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vertexDynamicStride"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineLayout",
                            "name": "pushconstantPipelineLayout"
                        },
                        {
                            "@optional": "true",
                            "type": "VkShaderStageFlags",
                            "name": "pushconstantShaderStageFlags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "pushconstantOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "pushconstantSize"
                        },
                        {
                            "@optional": "true",
                            "type": "VkIndirectStateFlagsNV",
                            "name": "indirectStateFlags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "indexTypeCount"
                        },
                        {
                            "@len": "indexTypeCount",
                            "type": "VkIndexType",
                            "name": "pIndexTypes",
                            "#text": "const *"
                        },
                        {
                            "@len": "indexTypeCount",
                            "type": "uint32_t",
                            "name": "pIndexTypeValues",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkIndirectCommandsLayoutCreateInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkIndirectCommandsLayoutUsageFlagsNV",
                            "name": "flags"
                        },
                        {
                            "type": "VkPipelineBindPoint",
                            "name": "pipelineBindPoint"
                        },
                        {
                            "type": "uint32_t",
                            "name": "tokenCount"
                        },
                        {
                            "@len": "tokenCount",
                            "type": "VkIndirectCommandsLayoutTokenNV",
                            "name": "pTokens",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "streamCount"
                        },
                        {
                            "@len": "streamCount",
                            "type": "uint32_t",
                            "name": "pStreamStrides",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkGeneratedCommandsInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPipelineBindPoint",
                            "name": "pipelineBindPoint"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        },
                        {
                            "type": "VkIndirectCommandsLayoutNV",
                            "name": "indirectCommandsLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "streamCount"
                        },
                        {
                            "@len": "streamCount",
                            "type": "VkIndirectCommandsStreamNV",
                            "name": "pStreams",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "sequencesCount"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "preprocessBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "preprocessOffset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "preprocessSize"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "sequencesCountBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "sequencesCountOffset"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "sequencesIndexBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "sequencesIndexOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkGeneratedCommandsMemoryRequirementsInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPipelineBindPoint",
                            "name": "pipelineBindPoint"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        },
                        {
                            "type": "VkIndirectCommandsLayoutNV",
                            "name": "indirectCommandsLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxSequencesCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFeatures2",
                    "@structextends": "VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkPhysicalDeviceFeatures",
                            "name": "features"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFeatures2KHR",
                    "@alias": "VkPhysicalDeviceFeatures2"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "struct",
                            "type": "VkPhysicalDeviceProperties",
                            "name": "properties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceProperties2KHR",
                    "@alias": "VkPhysicalDeviceProperties2"
                },
                {
                    "@category": "struct",
                    "@name": "VkFormatProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkFormatProperties",
                            "name": "formatProperties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFormatProperties2KHR",
                    "@alias": "VkFormatProperties2"
                },
                {
                    "@category": "struct",
                    "@name": "VkImageFormatProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkImageFormatProperties",
                            "name": "imageFormatProperties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageFormatProperties2KHR",
                    "@alias": "VkImageFormatProperties2"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceImageFormatInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkImageType",
                            "name": "type"
                        },
                        {
                            "type": "VkImageTiling",
                            "name": "tiling"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "usage"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageCreateFlags",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceImageFormatInfo2KHR",
                    "@alias": "VkPhysicalDeviceImageFormatInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkQueueFamilyProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkQueueFamilyProperties",
                            "name": "queueFamilyProperties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkQueueFamilyProperties2KHR",
                    "@alias": "VkQueueFamilyProperties2"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMemoryProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkPhysicalDeviceMemoryProperties",
                            "name": "memoryProperties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMemoryProperties2KHR",
                    "@alias": "VkPhysicalDeviceMemoryProperties2"
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseImageFormatProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkSparseImageFormatProperties",
                            "name": "properties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseImageFormatProperties2KHR",
                    "@alias": "VkSparseImageFormatProperties2"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSparseImageFormatInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkImageType",
                            "name": "type"
                        },
                        {
                            "type": "VkSampleCountFlagBits",
                            "name": "samples"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "usage"
                        },
                        {
                            "type": "VkImageTiling",
                            "name": "tiling"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSparseImageFormatInfo2KHR",
                    "@alias": "VkPhysicalDeviceSparseImageFormatInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePushDescriptorPropertiesKHR",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPushDescriptors"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkConformanceVersion",
                    "member": [
                        {
                            "type": "uint8_t",
                            "name": "major"
                        },
                        {
                            "type": "uint8_t",
                            "name": "minor"
                        },
                        {
                            "type": "uint8_t",
                            "name": "subminor"
                        },
                        {
                            "type": "uint8_t",
                            "name": "patch"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkConformanceVersionKHR",
                    "@alias": "VkConformanceVersion"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDriverProperties",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDriverId",
                            "name": "driverID"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "char",
                            "name": "driverName",
                            "enum": [
                                "VK_MAX_DRIVER_NAME_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "char",
                            "name": "driverInfo",
                            "enum": [
                                "VK_MAX_DRIVER_INFO_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkConformanceVersion",
                            "name": "conformanceVersion"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDriverPropertiesKHR",
                    "@alias": "VkPhysicalDeviceDriverProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkPresentRegionsKHR",
                    "@structextends": "VkPresentInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "swapchainCount",
                            "comment": "Copy of VkPresentInfoKHR::swapchainCount"
                        },
                        {
                            "@len": "swapchainCount",
                            "@optional": "true",
                            "type": "VkPresentRegionKHR",
                            "name": "pRegions",
                            "comment": "The regions that have changed",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPresentRegionKHR",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "rectangleCount",
                            "comment": "Number of rectangles in pRectangles"
                        },
                        {
                            "@optional": "true",
                            "@len": "rectangleCount",
                            "type": "VkRectLayerKHR",
                            "name": "pRectangles",
                            "comment": "Array of rectangles that have changed in a swapchain's image(s)",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRectLayerKHR",
                    "member": [
                        {
                            "type": "VkOffset2D",
                            "name": "offset",
                            "comment": "upper-left corner of a rectangle that has not changed, in pixels of a presentation images"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkExtent2D",
                            "name": "extent",
                            "comment": "Dimensions of a rectangle that has not changed, in pixels of a presentation images"
                        },
                        {
                            "type": "uint32_t",
                            "name": "layer",
                            "comment": "Layer of a swapchain's image(s), for stereoscopic-3D images"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVariablePointersFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "variablePointersStorageBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "variablePointers"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVariablePointersFeaturesKHR",
                    "@alias": "VkPhysicalDeviceVariablePointersFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVariablePointerFeaturesKHR",
                    "@alias": "VkPhysicalDeviceVariablePointersFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVariablePointerFeatures",
                    "@alias": "VkPhysicalDeviceVariablePointersFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalMemoryProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkExternalMemoryFeatureFlags",
                            "name": "externalMemoryFeatures"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlags",
                            "name": "exportFromImportedHandleTypes"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlags",
                            "name": "compatibleHandleTypes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalMemoryPropertiesKHR",
                    "@alias": "VkExternalMemoryProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExternalImageFormatInfo",
                    "@structextends": "VkPhysicalDeviceImageFormatInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExternalImageFormatInfoKHR",
                    "@alias": "VkPhysicalDeviceExternalImageFormatInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalImageFormatProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkImageFormatProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkExternalMemoryProperties",
                            "name": "externalMemoryProperties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalImageFormatPropertiesKHR",
                    "@alias": "VkExternalImageFormatProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExternalBufferInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBufferCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkBufferUsageFlags",
                            "name": "usage"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExternalBufferInfoKHR",
                    "@alias": "VkPhysicalDeviceExternalBufferInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalBufferProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkExternalMemoryProperties",
                            "name": "externalMemoryProperties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalBufferPropertiesKHR",
                    "@alias": "VkExternalBufferProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceIDProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint8_t",
                            "name": "deviceUUID",
                            "enum": [
                                "VK_UUID_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint8_t",
                            "name": "driverUUID",
                            "enum": [
                                "VK_UUID_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint8_t",
                            "name": "deviceLUID",
                            "enum": [
                                "VK_LUID_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "deviceNodeMask"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "deviceLUIDValid"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceIDPropertiesKHR",
                    "@alias": "VkPhysicalDeviceIDProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalMemoryImageCreateInfo",
                    "@structextends": "VkImageCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlags",
                            "name": "handleTypes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalMemoryImageCreateInfoKHR",
                    "@alias": "VkExternalMemoryImageCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalMemoryBufferCreateInfo",
                    "@structextends": "VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlags",
                            "name": "handleTypes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalMemoryBufferCreateInfoKHR",
                    "@alias": "VkExternalMemoryBufferCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkExportMemoryAllocateInfo",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlags",
                            "name": "handleTypes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExportMemoryAllocateInfoKHR",
                    "@alias": "VkExportMemoryAllocateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkImportMemoryWin32HandleInfoKHR",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "@optional": "true",
                            "type": "HANDLE",
                            "name": "handle"
                        },
                        {
                            "@optional": "true",
                            "type": "LPCWSTR",
                            "name": "name"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExportMemoryWin32HandleInfoKHR",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "SECURITY_ATTRIBUTES",
                            "name": "pAttributes",
                            "#text": "const *"
                        },
                        {
                            "type": "DWORD",
                            "name": "dwAccess"
                        },
                        {
                            "type": "LPCWSTR",
                            "name": "name"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImportMemoryZirconHandleInfoFUCHSIA",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "@optional": "true",
                            "type": "zx_handle_t",
                            "name": "handle"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryZirconHandlePropertiesFUCHSIA",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryTypeBits"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryGetZirconHandleInfoFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryWin32HandlePropertiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryTypeBits"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryGetWin32HandleInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImportMemoryFdInfoKHR",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "type": "int",
                            "name": "fd"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryFdPropertiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryTypeBits"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryGetFdInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkWin32KeyedMutexAcquireReleaseInfoKHR",
                    "@structextends": "VkSubmitInfo,VkSubmitInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "acquireCount"
                        },
                        {
                            "@len": "acquireCount",
                            "type": "VkDeviceMemory",
                            "name": "pAcquireSyncs",
                            "#text": "const *"
                        },
                        {
                            "@len": "acquireCount",
                            "type": "uint64_t",
                            "name": "pAcquireKeys",
                            "#text": "const *"
                        },
                        {
                            "@len": "acquireCount",
                            "type": "uint32_t",
                            "name": "pAcquireTimeouts",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "releaseCount"
                        },
                        {
                            "@len": "releaseCount",
                            "type": "VkDeviceMemory",
                            "name": "pReleaseSyncs",
                            "#text": "const *"
                        },
                        {
                            "@len": "releaseCount",
                            "type": "uint64_t",
                            "name": "pReleaseKeys",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExternalSemaphoreInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkExternalSemaphoreHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExternalSemaphoreInfoKHR",
                    "@alias": "VkPhysicalDeviceExternalSemaphoreInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalSemaphoreProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkExternalSemaphoreHandleTypeFlags",
                            "name": "exportFromImportedHandleTypes"
                        },
                        {
                            "type": "VkExternalSemaphoreHandleTypeFlags",
                            "name": "compatibleHandleTypes"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalSemaphoreFeatureFlags",
                            "name": "externalSemaphoreFeatures"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalSemaphorePropertiesKHR",
                    "@alias": "VkExternalSemaphoreProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkExportSemaphoreCreateInfo",
                    "@structextends": "VkSemaphoreCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalSemaphoreHandleTypeFlags",
                            "name": "handleTypes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExportSemaphoreCreateInfoKHR",
                    "@alias": "VkExportSemaphoreCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkImportSemaphoreWin32HandleInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSemaphoreImportFlags",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkExternalSemaphoreHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "@optional": "true",
                            "type": "HANDLE",
                            "name": "handle"
                        },
                        {
                            "@optional": "true",
                            "type": "LPCWSTR",
                            "name": "name"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExportSemaphoreWin32HandleInfoKHR",
                    "@structextends": "VkSemaphoreCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "SECURITY_ATTRIBUTES",
                            "name": "pAttributes",
                            "#text": "const *"
                        },
                        {
                            "type": "DWORD",
                            "name": "dwAccess"
                        },
                        {
                            "type": "LPCWSTR",
                            "name": "name"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkD3D12FenceSubmitInfoKHR",
                    "@structextends": "VkSubmitInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "waitSemaphoreValuesCount"
                        },
                        {
                            "@optional": "true",
                            "@len": "waitSemaphoreValuesCount",
                            "type": "uint64_t",
                            "name": "pWaitSemaphoreValues",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "signalSemaphoreValuesCount"
                        },
                        {
                            "@optional": "true",
                            "@len": "signalSemaphoreValuesCount",
                            "type": "uint64_t",
                            "name": "pSignalSemaphoreValues",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreGetWin32HandleInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "type": "VkExternalSemaphoreHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImportSemaphoreFdInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSemaphoreImportFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkExternalSemaphoreHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "type": "int",
                            "name": "fd"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreGetFdInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "type": "VkExternalSemaphoreHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImportSemaphoreZirconHandleInfoFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSemaphoreImportFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkExternalSemaphoreHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "type": "zx_handle_t",
                            "name": "zirconHandle"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreGetZirconHandleInfoFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "type": "VkExternalSemaphoreHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExternalFenceInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkExternalFenceHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExternalFenceInfoKHR",
                    "@alias": "VkPhysicalDeviceExternalFenceInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalFenceProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkExternalFenceHandleTypeFlags",
                            "name": "exportFromImportedHandleTypes"
                        },
                        {
                            "type": "VkExternalFenceHandleTypeFlags",
                            "name": "compatibleHandleTypes"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalFenceFeatureFlags",
                            "name": "externalFenceFeatures"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalFencePropertiesKHR",
                    "@alias": "VkExternalFenceProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkExportFenceCreateInfo",
                    "@structextends": "VkFenceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalFenceHandleTypeFlags",
                            "name": "handleTypes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExportFenceCreateInfoKHR",
                    "@alias": "VkExportFenceCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkImportFenceWin32HandleInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkFence",
                            "name": "fence"
                        },
                        {
                            "@optional": "true",
                            "type": "VkFenceImportFlags",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkExternalFenceHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "@optional": "true",
                            "type": "HANDLE",
                            "name": "handle"
                        },
                        {
                            "@optional": "true",
                            "type": "LPCWSTR",
                            "name": "name"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExportFenceWin32HandleInfoKHR",
                    "@structextends": "VkFenceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "SECURITY_ATTRIBUTES",
                            "name": "pAttributes",
                            "#text": "const *"
                        },
                        {
                            "type": "DWORD",
                            "name": "dwAccess"
                        },
                        {
                            "type": "LPCWSTR",
                            "name": "name"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFenceGetWin32HandleInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFence",
                            "name": "fence"
                        },
                        {
                            "type": "VkExternalFenceHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImportFenceFdInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkFence",
                            "name": "fence"
                        },
                        {
                            "@optional": "true",
                            "type": "VkFenceImportFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkExternalFenceHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "type": "int",
                            "name": "fd"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFenceGetFdInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFence",
                            "name": "fence"
                        },
                        {
                            "type": "VkExternalFenceHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMultiviewFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "multiview",
                            "comment": "Multiple views in a renderpass"
                        },
                        {
                            "type": "VkBool32",
                            "name": "multiviewGeometryShader",
                            "comment": "Multiple views in a renderpass w/ geometry shader"
                        },
                        {
                            "type": "VkBool32",
                            "name": "multiviewTessellationShader",
                            "comment": "Multiple views in a renderpass w/ tessellation shader"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMultiviewFeaturesKHR",
                    "@alias": "VkPhysicalDeviceMultiviewFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMultiviewProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMultiviewViewCount",
                            "comment": "max number of views in a subpass"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMultiviewInstanceIndex",
                            "comment": "max instance index for a draw in a multiview subpass"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMultiviewPropertiesKHR",
                    "@alias": "VkPhysicalDeviceMultiviewProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassMultiviewCreateInfo",
                    "@structextends": "VkRenderPassCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "subpassCount"
                        },
                        {
                            "@len": "subpassCount",
                            "type": "uint32_t",
                            "name": "pViewMasks",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "dependencyCount"
                        },
                        {
                            "@len": "dependencyCount",
                            "type": "int32_t",
                            "name": "pViewOffsets",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "correlationMaskCount"
                        },
                        {
                            "@len": "correlationMaskCount",
                            "type": "uint32_t",
                            "name": "pCorrelationMasks",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassMultiviewCreateInfoKHR",
                    "@alias": "VkRenderPassMultiviewCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkSurfaceCapabilities2EXT",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "minImageCount",
                            "comment": "Supported minimum number of images for the surface"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxImageCount",
                            "comment": "Supported maximum number of images for the surface, 0 for unlimited"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "currentExtent",
                            "comment": "Current image width and height for the surface, (0, 0) if undefined"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "minImageExtent",
                            "comment": "Supported minimum image width and height for the surface"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "maxImageExtent",
                            "comment": "Supported maximum image width and height for the surface"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxImageArrayLayers",
                            "comment": "Supported maximum number of image layers for the surface"
                        },
                        {
                            "type": "VkSurfaceTransformFlagsKHR",
                            "name": "supportedTransforms",
                            "comment": "1 or more bits representing the transforms supported"
                        },
                        {
                            "type": "VkSurfaceTransformFlagBitsKHR",
                            "name": "currentTransform",
                            "comment": "The surface's current transform relative to the device's natural orientation"
                        },
                        {
                            "type": "VkCompositeAlphaFlagsKHR",
                            "name": "supportedCompositeAlpha",
                            "comment": "1 or more bits representing the alpha compositing modes supported"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "supportedUsageFlags",
                            "comment": "Supported image usage flags for the surface"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSurfaceCounterFlagsEXT",
                            "name": "supportedSurfaceCounters"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayPowerInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDisplayPowerStateEXT",
                            "name": "powerState"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceEventInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceEventTypeEXT",
                            "name": "deviceEvent"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayEventInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDisplayEventTypeEXT",
                            "name": "displayEvent"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSwapchainCounterCreateInfoEXT",
                    "@structextends": "VkSwapchainCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSurfaceCounterFlagsEXT",
                            "name": "surfaceCounters"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceGroupProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "physicalDeviceCount"
                        },
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevices",
                            "enum": [
                                "VK_MAX_DEVICE_GROUP_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "VkBool32",
                            "name": "subsetAllocation"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceGroupPropertiesKHR",
                    "@alias": "VkPhysicalDeviceGroupProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryAllocateFlagsInfo",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkMemoryAllocateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "deviceMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryAllocateFlagsInfoKHR",
                    "@alias": "VkMemoryAllocateFlagsInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkBindBufferMemoryInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "memoryOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindBufferMemoryInfoKHR",
                    "@alias": "VkBindBufferMemoryInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkBindBufferMemoryDeviceGroupInfo",
                    "@structextends": "VkBindBufferMemoryInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "deviceIndexCount"
                        },
                        {
                            "@len": "deviceIndexCount",
                            "type": "uint32_t",
                            "name": "pDeviceIndices",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindBufferMemoryDeviceGroupInfoKHR",
                    "@alias": "VkBindBufferMemoryDeviceGroupInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkBindImageMemoryInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "memoryOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindImageMemoryInfoKHR",
                    "@alias": "VkBindImageMemoryInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkBindImageMemoryDeviceGroupInfo",
                    "@structextends": "VkBindImageMemoryInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "deviceIndexCount"
                        },
                        {
                            "@len": "deviceIndexCount",
                            "type": "uint32_t",
                            "name": "pDeviceIndices",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "splitInstanceBindRegionCount"
                        },
                        {
                            "@len": "splitInstanceBindRegionCount",
                            "type": "VkRect2D",
                            "name": "pSplitInstanceBindRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindImageMemoryDeviceGroupInfoKHR",
                    "@alias": "VkBindImageMemoryDeviceGroupInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupRenderPassBeginInfo",
                    "@structextends": "VkRenderPassBeginInfo,VkRenderingInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "deviceMask"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "deviceRenderAreaCount"
                        },
                        {
                            "@len": "deviceRenderAreaCount",
                            "type": "VkRect2D",
                            "name": "pDeviceRenderAreas",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupRenderPassBeginInfoKHR",
                    "@alias": "VkDeviceGroupRenderPassBeginInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupCommandBufferBeginInfo",
                    "@structextends": "VkCommandBufferBeginInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "deviceMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupCommandBufferBeginInfoKHR",
                    "@alias": "VkDeviceGroupCommandBufferBeginInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupSubmitInfo",
                    "@structextends": "VkSubmitInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "waitSemaphoreCount"
                        },
                        {
                            "@len": "waitSemaphoreCount",
                            "type": "uint32_t",
                            "name": "pWaitSemaphoreDeviceIndices",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "commandBufferCount"
                        },
                        {
                            "@len": "commandBufferCount",
                            "type": "uint32_t",
                            "name": "pCommandBufferDeviceMasks",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "signalSemaphoreCount"
                        },
                        {
                            "@len": "signalSemaphoreCount",
                            "type": "uint32_t",
                            "name": "pSignalSemaphoreDeviceIndices",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupSubmitInfoKHR",
                    "@alias": "VkDeviceGroupSubmitInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupBindSparseInfo",
                    "@structextends": "VkBindSparseInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "resourceDeviceIndex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryDeviceIndex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupBindSparseInfoKHR",
                    "@alias": "VkDeviceGroupBindSparseInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupPresentCapabilitiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "presentMask",
                            "enum": [
                                "VK_MAX_DEVICE_GROUP_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "VkDeviceGroupPresentModeFlagsKHR",
                            "name": "modes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageSwapchainCreateInfoKHR",
                    "@structextends": "VkImageCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindImageMemorySwapchainInfoKHR",
                    "@structextends": "VkBindImageMemoryInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        },
                        {
                            "type": "uint32_t",
                            "name": "imageIndex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAcquireNextImageInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        },
                        {
                            "type": "uint64_t",
                            "name": "timeout"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkFence",
                            "name": "fence"
                        },
                        {
                            "type": "uint32_t",
                            "name": "deviceMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupPresentInfoKHR",
                    "@structextends": "VkPresentInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "swapchainCount"
                        },
                        {
                            "@len": "swapchainCount",
                            "type": "uint32_t",
                            "name": "pDeviceMasks",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceGroupPresentModeFlagBitsKHR",
                            "name": "mode"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupDeviceCreateInfo",
                    "@structextends": "VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "physicalDeviceCount"
                        },
                        {
                            "@len": "physicalDeviceCount",
                            "type": "VkPhysicalDevice",
                            "name": "pPhysicalDevices",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupDeviceCreateInfoKHR",
                    "@alias": "VkDeviceGroupDeviceCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceGroupSwapchainCreateInfoKHR",
                    "@structextends": "VkSwapchainCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceGroupPresentModeFlagsKHR",
                            "name": "modes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorUpdateTemplateEntry",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "dstBinding",
                            "comment": "Binding within the destination descriptor set to write"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstArrayElement",
                            "comment": "Array element within the destination binding to write"
                        },
                        {
                            "type": "uint32_t",
                            "name": "descriptorCount",
                            "comment": "Number of descriptors to write"
                        },
                        {
                            "type": "VkDescriptorType",
                            "name": "descriptorType",
                            "comment": "Descriptor type to write"
                        },
                        {
                            "type": "size_t",
                            "name": "offset",
                            "comment": "Offset into pData where the descriptors to update are stored"
                        },
                        {
                            "type": "size_t",
                            "name": "stride",
                            "comment": "Stride between two descriptors in pData when writing more than one descriptor"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorUpdateTemplateEntryKHR",
                    "@alias": "VkDescriptorUpdateTemplateEntry"
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorUpdateTemplateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDescriptorUpdateTemplateCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "descriptorUpdateEntryCount",
                            "comment": "Number of descriptor update entries to use for the update template"
                        },
                        {
                            "@len": "descriptorUpdateEntryCount",
                            "type": "VkDescriptorUpdateTemplateEntry",
                            "name": "pDescriptorUpdateEntries",
                            "comment": "Descriptor update entries for the template",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDescriptorUpdateTemplateType",
                            "name": "templateType"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDescriptorSetLayout",
                            "name": "descriptorSetLayout"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkPipelineBindPoint",
                            "name": "pipelineBindPoint"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkPipelineLayout",
                            "name": "pipelineLayout",
                            "comment": "If used for push descriptors, this is the only allowed layout"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "set"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorUpdateTemplateCreateInfoKHR",
                    "@alias": "VkDescriptorUpdateTemplateCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkXYColorEXT",
                    "@comment": "Chromaticity coordinate",
                    "member": [
                        {
                            "type": "float",
                            "name": "x"
                        },
                        {
                            "type": "float",
                            "name": "y"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePresentIdFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "presentId",
                            "comment": "Present ID in VkPresentInfoKHR"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPresentIdKHR",
                    "@structextends": "VkPresentInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PRESENT_ID_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "swapchainCount",
                            "comment": "Copy of VkPresentInfoKHR::swapchainCount"
                        },
                        {
                            "@len": "swapchainCount",
                            "@optional": "true",
                            "type": "uint64_t",
                            "name": "pPresentIds",
                            "comment": "Present ID values for each swapchain",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePresentWaitFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "presentWait",
                            "comment": "vkWaitForPresentKHR is supported"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkHdrMetadataEXT",
                    "comment": [
                        "Display primary in chromaticity coordinates",
                        "From SMPTE 2086",
                        "From CTA 861.3"
                    ],
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_HDR_METADATA_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkXYColorEXT",
                            "name": "displayPrimaryRed",
                            "comment": "Display primary's Red"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkXYColorEXT",
                            "name": "displayPrimaryGreen",
                            "comment": "Display primary's Green"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkXYColorEXT",
                            "name": "displayPrimaryBlue",
                            "comment": "Display primary's Blue"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkXYColorEXT",
                            "name": "whitePoint",
                            "comment": "Display primary's Blue"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "float",
                            "name": "maxLuminance",
                            "comment": "Display maximum luminance"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "float",
                            "name": "minLuminance",
                            "comment": "Display minimum luminance"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "float",
                            "name": "maxContentLightLevel",
                            "comment": "Content maximum luminance"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "float",
                            "name": "maxFrameAverageLightLevel"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayNativeHdrSurfaceCapabilitiesAMD",
                    "@returnedonly": "true",
                    "@structextends": "VkSurfaceCapabilities2KHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "localDimmingSupport"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSwapchainDisplayNativeHdrCreateInfoAMD",
                    "@structextends": "VkSwapchainCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "localDimmingEnable"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRefreshCycleDurationGOOGLE",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "uint64_t",
                            "name": "refreshDuration",
                            "comment": "Number of nanoseconds from the start of one refresh cycle to the next"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPastPresentationTimingGOOGLE",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "presentID",
                            "comment": "Application-provided identifier, previously given to vkQueuePresentKHR"
                        },
                        {
                            "type": "uint64_t",
                            "name": "desiredPresentTime",
                            "comment": "Earliest time an image should have been presented, previously given to vkQueuePresentKHR"
                        },
                        {
                            "type": "uint64_t",
                            "name": "actualPresentTime",
                            "comment": "Time the image was actually displayed"
                        },
                        {
                            "type": "uint64_t",
                            "name": "earliestPresentTime",
                            "comment": "Earliest time the image could have been displayed"
                        },
                        {
                            "type": "uint64_t",
                            "name": "presentMargin",
                            "comment": "How early vkQueuePresentKHR was processed vs. how soon it needed to be and make earliestPresentTime"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPresentTimesInfoGOOGLE",
                    "@structextends": "VkPresentInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "swapchainCount",
                            "comment": "Copy of VkPresentInfoKHR::swapchainCount"
                        },
                        {
                            "@len": "swapchainCount",
                            "@optional": "true",
                            "type": "VkPresentTimeGOOGLE",
                            "name": "pTimes",
                            "comment": "The earliest times to present images",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPresentTimeGOOGLE",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "presentID",
                            "comment": "Application-provided identifier"
                        },
                        {
                            "type": "uint64_t",
                            "name": "desiredPresentTime",
                            "comment": "Earliest time an image should be presented"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkIOSSurfaceCreateInfoMVK",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkIOSSurfaceCreateFlagsMVK",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pView",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMacOSSurfaceCreateInfoMVK",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkMacOSSurfaceCreateFlagsMVK",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pView",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMetalSurfaceCreateInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkMetalSurfaceCreateFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "CAMetalLayer",
                            "name": "pLayer",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkViewportWScalingNV",
                    "member": [
                        {
                            "type": "float",
                            "name": "xcoeff"
                        },
                        {
                            "type": "float",
                            "name": "ycoeff"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineViewportWScalingStateCreateInfoNV",
                    "@structextends": "VkPipelineViewportStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "viewportWScalingEnable"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewportCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "@len": "viewportCount",
                            "type": "VkViewportWScalingNV",
                            "name": "pViewportWScalings",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkViewportSwizzleNV",
                    "member": [
                        {
                            "type": "VkViewportCoordinateSwizzleNV",
                            "name": "x"
                        },
                        {
                            "type": "VkViewportCoordinateSwizzleNV",
                            "name": "y"
                        },
                        {
                            "type": "VkViewportCoordinateSwizzleNV",
                            "name": "z"
                        },
                        {
                            "type": "VkViewportCoordinateSwizzleNV",
                            "name": "w"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineViewportSwizzleStateCreateInfoNV",
                    "@structextends": "VkPipelineViewportStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineViewportSwizzleStateCreateFlagsNV",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewportCount"
                        },
                        {
                            "@len": "viewportCount",
                            "type": "VkViewportSwizzleNV",
                            "name": "pViewportSwizzles",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDiscardRectanglePropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDiscardRectangles",
                            "comment": "max number of active discard rectangles"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineDiscardRectangleStateCreateInfoEXT",
                    "@structextends": "VkGraphicsPipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineDiscardRectangleStateCreateFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "VkDiscardRectangleModeEXT",
                            "name": "discardRectangleMode"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "discardRectangleCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "discardRectangleCount",
                            "type": "VkRect2D",
                            "name": "pDiscardRectangles",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "perViewPositionAllComponents"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkInputAttachmentAspectReference",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "subpass"
                        },
                        {
                            "type": "uint32_t",
                            "name": "inputAttachmentIndex"
                        },
                        {
                            "type": "VkImageAspectFlags",
                            "name": "aspectMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkInputAttachmentAspectReferenceKHR",
                    "@alias": "VkInputAttachmentAspectReference"
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassInputAttachmentAspectCreateInfo",
                    "@structextends": "VkRenderPassCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "aspectReferenceCount"
                        },
                        {
                            "@len": "aspectReferenceCount",
                            "type": "VkInputAttachmentAspectReference",
                            "name": "pAspectReferences",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassInputAttachmentAspectCreateInfoKHR",
                    "@alias": "VkRenderPassInputAttachmentAspectCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSurfaceInfo2KHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSurfaceKHR",
                            "name": "surface"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSurfaceCapabilities2KHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkSurfaceCapabilitiesKHR",
                            "name": "surfaceCapabilities"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSurfaceFormat2KHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkSurfaceFormatKHR",
                            "name": "surfaceFormat"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayProperties2KHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkDisplayPropertiesKHR",
                            "name": "displayProperties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayPlaneProperties2KHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkDisplayPlanePropertiesKHR",
                            "name": "displayPlaneProperties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayModeProperties2KHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkDisplayModePropertiesKHR",
                            "name": "displayModeProperties"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayPlaneInfo2KHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkDisplayModeKHR",
                            "name": "mode"
                        },
                        {
                            "type": "uint32_t",
                            "name": "planeIndex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDisplayPlaneCapabilities2KHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkDisplayPlaneCapabilitiesKHR",
                            "name": "capabilities"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSharedPresentSurfaceCapabilitiesKHR",
                    "@returnedonly": "true",
                    "@structextends": "VkSurfaceCapabilities2KHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageUsageFlags",
                            "name": "sharedPresentSupportedUsageFlags",
                            "comment": "Supported image usage flags if swapchain created using a shared present mode"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevice16BitStorageFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "storageBuffer16BitAccess",
                            "comment": "16-bit integer/floating-point variables supported in BufferBlock"
                        },
                        {
                            "type": "VkBool32",
                            "name": "uniformAndStorageBuffer16BitAccess",
                            "comment": "16-bit integer/floating-point variables supported in BufferBlock and Block"
                        },
                        {
                            "type": "VkBool32",
                            "name": "storagePushConstant16",
                            "comment": "16-bit integer/floating-point variables supported in PushConstant"
                        },
                        {
                            "type": "VkBool32",
                            "name": "storageInputOutput16",
                            "comment": "16-bit integer/floating-point variables supported in shader inputs and outputs"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevice16BitStorageFeaturesKHR",
                    "@alias": "VkPhysicalDevice16BitStorageFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSubgroupProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "subgroupSize",
                            "comment": "The size of a subgroup for this queue."
                        },
                        {
                            "@limittype": "bitmask",
                            "@noautovalidity": "true",
                            "type": "VkShaderStageFlags",
                            "name": "supportedStages",
                            "comment": "Bitfield of what shader stages support subgroup operations"
                        },
                        {
                            "@limittype": "bitmask",
                            "@noautovalidity": "true",
                            "type": "VkSubgroupFeatureFlags",
                            "name": "supportedOperations",
                            "comment": "Bitfield of what subgroup operations are supported."
                        },
                        {
                            "@limittype": "bitmask",
                            "@noautovalidity": "true",
                            "type": "VkBool32",
                            "name": "quadOperationsInAllStages",
                            "comment": "Flag to specify whether quad operations are available in all stages."
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkBool32",
                            "name": "shaderSubgroupExtendedTypes",
                            "comment": "Flag to specify whether subgroup operations with extended types are supported"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR",
                    "@alias": "VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferMemoryRequirementsInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferMemoryRequirementsInfo2KHR",
                    "@alias": "VkBufferMemoryRequirementsInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceBufferMemoryRequirements",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBufferCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceBufferMemoryRequirementsKHR",
                    "@alias": "VkDeviceBufferMemoryRequirements"
                },
                {
                    "@category": "struct",
                    "@name": "VkImageMemoryRequirementsInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageMemoryRequirementsInfo2KHR",
                    "@alias": "VkImageMemoryRequirementsInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkImageSparseMemoryRequirementsInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageSparseMemoryRequirementsInfo2KHR",
                    "@alias": "VkImageSparseMemoryRequirementsInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceImageMemoryRequirements",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageAspectFlagBits",
                            "name": "planeAspect"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceImageMemoryRequirementsKHR",
                    "@alias": "VkDeviceImageMemoryRequirements"
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryRequirements2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkMemoryRequirements",
                            "name": "memoryRequirements"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryRequirements2KHR",
                    "@alias": "VkMemoryRequirements2"
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseImageMemoryRequirements2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkSparseImageMemoryRequirements",
                            "name": "memoryRequirements"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSparseImageMemoryRequirements2KHR",
                    "@alias": "VkSparseImageMemoryRequirements2"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePointClippingProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkPointClippingBehavior",
                            "name": "pointClippingBehavior"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePointClippingPropertiesKHR",
                    "@alias": "VkPhysicalDevicePointClippingProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryDedicatedRequirements",
                    "@returnedonly": "true",
                    "@structextends": "VkMemoryRequirements2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "prefersDedicatedAllocation"
                        },
                        {
                            "type": "VkBool32",
                            "name": "requiresDedicatedAllocation"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryDedicatedRequirementsKHR",
                    "@alias": "VkMemoryDedicatedRequirements"
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryDedicatedAllocateInfo",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImage",
                            "name": "image",
                            "comment": "Image that this allocation will be bound to"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "buffer",
                            "comment": "Buffer that this allocation will be bound to"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryDedicatedAllocateInfoKHR",
                    "@alias": "VkMemoryDedicatedAllocateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkImageViewUsageCreateInfo",
                    "@structextends": "VkImageViewCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "usage"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageViewUsageCreateInfoKHR",
                    "@alias": "VkImageViewUsageCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineTessellationDomainOriginStateCreateInfo",
                    "@structextends": "VkPipelineTessellationStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkTessellationDomainOrigin",
                            "name": "domainOrigin"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineTessellationDomainOriginStateCreateInfoKHR",
                    "@alias": "VkPipelineTessellationDomainOriginStateCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerYcbcrConversionInfo",
                    "@structextends": "VkSamplerCreateInfo,VkImageViewCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSamplerYcbcrConversion",
                            "name": "conversion"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerYcbcrConversionInfoKHR",
                    "@alias": "VkSamplerYcbcrConversionInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerYcbcrConversionCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkSamplerYcbcrModelConversion",
                            "name": "ycbcrModel"
                        },
                        {
                            "type": "VkSamplerYcbcrRange",
                            "name": "ycbcrRange"
                        },
                        {
                            "type": "VkComponentMapping",
                            "name": "components"
                        },
                        {
                            "type": "VkChromaLocation",
                            "name": "xChromaOffset"
                        },
                        {
                            "type": "VkChromaLocation",
                            "name": "yChromaOffset"
                        },
                        {
                            "type": "VkFilter",
                            "name": "chromaFilter"
                        },
                        {
                            "type": "VkBool32",
                            "name": "forceExplicitReconstruction"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerYcbcrConversionCreateInfoKHR",
                    "@alias": "VkSamplerYcbcrConversionCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkBindImagePlaneMemoryInfo",
                    "@structextends": "VkBindImageMemoryInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageAspectFlagBits",
                            "name": "planeAspect"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindImagePlaneMemoryInfoKHR",
                    "@alias": "VkBindImagePlaneMemoryInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkImagePlaneMemoryRequirementsInfo",
                    "@structextends": "VkImageMemoryRequirementsInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageAspectFlagBits",
                            "name": "planeAspect"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImagePlaneMemoryRequirementsInfoKHR",
                    "@alias": "VkImagePlaneMemoryRequirementsInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSamplerYcbcrConversionFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "samplerYcbcrConversion",
                            "comment": "Sampler color conversion supported"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR",
                    "@alias": "VkPhysicalDeviceSamplerYcbcrConversionFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerYcbcrConversionImageFormatProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkImageFormatProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "combinedImageSamplerDescriptorCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerYcbcrConversionImageFormatPropertiesKHR",
                    "@alias": "VkSamplerYcbcrConversionImageFormatProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkTextureLODGatherFormatPropertiesAMD",
                    "@returnedonly": "true",
                    "@structextends": "VkImageFormatProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "supportsTextureGatherLODBiasAMD"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkConditionalRenderingBeginInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        },
                        {
                            "@optional": "true",
                            "type": "VkConditionalRenderingFlagsEXT",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkProtectedSubmitInfo",
                    "@structextends": "VkSubmitInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "protectedSubmit",
                            "comment": "Submit protected command buffers"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceProtectedMemoryFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "protectedMemory"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceProtectedMemoryProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "protectedNoFault"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceQueueInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeviceQueueCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueIndex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineCoverageToColorStateCreateInfoNV",
                    "@structextends": "VkPipelineMultisampleStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCoverageToColorStateCreateFlagsNV",
                            "name": "flags"
                        },
                        {
                            "type": "VkBool32",
                            "name": "coverageToColorEnable"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "coverageToColorLocation"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSamplerFilterMinmaxProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "filterMinmaxSingleComponentFormats"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "filterMinmaxImageComponentMapping"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT",
                    "@alias": "VkPhysicalDeviceSamplerFilterMinmaxProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkSampleLocationEXT",
                    "member": [
                        {
                            "type": "float",
                            "name": "x"
                        },
                        {
                            "type": "float",
                            "name": "y"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSampleLocationsInfoEXT",
                    "@structextends": "VkImageMemoryBarrier,VkImageMemoryBarrier2KHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkSampleCountFlagBits",
                            "name": "sampleLocationsPerPixel"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "sampleLocationGridSize"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "sampleLocationsCount"
                        },
                        {
                            "@len": "sampleLocationsCount",
                            "type": "VkSampleLocationEXT",
                            "name": "pSampleLocations",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentSampleLocationsEXT",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "attachmentIndex"
                        },
                        {
                            "type": "VkSampleLocationsInfoEXT",
                            "name": "sampleLocationsInfo"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassSampleLocationsEXT",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "subpassIndex"
                        },
                        {
                            "type": "VkSampleLocationsInfoEXT",
                            "name": "sampleLocationsInfo"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassSampleLocationsBeginInfoEXT",
                    "@structextends": "VkRenderPassBeginInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "attachmentInitialSampleLocationsCount"
                        },
                        {
                            "@len": "attachmentInitialSampleLocationsCount",
                            "type": "VkAttachmentSampleLocationsEXT",
                            "name": "pAttachmentInitialSampleLocations",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "postSubpassSampleLocationsCount"
                        },
                        {
                            "@len": "postSubpassSampleLocationsCount",
                            "type": "VkSubpassSampleLocationsEXT",
                            "name": "pPostSubpassSampleLocations",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineSampleLocationsStateCreateInfoEXT",
                    "@structextends": "VkPipelineMultisampleStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sampleLocationsEnable"
                        },
                        {
                            "type": "VkSampleLocationsInfoEXT",
                            "name": "sampleLocationsInfo"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSampleLocationsPropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkSampleCountFlags",
                            "name": "sampleLocationSampleCounts"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkExtent2D",
                            "name": "maxSampleLocationGridSize"
                        },
                        {
                            "@limittype": "range",
                            "type": "float",
                            "name": "sampleLocationCoordinateRange",
                            "#text": "[2]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "sampleLocationSubPixelBits"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "variableSampleLocations"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMultisamplePropertiesEXT",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "maxSampleLocationGridSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerReductionModeCreateInfo",
                    "@structextends": "VkSamplerCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSamplerReductionMode",
                            "name": "reductionMode"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerReductionModeCreateInfoEXT",
                    "@alias": "VkSamplerReductionModeCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "advancedBlendCoherentOperations"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMultiDrawFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "multiDraw"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "advancedBlendMaxColorAttachments"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "advancedBlendIndependentBlend"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "advancedBlendNonPremultipliedSrcColor"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "advancedBlendNonPremultipliedDstColor"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "advancedBlendCorrelatedOverlap"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "advancedBlendAllOperations"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineColorBlendAdvancedStateCreateInfoEXT",
                    "@structextends": "VkPipelineColorBlendStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "srcPremultiplied"
                        },
                        {
                            "type": "VkBool32",
                            "name": "dstPremultiplied"
                        },
                        {
                            "type": "VkBlendOverlapEXT",
                            "name": "blendOverlap"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceInlineUniformBlockFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "inlineUniformBlock"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingInlineUniformBlockUpdateAfterBind"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceInlineUniformBlockFeaturesEXT",
                    "@alias": "VkPhysicalDeviceInlineUniformBlockFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceInlineUniformBlockProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxInlineUniformBlockSize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorInlineUniformBlocks"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetInlineUniformBlocks"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindInlineUniformBlocks"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceInlineUniformBlockPropertiesEXT",
                    "@alias": "VkPhysicalDeviceInlineUniformBlockProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkWriteDescriptorSetInlineUniformBlock",
                    "@structextends": "VkWriteDescriptorSet",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dataSize"
                        },
                        {
                            "@len": "dataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkWriteDescriptorSetInlineUniformBlockEXT",
                    "@alias": "VkWriteDescriptorSetInlineUniformBlock"
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorPoolInlineUniformBlockCreateInfo",
                    "@structextends": "VkDescriptorPoolCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxInlineUniformBlockBindings"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorPoolInlineUniformBlockCreateInfoEXT",
                    "@alias": "VkDescriptorPoolInlineUniformBlockCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineCoverageModulationStateCreateInfoNV",
                    "@structextends": "VkPipelineMultisampleStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCoverageModulationStateCreateFlagsNV",
                            "name": "flags"
                        },
                        {
                            "type": "VkCoverageModulationModeNV",
                            "name": "coverageModulationMode"
                        },
                        {
                            "type": "VkBool32",
                            "name": "coverageModulationTableEnable"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "coverageModulationTableCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "@len": "coverageModulationTableCount",
                            "type": "float",
                            "name": "pCoverageModulationTable",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageFormatListCreateInfo",
                    "@structextends": "VkImageCreateInfo,VkSwapchainCreateInfoKHR,VkPhysicalDeviceImageFormatInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "viewFormatCount"
                        },
                        {
                            "@len": "viewFormatCount",
                            "type": "VkFormat",
                            "name": "pViewFormats",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageFormatListCreateInfoKHR",
                    "@alias": "VkImageFormatListCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkValidationCacheCreateInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkValidationCacheCreateFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "size_t",
                            "name": "initialDataSize"
                        },
                        {
                            "@len": "initialDataSize",
                            "type": "void",
                            "name": "pInitialData",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkShaderModuleValidationCacheCreateInfoEXT",
                    "@structextends": "VkShaderModuleCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkValidationCacheEXT",
                            "name": "validationCache"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMaintenance3Properties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerSetDescriptors"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkDeviceSize",
                            "name": "maxMemoryAllocationSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMaintenance3PropertiesKHR",
                    "@alias": "VkPhysicalDeviceMaintenance3Properties"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMaintenance4Features",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "maintenance4"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMaintenance4FeaturesKHR",
                    "@alias": "VkPhysicalDeviceMaintenance4Features"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMaintenance4Properties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkDeviceSize",
                            "name": "maxBufferSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMaintenance4PropertiesKHR",
                    "@alias": "VkPhysicalDeviceMaintenance4Properties"
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetLayoutSupport",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "supported"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetLayoutSupportKHR",
                    "@alias": "VkDescriptorSetLayoutSupport"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderDrawParametersFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderDrawParameters"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderDrawParameterFeatures",
                    "@alias": "VkPhysicalDeviceShaderDrawParametersFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderFloat16Int8Features",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderFloat16",
                            "comment": "16-bit floats (halfs) in shaders"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderInt8",
                            "comment": "8-bit integers in shaders"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderFloat16Int8FeaturesKHR",
                    "@alias": "VkPhysicalDeviceShaderFloat16Int8Features"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFloat16Int8FeaturesKHR",
                    "@alias": "VkPhysicalDeviceShaderFloat16Int8Features"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFloatControlsProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkShaderFloatControlsIndependence",
                            "name": "denormBehaviorIndependence"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkShaderFloatControlsIndependence",
                            "name": "roundingModeIndependence"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderSignedZeroInfNanPreserveFloat16",
                            "comment": "An implementation can preserve signed zero, nan, inf"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderSignedZeroInfNanPreserveFloat32",
                            "comment": "An implementation can preserve signed zero, nan, inf"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderSignedZeroInfNanPreserveFloat64",
                            "comment": "An implementation can preserve signed zero, nan, inf"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormPreserveFloat16",
                            "comment": "An implementation can preserve  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormPreserveFloat32",
                            "comment": "An implementation can preserve  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormPreserveFloat64",
                            "comment": "An implementation can preserve  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormFlushToZeroFloat16",
                            "comment": "An implementation can flush to zero  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormFlushToZeroFloat32",
                            "comment": "An implementation can flush to zero  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormFlushToZeroFloat64",
                            "comment": "An implementation can flush to zero  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTEFloat16",
                            "comment": "An implementation can support RTE"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTEFloat32",
                            "comment": "An implementation can support RTE"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTEFloat64",
                            "comment": "An implementation can support RTE"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTZFloat16",
                            "comment": "An implementation can support RTZ"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTZFloat32",
                            "comment": "An implementation can support RTZ"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTZFloat64",
                            "comment": "An implementation can support RTZ"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFloatControlsPropertiesKHR",
                    "@alias": "VkPhysicalDeviceFloatControlsProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceHostQueryResetFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "hostQueryReset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceHostQueryResetFeaturesEXT",
                    "@alias": "VkPhysicalDeviceHostQueryResetFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkNativeBufferUsage2ANDROID",
                    "member": [
                        {
                            "type": "uint64_t",
                            "name": "consumer"
                        },
                        {
                            "type": "uint64_t",
                            "name": "producer"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkNativeBufferANDROID",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_NATIVE_BUFFER_ANDROID",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "void",
                            "name": "handle",
                            "#text": "const *"
                        },
                        {
                            "type": "int",
                            "name": "stride"
                        },
                        {
                            "type": "int",
                            "name": "format"
                        },
                        {
                            "type": "int",
                            "name": "usage"
                        },
                        {
                            "type": "VkNativeBufferUsage2ANDROID",
                            "name": "usage2"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSwapchainImageCreateInfoANDROID",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSwapchainImageUsageFlagsANDROID",
                            "name": "usage"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePresentationPropertiesANDROID",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sharedImage"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkShaderResourceUsageAMD",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "numUsedVgprs"
                        },
                        {
                            "type": "uint32_t",
                            "name": "numUsedSgprs"
                        },
                        {
                            "type": "uint32_t",
                            "name": "ldsSizePerLocalWorkGroup"
                        },
                        {
                            "type": "size_t",
                            "name": "ldsUsageSizeInBytes"
                        },
                        {
                            "type": "size_t",
                            "name": "scratchMemUsageInBytes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkShaderStatisticsInfoAMD",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkShaderStageFlags",
                            "name": "shaderStageMask"
                        },
                        {
                            "type": "VkShaderResourceUsageAMD",
                            "name": "resourceUsage"
                        },
                        {
                            "type": "uint32_t",
                            "name": "numPhysicalVgprs"
                        },
                        {
                            "type": "uint32_t",
                            "name": "numPhysicalSgprs"
                        },
                        {
                            "type": "uint32_t",
                            "name": "numAvailableVgprs"
                        },
                        {
                            "type": "uint32_t",
                            "name": "numAvailableSgprs"
                        },
                        {
                            "type": "uint32_t",
                            "name": "computeWorkGroupSize",
                            "#text": "[3]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceQueueGlobalPriorityCreateInfoKHR",
                    "@structextends": "VkDeviceQueueCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkQueueGlobalPriorityKHR",
                            "name": "globalPriority"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceQueueGlobalPriorityCreateInfoEXT",
                    "@alias": "VkDeviceQueueGlobalPriorityCreateInfoKHR"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "globalPriorityQuery"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT",
                    "@alias": "VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR"
                },
                {
                    "@category": "struct",
                    "@name": "VkQueueFamilyGlobalPriorityPropertiesKHR",
                    "@structextends": "VkQueueFamilyProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "priorityCount"
                        },
                        {
                            "type": "VkQueueGlobalPriorityKHR",
                            "name": "priorities",
                            "enum": [
                                "VK_MAX_GLOBAL_PRIORITY_SIZE_KHR"
                            ],
                            "#text": "[]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkQueueFamilyGlobalPriorityPropertiesEXT",
                    "@alias": "VkQueueFamilyGlobalPriorityPropertiesKHR"
                },
                {
                    "@category": "struct",
                    "@name": "VkDebugUtilsObjectNameInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkObjectType",
                            "name": "objectType"
                        },
                        {
                            "@objecttype": "objectType",
                            "type": "uint64_t",
                            "name": "objectHandle"
                        },
                        {
                            "@optional": "true",
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pObjectName",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDebugUtilsObjectTagInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkObjectType",
                            "name": "objectType"
                        },
                        {
                            "@objecttype": "objectType",
                            "type": "uint64_t",
                            "name": "objectHandle"
                        },
                        {
                            "type": "uint64_t",
                            "name": "tagName"
                        },
                        {
                            "type": "size_t",
                            "name": "tagSize"
                        },
                        {
                            "@len": "tagSize",
                            "type": "void",
                            "name": "pTag",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDebugUtilsLabelEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pLabelName",
                            "#text": "const *"
                        },
                        {
                            "type": "float",
                            "name": "color",
                            "#text": "[4]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDebugUtilsMessengerCreateInfoEXT",
                    "@allowduplicate": "true",
                    "@structextends": "VkInstanceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDebugUtilsMessengerCreateFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "VkDebugUtilsMessageSeverityFlagsEXT",
                            "name": "messageSeverity"
                        },
                        {
                            "type": "VkDebugUtilsMessageTypeFlagsEXT",
                            "name": "messageType"
                        },
                        {
                            "type": "PFN_vkDebugUtilsMessengerCallbackEXT",
                            "name": "pfnUserCallback"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pUserData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDebugUtilsMessengerCallbackDataEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDebugUtilsMessengerCallbackDataFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pMessageIdName",
                            "#text": "const *"
                        },
                        {
                            "type": "int32_t",
                            "name": "messageIdNumber"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pMessage",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "queueLabelCount"
                        },
                        {
                            "@len": "queueLabelCount",
                            "type": "VkDebugUtilsLabelEXT",
                            "name": "pQueueLabels",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "cmdBufLabelCount"
                        },
                        {
                            "@len": "cmdBufLabelCount",
                            "type": "VkDebugUtilsLabelEXT",
                            "name": "pCmdBufLabels",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "objectCount"
                        },
                        {
                            "@len": "objectCount",
                            "type": "VkDebugUtilsObjectNameInfoEXT",
                            "name": "pObjects",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDeviceMemoryReportFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "deviceMemoryReport"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceDeviceMemoryReportCreateInfoEXT",
                    "@allowduplicate": "true",
                    "@structextends": "VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceMemoryReportFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "PFN_vkDeviceMemoryReportCallbackEXT",
                            "name": "pfnUserCallback"
                        },
                        {
                            "type": "void",
                            "name": "pUserData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceMemoryReportCallbackDataEXT",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkDeviceMemoryReportFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "VkDeviceMemoryReportEventTypeEXT",
                            "name": "type"
                        },
                        {
                            "type": "uint64_t",
                            "name": "memoryObjectId"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size"
                        },
                        {
                            "type": "VkObjectType",
                            "name": "objectType"
                        },
                        {
                            "type": "uint64_t",
                            "name": "objectHandle"
                        },
                        {
                            "type": "uint32_t",
                            "name": "heapIndex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImportMemoryHostPointerInfoEXT",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "@optional": "false",
                            "type": "void",
                            "name": "pHostPointer",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryHostPointerPropertiesEXT",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryTypeBits"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExternalMemoryHostPropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "minImportedHostPointerAlignment"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceConservativeRasterizationPropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "float",
                            "name": "primitiveOverestimationSize",
                            "comment": "The size in pixels the primitive is enlarged at each edge during conservative rasterization"
                        },
                        {
                            "@limittype": "max",
                            "type": "float",
                            "name": "maxExtraPrimitiveOverestimationSize",
                            "comment": "The maximum additional overestimation the client can specify in the pipeline state"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "float",
                            "name": "extraPrimitiveOverestimationSizeGranularity",
                            "comment": "The granularity of extra overestimation sizes the implementations supports between 0 and maxExtraOverestimationSize"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "primitiveUnderestimation",
                            "comment": "true if the implementation supports conservative rasterization underestimation mode"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "conservativePointAndLineRasterization",
                            "comment": "true if conservative rasterization also applies to points and lines"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "degenerateTrianglesRasterized",
                            "comment": "true if degenerate triangles (those with zero area after snap) are rasterized"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "degenerateLinesRasterized",
                            "comment": "true if degenerate lines (those with zero length after snap) are rasterized"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "fullyCoveredFragmentShaderInputVariable",
                            "comment": "true if the implementation supports the FullyCoveredEXT SPIR-V builtin fragment shader input variable"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "conservativeRasterizationPostDepthCoverage",
                            "comment": "true if the implementation supports both conservative rasterization and post depth coverage sample coverage mask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCalibratedTimestampInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkTimeDomainEXT",
                            "name": "timeDomain"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderCorePropertiesAMD",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "shaderEngineCount",
                            "comment": "number of shader engines"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "shaderArraysPerEngineCount",
                            "comment": "number of shader arrays"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "computeUnitsPerShaderArray",
                            "comment": "number of physical CUs per shader array"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "simdPerComputeUnit",
                            "comment": "number of SIMDs per compute unit"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "wavefrontsPerSimd",
                            "comment": "number of wavefront slots in each SIMD"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "wavefrontSize",
                            "comment": "maximum number of threads per wavefront"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "sgprsPerSimd",
                            "comment": "number of physical SGPRs per SIMD"
                        },
                        {
                            "@limittype": "min",
                            "type": "uint32_t",
                            "name": "minSgprAllocation",
                            "comment": "minimum number of SGPRs that can be allocated by a wave"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxSgprAllocation",
                            "comment": "number of available SGPRs"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "sgprAllocationGranularity",
                            "comment": "SGPRs are allocated in groups of this size"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "vgprsPerSimd",
                            "comment": "number of physical VGPRs per SIMD"
                        },
                        {
                            "@limittype": "min",
                            "type": "uint32_t",
                            "name": "minVgprAllocation",
                            "comment": "minimum number of VGPRs that can be allocated by a wave"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxVgprAllocation",
                            "comment": "number of available VGPRs"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "vgprAllocationGranularity",
                            "comment": "VGPRs are allocated in groups of this size"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderCoreProperties2AMD",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "comment": "Pointer to next structure",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkShaderCorePropertiesFlagsAMD",
                            "name": "shaderCoreFeatures",
                            "comment": "features supported by the shader core"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "activeComputeUnitCount",
                            "comment": "number of active compute units across all shader engines/arrays"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineRasterizationConservativeStateCreateInfoEXT",
                    "@structextends": "VkPipelineRasterizationStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineRasterizationConservativeStateCreateFlagsEXT",
                            "name": "flags",
                            "comment": "Reserved"
                        },
                        {
                            "type": "VkConservativeRasterizationModeEXT",
                            "name": "conservativeRasterizationMode",
                            "comment": "Conservative rasterization mode"
                        },
                        {
                            "type": "float",
                            "name": "extraPrimitiveOverestimationSize",
                            "comment": "Extra overestimation to add to the primitive"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDescriptorIndexingFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderInputAttachmentArrayDynamicIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderUniformTexelBufferArrayDynamicIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageTexelBufferArrayDynamicIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderUniformBufferArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSampledImageArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageBufferArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageImageArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderInputAttachmentArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderUniformTexelBufferArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageTexelBufferArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingUniformBufferUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingSampledImageUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingStorageImageUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingStorageBufferUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingUniformTexelBufferUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingStorageTexelBufferUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingUpdateUnusedWhilePending"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingPartiallyBound"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingVariableDescriptorCount"
                        },
                        {
                            "type": "VkBool32",
                            "name": "runtimeDescriptorArray"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDescriptorIndexingFeaturesEXT",
                    "@alias": "VkPhysicalDeviceDescriptorIndexingFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDescriptorIndexingProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxUpdateAfterBindDescriptorsInAllPools"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderUniformBufferArrayNonUniformIndexingNative"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderSampledImageArrayNonUniformIndexingNative"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderStorageBufferArrayNonUniformIndexingNative"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderStorageImageArrayNonUniformIndexingNative"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderInputAttachmentArrayNonUniformIndexingNative"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "robustBufferAccessUpdateAfterBind"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "quadDivergentImplicitLod"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindSamplers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindUniformBuffers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindStorageBuffers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindSampledImages"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindStorageImages"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindInputAttachments"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageUpdateAfterBindResources"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindSamplers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindUniformBuffers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindStorageBuffers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindSampledImages"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindStorageImages"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindInputAttachments"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDescriptorIndexingPropertiesEXT",
                    "@alias": "VkPhysicalDeviceDescriptorIndexingProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetLayoutBindingFlagsCreateInfo",
                    "@structextends": "VkDescriptorSetLayoutCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "bindingCount"
                        },
                        {
                            "@len": "bindingCount",
                            "@optional": "false,true",
                            "type": "VkDescriptorBindingFlags",
                            "name": "pBindingFlags",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetLayoutBindingFlagsCreateInfoEXT",
                    "@alias": "VkDescriptorSetLayoutBindingFlagsCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetVariableDescriptorCountAllocateInfo",
                    "@structextends": "VkDescriptorSetAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "descriptorSetCount"
                        },
                        {
                            "@len": "descriptorSetCount",
                            "type": "uint32_t",
                            "name": "pDescriptorCounts",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetVariableDescriptorCountAllocateInfoEXT",
                    "@alias": "VkDescriptorSetVariableDescriptorCountAllocateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetVariableDescriptorCountLayoutSupport",
                    "@structextends": "VkDescriptorSetLayoutSupport",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxVariableDescriptorCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDescriptorSetVariableDescriptorCountLayoutSupportEXT",
                    "@alias": "VkDescriptorSetVariableDescriptorCountLayoutSupport"
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentDescription2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAttachmentDescriptionFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkSampleCountFlagBits",
                            "name": "samples"
                        },
                        {
                            "type": "VkAttachmentLoadOp",
                            "name": "loadOp",
                            "comment": "Load operation for color or depth data"
                        },
                        {
                            "type": "VkAttachmentStoreOp",
                            "name": "storeOp",
                            "comment": "Store operation for color or depth data"
                        },
                        {
                            "type": "VkAttachmentLoadOp",
                            "name": "stencilLoadOp",
                            "comment": "Load operation for stencil data"
                        },
                        {
                            "type": "VkAttachmentStoreOp",
                            "name": "stencilStoreOp",
                            "comment": "Store operation for stencil data"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "initialLayout"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "finalLayout"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentDescription2KHR",
                    "@alias": "VkAttachmentDescription2"
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentReference2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "attachment"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "layout"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkImageAspectFlags",
                            "name": "aspectMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentReference2KHR",
                    "@alias": "VkAttachmentReference2"
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassDescription2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSubpassDescriptionFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkPipelineBindPoint",
                            "name": "pipelineBindPoint"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewMask"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "inputAttachmentCount"
                        },
                        {
                            "@len": "inputAttachmentCount",
                            "type": "VkAttachmentReference2",
                            "name": "pInputAttachments",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "colorAttachmentCount"
                        },
                        {
                            "@len": "colorAttachmentCount",
                            "type": "VkAttachmentReference2",
                            "name": "pColorAttachments",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@len": "colorAttachmentCount",
                            "type": "VkAttachmentReference2",
                            "name": "pResolveAttachments",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAttachmentReference2",
                            "name": "pDepthStencilAttachment",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "preserveAttachmentCount"
                        },
                        {
                            "@len": "preserveAttachmentCount",
                            "type": "uint32_t",
                            "name": "pPreserveAttachments",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassDescription2KHR",
                    "@alias": "VkSubpassDescription2"
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassDependency2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "srcSubpass"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstSubpass"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags",
                            "name": "srcStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags",
                            "name": "dstStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags",
                            "name": "srcAccessMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags",
                            "name": "dstAccessMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDependencyFlags",
                            "name": "dependencyFlags"
                        },
                        {
                            "type": "int32_t",
                            "name": "viewOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassDependency2KHR",
                    "@alias": "VkSubpassDependency2"
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassCreateInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkRenderPassCreateFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "attachmentCount"
                        },
                        {
                            "@len": "attachmentCount",
                            "type": "VkAttachmentDescription2",
                            "name": "pAttachments",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "subpassCount"
                        },
                        {
                            "@len": "subpassCount",
                            "type": "VkSubpassDescription2",
                            "name": "pSubpasses",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "dependencyCount"
                        },
                        {
                            "@len": "dependencyCount",
                            "type": "VkSubpassDependency2",
                            "name": "pDependencies",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "correlatedViewMaskCount"
                        },
                        {
                            "@len": "correlatedViewMaskCount",
                            "type": "uint32_t",
                            "name": "pCorrelatedViewMasks",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassCreateInfo2KHR",
                    "@alias": "VkRenderPassCreateInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassBeginInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSubpassContents",
                            "name": "contents"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassBeginInfoKHR",
                    "@alias": "VkSubpassBeginInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassEndInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SUBPASS_END_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassEndInfoKHR",
                    "@alias": "VkSubpassEndInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTimelineSemaphoreFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "timelineSemaphore"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTimelineSemaphoreFeaturesKHR",
                    "@alias": "VkPhysicalDeviceTimelineSemaphoreFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTimelineSemaphoreProperties",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint64_t",
                            "name": "maxTimelineSemaphoreValueDifference"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTimelineSemaphorePropertiesKHR",
                    "@alias": "VkPhysicalDeviceTimelineSemaphoreProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreTypeCreateInfo",
                    "@structextends": "VkSemaphoreCreateInfo,VkPhysicalDeviceExternalSemaphoreInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSemaphoreType",
                            "name": "semaphoreType"
                        },
                        {
                            "type": "uint64_t",
                            "name": "initialValue"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreTypeCreateInfoKHR",
                    "@alias": "VkSemaphoreTypeCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkTimelineSemaphoreSubmitInfo",
                    "@structextends": "VkSubmitInfo,VkBindSparseInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "waitSemaphoreValueCount"
                        },
                        {
                            "@optional": "true",
                            "@len": "waitSemaphoreValueCount",
                            "type": "uint64_t",
                            "name": "pWaitSemaphoreValues",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "signalSemaphoreValueCount"
                        },
                        {
                            "@optional": "true",
                            "@len": "signalSemaphoreValueCount",
                            "type": "uint64_t",
                            "name": "pSignalSemaphoreValues",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkTimelineSemaphoreSubmitInfoKHR",
                    "@alias": "VkTimelineSemaphoreSubmitInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreWaitInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSemaphoreWaitFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "semaphoreCount"
                        },
                        {
                            "@len": "semaphoreCount",
                            "type": "VkSemaphore",
                            "name": "pSemaphores",
                            "#text": "const *"
                        },
                        {
                            "@len": "semaphoreCount",
                            "type": "uint64_t",
                            "name": "pValues",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreWaitInfoKHR",
                    "@alias": "VkSemaphoreWaitInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreSignalInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "type": "uint64_t",
                            "name": "value"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreSignalInfoKHR",
                    "@alias": "VkSemaphoreSignalInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkVertexInputBindingDivisorDescriptionEXT",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "binding"
                        },
                        {
                            "type": "uint32_t",
                            "name": "divisor"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineVertexInputDivisorStateCreateInfoEXT",
                    "@structextends": "VkPipelineVertexInputStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "vertexBindingDivisorCount"
                        },
                        {
                            "@len": "vertexBindingDivisorCount",
                            "type": "VkVertexInputBindingDivisorDescriptionEXT",
                            "name": "pVertexBindingDivisors",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxVertexAttribDivisor",
                            "comment": "max value of vertex attribute divisor"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePCIBusInfoPropertiesEXT",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "pciDomain"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "pciBus"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "pciDevice"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "pciFunction"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImportAndroidHardwareBufferInfoANDROID",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "AHardwareBuffer",
                            "name": "buffer",
                            "#text": "struct *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAndroidHardwareBufferUsageANDROID",
                    "@structextends": "VkImageFormatProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint64_t",
                            "name": "androidHardwareBufferUsage"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAndroidHardwareBufferPropertiesANDROID",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "allocationSize"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryTypeBits"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryGetAndroidHardwareBufferInfoANDROID",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAndroidHardwareBufferFormatPropertiesANDROID",
                    "@structextends": "VkAndroidHardwareBufferPropertiesANDROID",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "uint64_t",
                            "name": "externalFormat"
                        },
                        {
                            "type": "VkFormatFeatureFlags",
                            "name": "formatFeatures"
                        },
                        {
                            "type": "VkComponentMapping",
                            "name": "samplerYcbcrConversionComponents"
                        },
                        {
                            "type": "VkSamplerYcbcrModelConversion",
                            "name": "suggestedYcbcrModel"
                        },
                        {
                            "type": "VkSamplerYcbcrRange",
                            "name": "suggestedYcbcrRange"
                        },
                        {
                            "type": "VkChromaLocation",
                            "name": "suggestedXChromaOffset"
                        },
                        {
                            "type": "VkChromaLocation",
                            "name": "suggestedYChromaOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandBufferInheritanceConditionalRenderingInfoEXT",
                    "@structextends": "VkCommandBufferInheritanceInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "conditionalRenderingEnable",
                            "comment": "Whether this secondary command buffer may be executed during an active conditional rendering"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkExternalFormatANDROID",
                    "@structextends": "VkImageCreateInfo,VkSamplerYcbcrConversionCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint64_t",
                            "name": "externalFormat"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevice8BitStorageFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "storageBuffer8BitAccess",
                            "comment": "8-bit integer variables supported in StorageBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "uniformAndStorageBuffer8BitAccess",
                            "comment": "8-bit integer variables supported in StorageBuffer and Uniform"
                        },
                        {
                            "type": "VkBool32",
                            "name": "storagePushConstant8",
                            "comment": "8-bit integer variables supported in PushConstant"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevice8BitStorageFeaturesKHR",
                    "@alias": "VkPhysicalDevice8BitStorageFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceConditionalRenderingFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "conditionalRendering"
                        },
                        {
                            "type": "VkBool32",
                            "name": "inheritedConditionalRendering"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVulkanMemoryModelFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vulkanMemoryModel"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vulkanMemoryModelDeviceScope"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vulkanMemoryModelAvailabilityVisibilityChains"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVulkanMemoryModelFeaturesKHR",
                    "@alias": "VkPhysicalDeviceVulkanMemoryModelFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderAtomicInt64Features",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferInt64Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedInt64Atomics"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderAtomicInt64FeaturesKHR",
                    "@alias": "VkPhysicalDeviceShaderAtomicInt64Features"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferFloat32Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferFloat32AtomicAdd"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferFloat64Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferFloat64AtomicAdd"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedFloat32Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedFloat32AtomicAdd"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedFloat64Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedFloat64AtomicAdd"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderImageFloat32Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderImageFloat32AtomicAdd"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseImageFloat32Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseImageFloat32AtomicAdd"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferFloat16Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferFloat16AtomicAdd"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferFloat16AtomicMinMax"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferFloat32AtomicMinMax"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferFloat64AtomicMinMax"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedFloat16Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedFloat16AtomicAdd"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedFloat16AtomicMinMax"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedFloat32AtomicMinMax"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedFloat64AtomicMinMax"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderImageFloat32AtomicMinMax"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseImageFloat32AtomicMinMax"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vertexAttributeInstanceRateDivisor"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vertexAttributeInstanceRateZeroDivisor"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkQueueFamilyCheckpointPropertiesNV",
                    "@structextends": "VkQueueFamilyProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkPipelineStageFlags",
                            "name": "checkpointExecutionStageMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCheckpointDataNV",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkPipelineStageFlagBits",
                            "name": "stage"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pCheckpointMarker",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDepthStencilResolveProperties",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkResolveModeFlags",
                            "name": "supportedDepthResolveModes",
                            "comment": "supported depth resolve modes"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkResolveModeFlags",
                            "name": "supportedStencilResolveModes",
                            "comment": "supported stencil resolve modes"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "independentResolveNone",
                            "comment": "depth and stencil resolve modes can be set independently if one of them is none"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "independentResolve",
                            "comment": "depth and stencil resolve modes can be set independently"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDepthStencilResolvePropertiesKHR",
                    "@alias": "VkPhysicalDeviceDepthStencilResolveProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassDescriptionDepthStencilResolve",
                    "@structextends": "VkSubpassDescription2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkResolveModeFlagBits",
                            "name": "depthResolveMode",
                            "comment": "depth resolve mode"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkResolveModeFlagBits",
                            "name": "stencilResolveMode",
                            "comment": "stencil resolve mode"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAttachmentReference2",
                            "name": "pDepthStencilResolveAttachment",
                            "comment": "depth/stencil resolve attachment",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassDescriptionDepthStencilResolveKHR",
                    "@alias": "VkSubpassDescriptionDepthStencilResolve"
                },
                {
                    "@category": "struct",
                    "@name": "VkImageViewASTCDecodeModeEXT",
                    "@structextends": "VkImageViewCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFormat",
                            "name": "decodeMode"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceASTCDecodeFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "decodeModeSharedExponent"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTransformFeedbackFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "transformFeedback"
                        },
                        {
                            "type": "VkBool32",
                            "name": "geometryStreams"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTransformFeedbackPropertiesEXT",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTransformFeedbackStreams"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTransformFeedbackBuffers"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkDeviceSize",
                            "name": "maxTransformFeedbackBufferSize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTransformFeedbackStreamDataSize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTransformFeedbackBufferDataSize"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "maxTransformFeedbackBufferDataStride"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "transformFeedbackQueries"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "transformFeedbackStreamsLinesTriangles"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "transformFeedbackRasterizationStreamSelect"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "transformFeedbackDraw"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineRasterizationStateStreamCreateInfoEXT",
                    "@structextends": "VkPipelineRasterizationStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineRasterizationStateStreamCreateFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "rasterizationStream"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "representativeFragmentTest"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineRepresentativeFragmentTestStateCreateInfoNV",
                    "@structextends": "VkGraphicsPipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "representativeFragmentTestEnable"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExclusiveScissorFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "exclusiveScissor"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineViewportExclusiveScissorStateCreateInfoNV",
                    "@structextends": "VkPipelineViewportStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "exclusiveScissorCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "exclusiveScissorCount",
                            "type": "VkRect2D",
                            "name": "pExclusiveScissors",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceCornerSampledImageFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "cornerSampledImage"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "computeDerivativeGroupQuads"
                        },
                        {
                            "type": "VkBool32",
                            "name": "computeDerivativeGroupLinear"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentShaderBarycentric"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderImageFootprintFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "imageFootprint"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "dedicatedAllocationImageAliasing"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkShadingRatePaletteNV",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "shadingRatePaletteEntryCount"
                        },
                        {
                            "@len": "shadingRatePaletteEntryCount",
                            "type": "VkShadingRatePaletteEntryNV",
                            "name": "pShadingRatePaletteEntries",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineViewportShadingRateImageStateCreateInfoNV",
                    "@structextends": "VkPipelineViewportStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shadingRateImageEnable"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "viewportCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "viewportCount",
                            "type": "VkShadingRatePaletteNV",
                            "name": "pShadingRatePalettes",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShadingRateImageFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shadingRateImage"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shadingRateCoarseSampleOrder"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShadingRateImagePropertiesNV",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkExtent2D",
                            "name": "shadingRateTexelSize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "shadingRatePaletteSize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "shadingRateMaxCoarseSamples"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceInvocationMaskFeaturesHUAWEI",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "invocationMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCoarseSampleLocationNV",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "pixelX"
                        },
                        {
                            "type": "uint32_t",
                            "name": "pixelY"
                        },
                        {
                            "type": "uint32_t",
                            "name": "sample"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCoarseSampleOrderCustomNV",
                    "member": [
                        {
                            "type": "VkShadingRatePaletteEntryNV",
                            "name": "shadingRate"
                        },
                        {
                            "type": "uint32_t",
                            "name": "sampleCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "sampleLocationCount"
                        },
                        {
                            "@len": "sampleLocationCount",
                            "type": "VkCoarseSampleLocationNV",
                            "name": "pSampleLocations",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV",
                    "@structextends": "VkPipelineViewportStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkCoarseSampleOrderTypeNV",
                            "name": "sampleOrderType"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "customSampleOrderCount"
                        },
                        {
                            "@len": "customSampleOrderCount",
                            "type": "VkCoarseSampleOrderCustomNV",
                            "name": "pCustomSampleOrders",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMeshShaderFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "taskShader"
                        },
                        {
                            "type": "VkBool32",
                            "name": "meshShader"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMeshShaderPropertiesNV",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDrawMeshTasksCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTaskWorkGroupInvocations"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTaskWorkGroupSize",
                            "#text": "[3]"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTaskTotalMemorySize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxTaskOutputCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMeshWorkGroupInvocations"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMeshWorkGroupSize",
                            "#text": "[3]"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMeshTotalMemorySize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMeshOutputVertices"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMeshOutputPrimitives"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMeshMultiviewViewCount"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "meshOutputPerVertexGranularity"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "meshOutputPerPrimitiveGranularity"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDrawMeshTasksIndirectCommandNV",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "taskCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstTask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRayTracingShaderGroupCreateInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkRayTracingShaderGroupTypeKHR",
                            "name": "type"
                        },
                        {
                            "type": "uint32_t",
                            "name": "generalShader"
                        },
                        {
                            "type": "uint32_t",
                            "name": "closestHitShader"
                        },
                        {
                            "type": "uint32_t",
                            "name": "anyHitShader"
                        },
                        {
                            "type": "uint32_t",
                            "name": "intersectionShader"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRayTracingShaderGroupCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkRayTracingShaderGroupTypeKHR",
                            "name": "type"
                        },
                        {
                            "type": "uint32_t",
                            "name": "generalShader"
                        },
                        {
                            "type": "uint32_t",
                            "name": "closestHitShader"
                        },
                        {
                            "type": "uint32_t",
                            "name": "anyHitShader"
                        },
                        {
                            "type": "uint32_t",
                            "name": "intersectionShader"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pShaderGroupCaptureReplayHandle",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRayTracingPipelineCreateInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCreateFlags",
                            "name": "flags",
                            "comment": "Pipeline creation flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stageCount"
                        },
                        {
                            "@len": "stageCount",
                            "type": "VkPipelineShaderStageCreateInfo",
                            "name": "pStages",
                            "comment": "One entry for each active shader stage",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupCount"
                        },
                        {
                            "@len": "groupCount",
                            "type": "VkRayTracingShaderGroupCreateInfoNV",
                            "name": "pGroups",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxRecursionDepth"
                        },
                        {
                            "type": "VkPipelineLayout",
                            "name": "layout",
                            "comment": "Interface layout of the pipeline"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipeline",
                            "name": "basePipelineHandle",
                            "comment": "If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of"
                        },
                        {
                            "type": "int32_t",
                            "name": "basePipelineIndex",
                            "comment": "If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRayTracingPipelineCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCreateFlags",
                            "name": "flags",
                            "comment": "Pipeline creation flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "stageCount"
                        },
                        {
                            "@len": "stageCount",
                            "type": "VkPipelineShaderStageCreateInfo",
                            "name": "pStages",
                            "comment": "One entry for each active shader stage",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "groupCount"
                        },
                        {
                            "@len": "groupCount",
                            "type": "VkRayTracingShaderGroupCreateInfoKHR",
                            "name": "pGroups",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxPipelineRayRecursionDepth"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineLibraryCreateInfoKHR",
                            "name": "pLibraryInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkRayTracingPipelineInterfaceCreateInfoKHR",
                            "name": "pLibraryInterface",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineDynamicStateCreateInfo",
                            "name": "pDynamicState",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPipelineLayout",
                            "name": "layout",
                            "comment": "Interface layout of the pipeline"
                        },
                        {
                            "@noautovalidity": "true",
                            "@optional": "true",
                            "type": "VkPipeline",
                            "name": "basePipelineHandle",
                            "comment": "If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of"
                        },
                        {
                            "type": "int32_t",
                            "name": "basePipelineIndex",
                            "comment": "If VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkGeometryTrianglesNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "vertexData"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "vertexOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "vertexCount"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "vertexStride"
                        },
                        {
                            "type": "VkFormat",
                            "name": "vertexFormat"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "indexData"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "indexOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "indexCount"
                        },
                        {
                            "type": "VkIndexType",
                            "name": "indexType"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "transformData",
                            "comment": "Optional reference to array of floats representing a 3x4 row major affine transformation matrix."
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "transformOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkGeometryAABBNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "aabbData"
                        },
                        {
                            "type": "uint32_t",
                            "name": "numAABBs"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride",
                            "comment": "Stride in bytes between AABBs"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset",
                            "comment": "Offset in bytes of the first AABB in aabbData"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkGeometryDataNV",
                    "member": [
                        {
                            "type": "VkGeometryTrianglesNV",
                            "name": "triangles"
                        },
                        {
                            "type": "VkGeometryAABBNV",
                            "name": "aabbs"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkGeometryNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_GEOMETRY_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkGeometryTypeKHR",
                            "name": "geometryType"
                        },
                        {
                            "type": "VkGeometryDataNV",
                            "name": "geometry"
                        },
                        {
                            "@optional": "true",
                            "type": "VkGeometryFlagsKHR",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureTypeNV",
                            "name": "type"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuildAccelerationStructureFlagsNV",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "instanceCount"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "geometryCount"
                        },
                        {
                            "@len": "geometryCount",
                            "type": "VkGeometryNV",
                            "name": "pGeometries",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureCreateInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "compactedSize"
                        },
                        {
                            "type": "VkAccelerationStructureInfoNV",
                            "name": "info"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBindAccelerationStructureMemoryInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureNV",
                            "name": "accelerationStructure"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "memoryOffset"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "deviceIndexCount"
                        },
                        {
                            "@len": "deviceIndexCount",
                            "type": "uint32_t",
                            "name": "pDeviceIndices",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkWriteDescriptorSetAccelerationStructureKHR",
                    "@structextends": "VkWriteDescriptorSet",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "accelerationStructureCount"
                        },
                        {
                            "@optional": "false,true",
                            "@len": "accelerationStructureCount",
                            "type": "VkAccelerationStructureKHR",
                            "name": "pAccelerationStructures",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkWriteDescriptorSetAccelerationStructureNV",
                    "@structextends": "VkWriteDescriptorSet",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "accelerationStructureCount"
                        },
                        {
                            "@optional": "false,true",
                            "@len": "accelerationStructureCount",
                            "type": "VkAccelerationStructureNV",
                            "name": "pAccelerationStructures",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureMemoryRequirementsInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureMemoryRequirementsTypeNV",
                            "name": "type"
                        },
                        {
                            "type": "VkAccelerationStructureNV",
                            "name": "accelerationStructure"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceAccelerationStructureFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "accelerationStructure"
                        },
                        {
                            "type": "VkBool32",
                            "name": "accelerationStructureCaptureReplay"
                        },
                        {
                            "type": "VkBool32",
                            "name": "accelerationStructureIndirectBuild"
                        },
                        {
                            "type": "VkBool32",
                            "name": "accelerationStructureHostCommands"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingAccelerationStructureUpdateAfterBind"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceRayTracingPipelineFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rayTracingPipeline"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rayTracingPipelineShaderGroupHandleCaptureReplay"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rayTracingPipelineShaderGroupHandleCaptureReplayMixed"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rayTracingPipelineTraceRaysIndirect"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rayTraversalPrimitiveCulling"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceRayQueryFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rayQuery"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceAccelerationStructurePropertiesKHR",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint64_t",
                            "name": "maxGeometryCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint64_t",
                            "name": "maxInstanceCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint64_t",
                            "name": "maxPrimitiveCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorAccelerationStructures"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindAccelerationStructures"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetAccelerationStructures"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindAccelerationStructures"
                        },
                        {
                            "@limittype": "min",
                            "type": "uint32_t",
                            "name": "minAccelerationStructureScratchOffsetAlignment"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceRayTracingPipelinePropertiesKHR",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "shaderGroupHandleSize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxRayRecursionDepth"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxShaderGroupStride"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "shaderGroupBaseAlignment"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "shaderGroupHandleCaptureReplaySize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxRayDispatchInvocationCount"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "shaderGroupHandleAlignment"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxRayHitAttributeSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceRayTracingPropertiesNV",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "shaderGroupHandleSize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxRecursionDepth"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxShaderGroupStride"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "shaderGroupBaseAlignment"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint64_t",
                            "name": "maxGeometryCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint64_t",
                            "name": "maxInstanceCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint64_t",
                            "name": "maxTriangleCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetAccelerationStructures"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkStridedDeviceAddressRegionKHR",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "VkDeviceAddress",
                            "name": "deviceAddress"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "stride"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkTraceRaysIndirectCommandKHR",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "width"
                        },
                        {
                            "type": "uint32_t",
                            "name": "height"
                        },
                        {
                            "type": "uint32_t",
                            "name": "depth"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDrmFormatModifierPropertiesListEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkFormatProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "drmFormatModifierCount"
                        },
                        {
                            "@optional": "true,false",
                            "@len": "drmFormatModifierCount",
                            "type": "VkDrmFormatModifierPropertiesEXT",
                            "name": "pDrmFormatModifierProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDrmFormatModifierPropertiesEXT",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "uint64_t",
                            "name": "drmFormatModifier"
                        },
                        {
                            "type": "uint32_t",
                            "name": "drmFormatModifierPlaneCount"
                        },
                        {
                            "type": "VkFormatFeatureFlags",
                            "name": "drmFormatModifierTilingFeatures"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceImageDrmFormatModifierInfoEXT",
                    "@structextends": "VkPhysicalDeviceImageFormatInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint64_t",
                            "name": "drmFormatModifier"
                        },
                        {
                            "type": "VkSharingMode",
                            "name": "sharingMode"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "queueFamilyIndexCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "queueFamilyIndexCount",
                            "type": "uint32_t",
                            "name": "pQueueFamilyIndices",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageDrmFormatModifierListCreateInfoEXT",
                    "@structextends": "VkImageCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "drmFormatModifierCount"
                        },
                        {
                            "@len": "drmFormatModifierCount",
                            "type": "uint64_t",
                            "name": "pDrmFormatModifiers",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageDrmFormatModifierExplicitCreateInfoEXT",
                    "@structextends": "VkImageCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint64_t",
                            "name": "drmFormatModifier"
                        },
                        {
                            "@optional": "false",
                            "type": "uint32_t",
                            "name": "drmFormatModifierPlaneCount"
                        },
                        {
                            "@len": "drmFormatModifierPlaneCount",
                            "type": "VkSubresourceLayout",
                            "name": "pPlaneLayouts",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageDrmFormatModifierPropertiesEXT",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint64_t",
                            "name": "drmFormatModifier"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageStencilUsageCreateInfo",
                    "@structextends": "VkImageCreateInfo,VkPhysicalDeviceImageFormatInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "stencilUsage"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageStencilUsageCreateInfoEXT",
                    "@alias": "VkImageStencilUsageCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceMemoryOverallocationCreateInfoAMD",
                    "@structextends": "VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkMemoryOverallocationBehaviorAMD",
                            "name": "overallocationBehavior"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentDensityMapFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentDensityMap"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentDensityMapDynamic"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentDensityMapNonSubsampledImages"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentDensityMap2FeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentDensityMapDeferred"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentDensityMapOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentDensityMapPropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "min",
                            "type": "VkExtent2D",
                            "name": "minFragmentDensityTexelSize"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkExtent2D",
                            "name": "maxFragmentDensityTexelSize"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "fragmentDensityInvocations"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentDensityMap2PropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "subsampledLoads"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "subsampledCoarseReconstructionEarlyAccess"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxSubsampledArrayLayers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetSubsampledSamplers"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkExtent2D",
                            "name": "fragmentDensityOffsetGranularity"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassFragmentDensityMapCreateInfoEXT",
                    "@structextends": "VkRenderPassCreateInfo,VkRenderPassCreateInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAttachmentReference",
                            "name": "fragmentDensityMapAttachment"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassFragmentDensityMapOffsetEndInfoQCOM",
                    "@structextends": "VkSubpassEndInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "fragmentDensityOffsetCount"
                        },
                        {
                            "@len": "fragmentDensityOffsetCount",
                            "type": "VkOffset2D",
                            "name": "pFragmentDensityOffsets",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceScalarBlockLayoutFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "scalarBlockLayout"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceScalarBlockLayoutFeaturesEXT",
                    "@alias": "VkPhysicalDeviceScalarBlockLayoutFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkSurfaceProtectedCapabilitiesKHR",
                    "@structextends": "VkSurfaceCapabilities2KHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "supportsProtected",
                            "comment": "Represents if surface can be protected"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceUniformBufferStandardLayoutFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "uniformBufferStandardLayout"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR",
                    "@alias": "VkPhysicalDeviceUniformBufferStandardLayoutFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDepthClipEnableFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthClipEnable"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineRasterizationDepthClipStateCreateInfoEXT",
                    "@structextends": "VkPipelineRasterizationStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineRasterizationDepthClipStateCreateFlagsEXT",
                            "name": "flags",
                            "comment": "Reserved"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthClipEnable"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMemoryBudgetPropertiesEXT",
                    "@structextends": "VkPhysicalDeviceMemoryProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "heapBudget",
                            "enum": [
                                "VK_MAX_MEMORY_HEAPS"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "heapUsage",
                            "enum": [
                                "VK_MAX_MEMORY_HEAPS"
                            ],
                            "#text": "[]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMemoryPriorityFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "memoryPriority"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryPriorityAllocateInfoEXT",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "float",
                            "name": "priority"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "pageableDeviceLocalMemory"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceBufferDeviceAddressFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "bufferDeviceAddress"
                        },
                        {
                            "type": "VkBool32",
                            "name": "bufferDeviceAddressCaptureReplay"
                        },
                        {
                            "type": "VkBool32",
                            "name": "bufferDeviceAddressMultiDevice"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceBufferDeviceAddressFeaturesKHR",
                    "@alias": "VkPhysicalDeviceBufferDeviceAddressFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "bufferDeviceAddress"
                        },
                        {
                            "type": "VkBool32",
                            "name": "bufferDeviceAddressCaptureReplay"
                        },
                        {
                            "type": "VkBool32",
                            "name": "bufferDeviceAddressMultiDevice"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceBufferAddressFeaturesEXT",
                    "@alias": "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT"
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferDeviceAddressInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferDeviceAddressInfoKHR",
                    "@alias": "VkBufferDeviceAddressInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferDeviceAddressInfoEXT",
                    "@alias": "VkBufferDeviceAddressInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferOpaqueCaptureAddressCreateInfo",
                    "@structextends": "VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint64_t",
                            "name": "opaqueCaptureAddress"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferOpaqueCaptureAddressCreateInfoKHR",
                    "@alias": "VkBufferOpaqueCaptureAddressCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferDeviceAddressCreateInfoEXT",
                    "@structextends": "VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceAddress",
                            "name": "deviceAddress"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceImageViewImageFormatInfoEXT",
                    "@structextends": "VkPhysicalDeviceImageFormatInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkImageViewType",
                            "name": "imageViewType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFilterCubicImageViewImageFormatPropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkImageFormatProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "filterCubic",
                            "comment": "The combinations of format, image type (and image view type if provided) can be filtered with VK_FILTER_CUBIC_EXT"
                        },
                        {
                            "type": "VkBool32",
                            "name": "filterCubicMinmax",
                            "comment": "The combination of format, image type (and image view type if provided) can be filtered with VK_FILTER_CUBIC_EXT and ReductionMode of Min or Max"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceImagelessFramebufferFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "imagelessFramebuffer"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceImagelessFramebufferFeaturesKHR",
                    "@alias": "VkPhysicalDeviceImagelessFramebufferFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkFramebufferAttachmentsCreateInfo",
                    "@structextends": "VkFramebufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "attachmentImageInfoCount"
                        },
                        {
                            "@len": "attachmentImageInfoCount",
                            "type": "VkFramebufferAttachmentImageInfo",
                            "name": "pAttachmentImageInfos",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFramebufferAttachmentsCreateInfoKHR",
                    "@alias": "VkFramebufferAttachmentsCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkFramebufferAttachmentImageInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageCreateFlags",
                            "name": "flags",
                            "comment": "Image creation flags"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "usage",
                            "comment": "Image usage flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "width"
                        },
                        {
                            "type": "uint32_t",
                            "name": "height"
                        },
                        {
                            "type": "uint32_t",
                            "name": "layerCount"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "viewFormatCount"
                        },
                        {
                            "@len": "viewFormatCount",
                            "type": "VkFormat",
                            "name": "pViewFormats",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFramebufferAttachmentImageInfoKHR",
                    "@alias": "VkFramebufferAttachmentImageInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassAttachmentBeginInfo",
                    "@structextends": "VkRenderPassBeginInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "attachmentCount"
                        },
                        {
                            "@len": "attachmentCount",
                            "type": "VkImageView",
                            "name": "pAttachments",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassAttachmentBeginInfoKHR",
                    "@alias": "VkRenderPassAttachmentBeginInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTextureCompressionASTCHDRFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "textureCompressionASTC_HDR"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT",
                    "@alias": "VkPhysicalDeviceTextureCompressionASTCHDRFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceCooperativeMatrixFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "cooperativeMatrix"
                        },
                        {
                            "type": "VkBool32",
                            "name": "cooperativeMatrixRobustBufferAccess"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceCooperativeMatrixPropertiesNV",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkShaderStageFlags",
                            "name": "cooperativeMatrixSupportedStages"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCooperativeMatrixPropertiesNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "MSize"
                        },
                        {
                            "type": "uint32_t",
                            "name": "NSize"
                        },
                        {
                            "type": "uint32_t",
                            "name": "KSize"
                        },
                        {
                            "type": "VkComponentTypeNV",
                            "name": "AType"
                        },
                        {
                            "type": "VkComponentTypeNV",
                            "name": "BType"
                        },
                        {
                            "type": "VkComponentTypeNV",
                            "name": "CType"
                        },
                        {
                            "type": "VkComponentTypeNV",
                            "name": "DType"
                        },
                        {
                            "type": "VkScopeNV",
                            "name": "scope"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "ycbcrImageArrays"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageViewHandleInfoNVX",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageView",
                            "name": "imageView"
                        },
                        {
                            "type": "VkDescriptorType",
                            "name": "descriptorType"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSampler",
                            "name": "sampler"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageViewAddressPropertiesNVX",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkDeviceAddress",
                            "name": "deviceAddress"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPresentFrameTokenGGP",
                    "@structextends": "VkPresentInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "GgpFrameToken",
                            "name": "frameToken"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineCreationFeedback",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "VkPipelineCreationFeedbackFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint64_t",
                            "name": "duration"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineCreationFeedbackEXT",
                    "@alias": "VkPipelineCreationFeedback"
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineCreationFeedbackCreateInfo",
                    "@structextends": "VkGraphicsPipelineCreateInfo,VkComputePipelineCreateInfo,VkRayTracingPipelineCreateInfoNV,VkRayTracingPipelineCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPipelineCreationFeedback",
                            "name": "pPipelineCreationFeedback",
                            "comment": "Output pipeline creation feedback.",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "pipelineStageCreationFeedbackCount"
                        },
                        {
                            "@len": "pipelineStageCreationFeedbackCount",
                            "type": "VkPipelineCreationFeedback",
                            "name": "pPipelineStageCreationFeedbacks",
                            "comment": "One entry for each shader stage specified in the parent Vk*PipelineCreateInfo struct",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineCreationFeedbackCreateInfoEXT",
                    "@alias": "VkPipelineCreationFeedbackCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkSurfaceFullScreenExclusiveInfoEXT",
                    "@structextends": "VkPhysicalDeviceSurfaceInfo2KHR,VkSwapchainCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkFullScreenExclusiveEXT",
                            "name": "fullScreenExclusive"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSurfaceFullScreenExclusiveWin32InfoEXT",
                    "@structextends": "VkPhysicalDeviceSurfaceInfo2KHR,VkSwapchainCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "HMONITOR",
                            "name": "hmonitor"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSurfaceCapabilitiesFullScreenExclusiveEXT",
                    "@structextends": "VkSurfaceCapabilities2KHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fullScreenExclusiveSupported"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePerformanceQueryFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "performanceCounterQueryPools",
                            "comment": "performance counters supported in query pools"
                        },
                        {
                            "type": "VkBool32",
                            "name": "performanceCounterMultipleQueryPools",
                            "comment": "performance counters from multiple query pools can be accessed in the same primary command buffer"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePerformanceQueryPropertiesKHR",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "@noautovalidity": "true",
                            "type": "VkBool32",
                            "name": "allowCommandBufferQueryCopies",
                            "comment": "Flag to specify whether performance queries are allowed to be used in vkCmdCopyQueryPoolResults"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPerformanceCounterKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkPerformanceCounterUnitKHR",
                            "name": "unit"
                        },
                        {
                            "type": "VkPerformanceCounterScopeKHR",
                            "name": "scope"
                        },
                        {
                            "type": "VkPerformanceCounterStorageKHR",
                            "name": "storage"
                        },
                        {
                            "type": "uint8_t",
                            "name": "uuid",
                            "enum": [
                                "VK_UUID_SIZE"
                            ],
                            "#text": "[]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPerformanceCounterDescriptionKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPerformanceCounterDescriptionFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "type": "char",
                            "name": "name",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "char",
                            "name": "category",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "char",
                            "name": "description",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "#text": "[]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkQueryPoolPerformanceCreateInfoKHR",
                    "@structextends": "VkQueryPoolCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "counterIndexCount"
                        },
                        {
                            "@len": "counterIndexCount",
                            "type": "uint32_t",
                            "name": "pCounterIndices",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "union",
                    "@name": "VkPerformanceCounterResultKHR",
                    "@comment": "// Union of all the possible return types a counter result could return",
                    "member": [
                        {
                            "type": "int32_t",
                            "name": "int32"
                        },
                        {
                            "type": "int64_t",
                            "name": "int64"
                        },
                        {
                            "type": "uint32_t",
                            "name": "uint32"
                        },
                        {
                            "type": "uint64_t",
                            "name": "uint64"
                        },
                        {
                            "type": "float",
                            "name": "float32"
                        },
                        {
                            "type": "double",
                            "name": "float64"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAcquireProfilingLockInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAcquireProfilingLockFlagsKHR",
                            "name": "flags",
                            "comment": "Acquire profiling lock flags"
                        },
                        {
                            "type": "uint64_t",
                            "name": "timeout"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPerformanceQuerySubmitInfoKHR",
                    "@structextends": "VkSubmitInfo,VkSubmitInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "counterPassIndex",
                            "comment": "Index for which counter pass to submit"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkHeadlessSurfaceCreateInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkHeadlessSurfaceCreateFlagsEXT",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceCoverageReductionModeFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "coverageReductionMode"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineCoverageReductionStateCreateInfoNV",
                    "@structextends": "VkPipelineMultisampleStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCoverageReductionStateCreateFlagsNV",
                            "name": "flags"
                        },
                        {
                            "type": "VkCoverageReductionModeNV",
                            "name": "coverageReductionMode"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFramebufferMixedSamplesCombinationNV",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkCoverageReductionModeNV",
                            "name": "coverageReductionMode"
                        },
                        {
                            "type": "VkSampleCountFlagBits",
                            "name": "rasterizationSamples"
                        },
                        {
                            "type": "VkSampleCountFlags",
                            "name": "depthStencilSamples"
                        },
                        {
                            "type": "VkSampleCountFlags",
                            "name": "colorSamples"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderIntegerFunctions2"
                        }
                    ]
                },
                {
                    "@category": "union",
                    "@name": "VkPerformanceValueDataINTEL",
                    "member": [
                        {
                            "@selection": "VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL",
                            "type": "uint32_t",
                            "name": "value32"
                        },
                        {
                            "@selection": "VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL",
                            "type": "uint64_t",
                            "name": "value64"
                        },
                        {
                            "@selection": "VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL",
                            "type": "float",
                            "name": "valueFloat"
                        },
                        {
                            "@selection": "VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL",
                            "type": "VkBool32",
                            "name": "valueBool"
                        },
                        {
                            "@selection": "VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL",
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "valueString",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPerformanceValueINTEL",
                    "member": [
                        {
                            "type": "VkPerformanceValueTypeINTEL",
                            "name": "type"
                        },
                        {
                            "@selector": "type",
                            "@noautovalidity": "true",
                            "type": "VkPerformanceValueDataINTEL",
                            "name": "data"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkInitializePerformanceApiInfoINTEL",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pUserData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkQueryPoolPerformanceQueryCreateInfoINTEL",
                    "@structextends": "VkQueryPoolCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkQueryPoolSamplingModeINTEL",
                            "name": "performanceCountersSampling"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkQueryPoolCreateInfoINTEL",
                    "@alias": "VkQueryPoolPerformanceQueryCreateInfoINTEL"
                },
                {
                    "@category": "struct",
                    "@name": "VkPerformanceMarkerInfoINTEL",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint64_t",
                            "name": "marker"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPerformanceStreamMarkerInfoINTEL",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "marker"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPerformanceOverrideInfoINTEL",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPerformanceOverrideTypeINTEL",
                            "name": "type"
                        },
                        {
                            "type": "VkBool32",
                            "name": "enable"
                        },
                        {
                            "type": "uint64_t",
                            "name": "parameter"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPerformanceConfigurationAcquireInfoINTEL",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPerformanceConfigurationTypeINTEL",
                            "name": "type"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderClockFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSubgroupClock"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderDeviceClock"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceIndexTypeUint8FeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "indexTypeUint8"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "shaderSMCount"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "shaderWarpsPerSM"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSMBuiltins"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "comment": "Pointer to next structure",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentShaderSampleInterlock"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentShaderPixelInterlock"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentShaderShadingRateInterlock"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "separateDepthStencilLayouts"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR",
                    "@alias": "VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentReferenceStencilLayout",
                    "@structextends": "VkAttachmentReference2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "stencilLayout"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "primitiveTopologyListRestart"
                        },
                        {
                            "type": "VkBool32",
                            "name": "primitiveTopologyPatchListRestart"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentReferenceStencilLayoutKHR",
                    "@alias": "VkAttachmentReferenceStencilLayout"
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentDescriptionStencilLayout",
                    "@structextends": "VkAttachmentDescription2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "stencilInitialLayout"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "stencilFinalLayout"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentDescriptionStencilLayoutKHR",
                    "@alias": "VkAttachmentDescriptionStencilLayout"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "pipelineExecutableInfo"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineExecutablePropertiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkShaderStageFlags",
                            "name": "stages"
                        },
                        {
                            "type": "char",
                            "name": "name",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "char",
                            "name": "description",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "uint32_t",
                            "name": "subgroupSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineExecutableInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        },
                        {
                            "type": "uint32_t",
                            "name": "executableIndex"
                        }
                    ]
                },
                {
                    "@category": "union",
                    "@name": "VkPipelineExecutableStatisticValueKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@selection": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR",
                            "type": "VkBool32",
                            "name": "b32"
                        },
                        {
                            "@selection": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR",
                            "type": "int64_t",
                            "name": "i64"
                        },
                        {
                            "@selection": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR",
                            "type": "uint64_t",
                            "name": "u64"
                        },
                        {
                            "@selection": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR",
                            "type": "double",
                            "name": "f64"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineExecutableStatisticKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "char",
                            "name": "name",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "char",
                            "name": "description",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "VkPipelineExecutableStatisticFormatKHR",
                            "name": "format"
                        },
                        {
                            "@selector": "format",
                            "@noautovalidity": "true",
                            "type": "VkPipelineExecutableStatisticValueKHR",
                            "name": "value"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineExecutableInternalRepresentationKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "char",
                            "name": "name",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "char",
                            "name": "description",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "VkBool32",
                            "name": "isText"
                        },
                        {
                            "type": "size_t",
                            "name": "dataSize"
                        },
                        {
                            "@optional": "true",
                            "@len": "dataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderDemoteToHelperInvocation"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT",
                    "@alias": "VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "texelBufferAlignment"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTexelBufferAlignmentProperties",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "storageTexelBufferOffsetAlignmentBytes"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "storageTexelBufferOffsetSingleTexelAlignment"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "uniformTexelBufferOffsetAlignmentBytes"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "uniformTexelBufferOffsetSingleTexelAlignment"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT",
                    "@alias": "VkPhysicalDeviceTexelBufferAlignmentProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSubgroupSizeControlFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "subgroupSizeControl"
                        },
                        {
                            "type": "VkBool32",
                            "name": "computeFullSubgroups"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSubgroupSizeControlFeaturesEXT",
                    "@alias": "VkPhysicalDeviceSubgroupSizeControlFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSubgroupSizeControlProperties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "min",
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "minSubgroupSize",
                            "comment": "The minimum subgroup size supported by this device"
                        },
                        {
                            "@limittype": "max",
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "maxSubgroupSize",
                            "comment": "The maximum subgroup size supported by this device"
                        },
                        {
                            "@limittype": "max",
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "maxComputeWorkgroupSubgroups",
                            "comment": "The maximum number of subgroups supported in a workgroup"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkShaderStageFlags",
                            "name": "requiredSubgroupSizeStages",
                            "comment": "The shader stages that support specifying a subgroup size"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSubgroupSizeControlPropertiesEXT",
                    "@alias": "VkPhysicalDeviceSubgroupSizeControlProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineShaderStageRequiredSubgroupSizeCreateInfo",
                    "@returnedonly": "true",
                    "@structextends": "VkPipelineShaderStageCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "requiredSubgroupSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT",
                    "@alias": "VkPipelineShaderStageRequiredSubgroupSizeCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkSubpassShadingPipelineCreateInfoHUAWEI",
                    "@returnedonly": "true",
                    "@structextends": "VkComputePipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkRenderPass",
                            "name": "renderPass"
                        },
                        {
                            "type": "uint32_t",
                            "name": "subpass"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSubpassShadingPropertiesHUAWEI",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "maxSubpassShadingWorkgroupSizeAspectRatio"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryOpaqueCaptureAddressAllocateInfo",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint64_t",
                            "name": "opaqueCaptureAddress"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryOpaqueCaptureAddressAllocateInfoKHR",
                    "@alias": "VkMemoryOpaqueCaptureAddressAllocateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceMemoryOpaqueCaptureAddressInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceMemoryOpaqueCaptureAddressInfoKHR",
                    "@alias": "VkDeviceMemoryOpaqueCaptureAddressInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceLineRasterizationFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rectangularLines"
                        },
                        {
                            "type": "VkBool32",
                            "name": "bresenhamLines"
                        },
                        {
                            "type": "VkBool32",
                            "name": "smoothLines"
                        },
                        {
                            "type": "VkBool32",
                            "name": "stippledRectangularLines"
                        },
                        {
                            "type": "VkBool32",
                            "name": "stippledBresenhamLines"
                        },
                        {
                            "type": "VkBool32",
                            "name": "stippledSmoothLines"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceLineRasterizationPropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "lineSubPixelPrecisionBits"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineRasterizationLineStateCreateInfoEXT",
                    "@structextends": "VkPipelineRasterizationStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkLineRasterizationModeEXT",
                            "name": "lineRasterizationMode"
                        },
                        {
                            "type": "VkBool32",
                            "name": "stippledLineEnable"
                        },
                        {
                            "type": "uint32_t",
                            "name": "lineStippleFactor"
                        },
                        {
                            "type": "uint16_t",
                            "name": "lineStipplePattern"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePipelineCreationCacheControlFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "pipelineCreationCacheControl"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT",
                    "@alias": "VkPhysicalDevicePipelineCreationCacheControlFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVulkan11Features",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "storageBuffer16BitAccess",
                            "comment": "16-bit integer/floating-point variables supported in BufferBlock"
                        },
                        {
                            "type": "VkBool32",
                            "name": "uniformAndStorageBuffer16BitAccess",
                            "comment": "16-bit integer/floating-point variables supported in BufferBlock and Block"
                        },
                        {
                            "type": "VkBool32",
                            "name": "storagePushConstant16",
                            "comment": "16-bit integer/floating-point variables supported in PushConstant"
                        },
                        {
                            "type": "VkBool32",
                            "name": "storageInputOutput16",
                            "comment": "16-bit integer/floating-point variables supported in shader inputs and outputs"
                        },
                        {
                            "type": "VkBool32",
                            "name": "multiview",
                            "comment": "Multiple views in a renderpass"
                        },
                        {
                            "type": "VkBool32",
                            "name": "multiviewGeometryShader",
                            "comment": "Multiple views in a renderpass w/ geometry shader"
                        },
                        {
                            "type": "VkBool32",
                            "name": "multiviewTessellationShader",
                            "comment": "Multiple views in a renderpass w/ tessellation shader"
                        },
                        {
                            "type": "VkBool32",
                            "name": "variablePointersStorageBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "variablePointers"
                        },
                        {
                            "type": "VkBool32",
                            "name": "protectedMemory"
                        },
                        {
                            "type": "VkBool32",
                            "name": "samplerYcbcrConversion",
                            "comment": "Sampler color conversion supported"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderDrawParameters"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVulkan11Properties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint8_t",
                            "name": "deviceUUID",
                            "enum": [
                                "VK_UUID_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint8_t",
                            "name": "driverUUID",
                            "enum": [
                                "VK_UUID_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint8_t",
                            "name": "deviceLUID",
                            "enum": [
                                "VK_LUID_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "deviceNodeMask"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "deviceLUIDValid"
                        },
                        {
                            "@limittype": "noauto",
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "subgroupSize",
                            "comment": "The size of a subgroup for this queue."
                        },
                        {
                            "@limittype": "bitmask",
                            "@noautovalidity": "true",
                            "type": "VkShaderStageFlags",
                            "name": "subgroupSupportedStages",
                            "comment": "Bitfield of what shader stages support subgroup operations"
                        },
                        {
                            "@limittype": "bitmask",
                            "@noautovalidity": "true",
                            "type": "VkSubgroupFeatureFlags",
                            "name": "subgroupSupportedOperations",
                            "comment": "Bitfield of what subgroup operations are supported."
                        },
                        {
                            "@limittype": "bitmask",
                            "@noautovalidity": "true",
                            "type": "VkBool32",
                            "name": "subgroupQuadOperationsInAllStages",
                            "comment": "Flag to specify whether quad operations are available in all stages."
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkPointClippingBehavior",
                            "name": "pointClippingBehavior"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMultiviewViewCount",
                            "comment": "max number of views in a subpass"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxMultiviewInstanceIndex",
                            "comment": "max instance index for a draw in a multiview subpass"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "protectedNoFault"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerSetDescriptors"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkDeviceSize",
                            "name": "maxMemoryAllocationSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVulkan12Features",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "samplerMirrorClampToEdge"
                        },
                        {
                            "type": "VkBool32",
                            "name": "drawIndirectCount"
                        },
                        {
                            "type": "VkBool32",
                            "name": "storageBuffer8BitAccess",
                            "comment": "8-bit integer variables supported in StorageBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "uniformAndStorageBuffer8BitAccess",
                            "comment": "8-bit integer variables supported in StorageBuffer and Uniform"
                        },
                        {
                            "type": "VkBool32",
                            "name": "storagePushConstant8",
                            "comment": "8-bit integer variables supported in PushConstant"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderBufferInt64Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSharedInt64Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderFloat16",
                            "comment": "16-bit floats (halfs) in shaders"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderInt8",
                            "comment": "8-bit integers in shaders"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderInputAttachmentArrayDynamicIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderUniformTexelBufferArrayDynamicIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageTexelBufferArrayDynamicIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderUniformBufferArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSampledImageArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageBufferArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageImageArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderInputAttachmentArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderUniformTexelBufferArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderStorageTexelBufferArrayNonUniformIndexing"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingUniformBufferUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingSampledImageUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingStorageImageUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingStorageBufferUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingUniformTexelBufferUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingStorageTexelBufferUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingUpdateUnusedWhilePending"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingPartiallyBound"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingVariableDescriptorCount"
                        },
                        {
                            "type": "VkBool32",
                            "name": "runtimeDescriptorArray"
                        },
                        {
                            "type": "VkBool32",
                            "name": "samplerFilterMinmax"
                        },
                        {
                            "type": "VkBool32",
                            "name": "scalarBlockLayout"
                        },
                        {
                            "type": "VkBool32",
                            "name": "imagelessFramebuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "uniformBufferStandardLayout"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSubgroupExtendedTypes"
                        },
                        {
                            "type": "VkBool32",
                            "name": "separateDepthStencilLayouts"
                        },
                        {
                            "type": "VkBool32",
                            "name": "hostQueryReset"
                        },
                        {
                            "type": "VkBool32",
                            "name": "timelineSemaphore"
                        },
                        {
                            "type": "VkBool32",
                            "name": "bufferDeviceAddress"
                        },
                        {
                            "type": "VkBool32",
                            "name": "bufferDeviceAddressCaptureReplay"
                        },
                        {
                            "type": "VkBool32",
                            "name": "bufferDeviceAddressMultiDevice"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vulkanMemoryModel"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vulkanMemoryModelDeviceScope"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vulkanMemoryModelAvailabilityVisibilityChains"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderOutputViewportIndex"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderOutputLayer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "subgroupBroadcastDynamicId"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVulkan12Properties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDriverId",
                            "name": "driverID"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "char",
                            "name": "driverName",
                            "enum": [
                                "VK_MAX_DRIVER_NAME_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "char",
                            "name": "driverInfo",
                            "enum": [
                                "VK_MAX_DRIVER_INFO_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkConformanceVersion",
                            "name": "conformanceVersion"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkShaderFloatControlsIndependence",
                            "name": "denormBehaviorIndependence"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkShaderFloatControlsIndependence",
                            "name": "roundingModeIndependence"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderSignedZeroInfNanPreserveFloat16",
                            "comment": "An implementation can preserve signed zero, nan, inf"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderSignedZeroInfNanPreserveFloat32",
                            "comment": "An implementation can preserve signed zero, nan, inf"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderSignedZeroInfNanPreserveFloat64",
                            "comment": "An implementation can preserve signed zero, nan, inf"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormPreserveFloat16",
                            "comment": "An implementation can preserve  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormPreserveFloat32",
                            "comment": "An implementation can preserve  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormPreserveFloat64",
                            "comment": "An implementation can preserve  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormFlushToZeroFloat16",
                            "comment": "An implementation can flush to zero  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormFlushToZeroFloat32",
                            "comment": "An implementation can flush to zero  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderDenormFlushToZeroFloat64",
                            "comment": "An implementation can flush to zero  denormals"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTEFloat16",
                            "comment": "An implementation can support RTE"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTEFloat32",
                            "comment": "An implementation can support RTE"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTEFloat64",
                            "comment": "An implementation can support RTE"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTZFloat16",
                            "comment": "An implementation can support RTZ"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTZFloat32",
                            "comment": "An implementation can support RTZ"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderRoundingModeRTZFloat64",
                            "comment": "An implementation can support RTZ"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxUpdateAfterBindDescriptorsInAllPools"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderUniformBufferArrayNonUniformIndexingNative"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderSampledImageArrayNonUniformIndexingNative"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderStorageBufferArrayNonUniformIndexingNative"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderStorageImageArrayNonUniformIndexingNative"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "shaderInputAttachmentArrayNonUniformIndexingNative"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "robustBufferAccessUpdateAfterBind"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "quadDivergentImplicitLod"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindSamplers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindUniformBuffers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindStorageBuffers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindSampledImages"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindStorageImages"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindInputAttachments"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageUpdateAfterBindResources"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindSamplers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindUniformBuffers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindStorageBuffers"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindSampledImages"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindStorageImages"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindInputAttachments"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkResolveModeFlags",
                            "name": "supportedDepthResolveModes",
                            "comment": "supported depth resolve modes"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkResolveModeFlags",
                            "name": "supportedStencilResolveModes",
                            "comment": "supported stencil resolve modes"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "independentResolveNone",
                            "comment": "depth and stencil resolve modes can be set independently if one of them is none"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "independentResolve",
                            "comment": "depth and stencil resolve modes can be set independently"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "filterMinmaxSingleComponentFormats"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "filterMinmaxImageComponentMapping"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint64_t",
                            "name": "maxTimelineSemaphoreValueDifference"
                        },
                        {
                            "@limittype": "bitmask",
                            "@optional": "true",
                            "type": "VkSampleCountFlags",
                            "name": "framebufferIntegerColorSampleCounts"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVulkan13Features",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "robustImageAccess"
                        },
                        {
                            "type": "VkBool32",
                            "name": "inlineUniformBlock"
                        },
                        {
                            "type": "VkBool32",
                            "name": "descriptorBindingInlineUniformBlockUpdateAfterBind"
                        },
                        {
                            "type": "VkBool32",
                            "name": "pipelineCreationCacheControl"
                        },
                        {
                            "type": "VkBool32",
                            "name": "privateData"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderDemoteToHelperInvocation"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderTerminateInvocation"
                        },
                        {
                            "type": "VkBool32",
                            "name": "subgroupSizeControl"
                        },
                        {
                            "type": "VkBool32",
                            "name": "computeFullSubgroups"
                        },
                        {
                            "type": "VkBool32",
                            "name": "synchronization2"
                        },
                        {
                            "type": "VkBool32",
                            "name": "textureCompressionASTC_HDR"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderZeroInitializeWorkgroupMemory"
                        },
                        {
                            "type": "VkBool32",
                            "name": "dynamicRendering"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderIntegerDotProduct"
                        },
                        {
                            "type": "VkBool32",
                            "name": "maintenance4"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVulkan13Properties",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "min",
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "minSubgroupSize",
                            "comment": "The minimum subgroup size supported by this device"
                        },
                        {
                            "@limittype": "max",
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "maxSubgroupSize",
                            "comment": "The maximum subgroup size supported by this device"
                        },
                        {
                            "@limittype": "max",
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "maxComputeWorkgroupSubgroups",
                            "comment": "The maximum number of subgroups supported in a workgroup"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkShaderStageFlags",
                            "name": "requiredSubgroupSizeStages",
                            "comment": "The shader stages that support specifying a subgroup size"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxInlineUniformBlockSize"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorInlineUniformBlocks"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetInlineUniformBlocks"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxDescriptorSetUpdateAfterBindInlineUniformBlocks"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxInlineUniformTotalSize"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct8BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct8BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct8BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct4x8BitPackedUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct4x8BitPackedSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct4x8BitPackedMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct16BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct16BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct16BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct32BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct32BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct32BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct64BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct64BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct64BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating8BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating16BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating32BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating64BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "storageTexelBufferOffsetAlignmentBytes"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "storageTexelBufferOffsetSingleTexelAlignment"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "uniformTexelBufferOffsetAlignmentBytes"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkBool32",
                            "name": "uniformTexelBufferOffsetSingleTexelAlignment"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkDeviceSize",
                            "name": "maxBufferSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineCompilerControlCreateInfoAMD",
                    "@structextends": "VkGraphicsPipelineCreateInfo,VkComputePipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCompilerControlFlagsAMD",
                            "name": "compilerControlFlags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceCoherentMemoryFeaturesAMD",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "deviceCoherentMemory"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceToolProperties",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "char",
                            "name": "name",
                            "enum": [
                                "VK_MAX_EXTENSION_NAME_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "char",
                            "name": "version",
                            "enum": [
                                "VK_MAX_EXTENSION_NAME_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "VkToolPurposeFlags",
                            "name": "purposes"
                        },
                        {
                            "type": "char",
                            "name": "description",
                            "enum": [
                                "VK_MAX_DESCRIPTION_SIZE"
                            ],
                            "#text": "[]"
                        },
                        {
                            "type": "char",
                            "name": "layer",
                            "enum": [
                                "VK_MAX_EXTENSION_NAME_SIZE"
                            ],
                            "#text": "[]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceToolPropertiesEXT",
                    "@alias": "VkPhysicalDeviceToolProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerCustomBorderColorCreateInfoEXT",
                    "@structextends": "VkSamplerCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkClearColorValue",
                            "name": "customBorderColor"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceCustomBorderColorPropertiesEXT",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "max",
                            "type": "uint32_t",
                            "name": "maxCustomBorderColorSamplers"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceCustomBorderColorFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "customBorderColors"
                        },
                        {
                            "type": "VkBool32",
                            "name": "customBorderColorWithoutFormat"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSamplerBorderColorComponentMappingCreateInfoEXT",
                    "@structextends": "VkSamplerCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkComponentMapping",
                            "name": "components"
                        },
                        {
                            "type": "VkBool32",
                            "name": "srgb"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceBorderColorSwizzleFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "borderColorSwizzle"
                        },
                        {
                            "type": "VkBool32",
                            "name": "borderColorSwizzleFromImage"
                        }
                    ]
                },
                {
                    "@category": "union",
                    "@name": "VkDeviceOrHostAddressKHR",
                    "member": [
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceAddress",
                            "name": "deviceAddress"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "hostAddress",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "union",
                    "@name": "VkDeviceOrHostAddressConstKHR",
                    "member": [
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceAddress",
                            "name": "deviceAddress"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "hostAddress",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureGeometryTrianglesDataKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFormat",
                            "name": "vertexFormat"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceOrHostAddressConstKHR",
                            "name": "vertexData"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "vertexStride"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxVertex"
                        },
                        {
                            "type": "VkIndexType",
                            "name": "indexType"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceOrHostAddressConstKHR",
                            "name": "indexData"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceOrHostAddressConstKHR",
                            "name": "transformData"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureGeometryAabbsDataKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceOrHostAddressConstKHR",
                            "name": "data"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "stride"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureGeometryInstancesDataKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "arrayOfPointers"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceOrHostAddressConstKHR",
                            "name": "data"
                        }
                    ]
                },
                {
                    "@category": "union",
                    "@name": "VkAccelerationStructureGeometryDataKHR",
                    "member": [
                        {
                            "@selection": "VK_GEOMETRY_TYPE_TRIANGLES_KHR",
                            "type": "VkAccelerationStructureGeometryTrianglesDataKHR",
                            "name": "triangles"
                        },
                        {
                            "@selection": "VK_GEOMETRY_TYPE_AABBS_KHR",
                            "type": "VkAccelerationStructureGeometryAabbsDataKHR",
                            "name": "aabbs"
                        },
                        {
                            "@selection": "VK_GEOMETRY_TYPE_INSTANCES_KHR",
                            "type": "VkAccelerationStructureGeometryInstancesDataKHR",
                            "name": "instances"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureGeometryKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkGeometryTypeKHR",
                            "name": "geometryType"
                        },
                        {
                            "@selector": "geometryType",
                            "type": "VkAccelerationStructureGeometryDataKHR",
                            "name": "geometry"
                        },
                        {
                            "@optional": "true",
                            "type": "VkGeometryFlagsKHR",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureBuildGeometryInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureTypeKHR",
                            "name": "type"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuildAccelerationStructureFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkBuildAccelerationStructureModeKHR",
                            "name": "mode"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "VkAccelerationStructureKHR",
                            "name": "srcAccelerationStructure"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "VkAccelerationStructureKHR",
                            "name": "dstAccelerationStructure"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "geometryCount"
                        },
                        {
                            "@len": "geometryCount",
                            "@optional": "true",
                            "type": "VkAccelerationStructureGeometryKHR",
                            "name": "pGeometries",
                            "#text": "const *"
                        },
                        {
                            "@len": "geometryCount,1",
                            "@optional": "true,false",
                            "type": "VkAccelerationStructureGeometryKHR",
                            "name": "ppGeometries",
                            "#text": "const * const*"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceOrHostAddressKHR",
                            "name": "scratchData"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureBuildRangeInfoKHR",
                    "member": [
                        {
                            "type": "uint32_t",
                            "name": "primitiveCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "primitiveOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstVertex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "transformOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccelerationStructureCreateFlagsKHR",
                            "name": "createFlags"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size"
                        },
                        {
                            "type": "VkAccelerationStructureTypeKHR",
                            "name": "type"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeviceAddress",
                            "name": "deviceAddress"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAabbPositionsKHR",
                    "member": [
                        {
                            "type": "float",
                            "name": "minX"
                        },
                        {
                            "type": "float",
                            "name": "minY"
                        },
                        {
                            "type": "float",
                            "name": "minZ"
                        },
                        {
                            "type": "float",
                            "name": "maxX"
                        },
                        {
                            "type": "float",
                            "name": "maxY"
                        },
                        {
                            "type": "float",
                            "name": "maxZ"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAabbPositionsNV",
                    "@alias": "VkAabbPositionsKHR"
                },
                {
                    "@category": "struct",
                    "@name": "VkTransformMatrixKHR",
                    "member": [
                        {
                            "type": "float",
                            "name": "matrix",
                            "#text": "[3][4]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkTransformMatrixNV",
                    "@alias": "VkTransformMatrixKHR"
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureInstanceKHR",
                    "comment": "The bitfields in this structure are non-normative since bitfield ordering is implementation-defined in C. The specification defines the normative layout.",
                    "member": [
                        {
                            "type": "VkTransformMatrixKHR",
                            "name": "transform"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceCustomIndex",
                            "#text": ":24"
                        },
                        {
                            "type": "uint32_t",
                            "name": "mask",
                            "#text": ":8"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceShaderBindingTableRecordOffset",
                            "#text": ":24"
                        },
                        {
                            "@optional": "true",
                            "type": "VkGeometryInstanceFlagsKHR",
                            "name": "flags",
                            "#text": ":8"
                        },
                        {
                            "type": "uint64_t",
                            "name": "accelerationStructureReference"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureInstanceNV",
                    "@alias": "VkAccelerationStructureInstanceKHR"
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureDeviceAddressInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureKHR",
                            "name": "accelerationStructure"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureVersionInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@len": "latexmath:[2 \\times \\mathtt{VK\\_UUID\\_SIZE}]",
                            "@altlen": "2*VK_UUID_SIZE",
                            "type": "uint8_t",
                            "name": "pVersionData",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyAccelerationStructureInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureKHR",
                            "name": "src"
                        },
                        {
                            "type": "VkAccelerationStructureKHR",
                            "name": "dst"
                        },
                        {
                            "type": "VkCopyAccelerationStructureModeKHR",
                            "name": "mode"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyAccelerationStructureToMemoryInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureKHR",
                            "name": "src"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceOrHostAddressKHR",
                            "name": "dst"
                        },
                        {
                            "type": "VkCopyAccelerationStructureModeKHR",
                            "name": "mode"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyMemoryToAccelerationStructureInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceOrHostAddressConstKHR",
                            "name": "src"
                        },
                        {
                            "type": "VkAccelerationStructureKHR",
                            "name": "dst"
                        },
                        {
                            "type": "VkCopyAccelerationStructureModeKHR",
                            "name": "mode"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRayTracingPipelineInterfaceCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxPipelineRayPayloadSize"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxPipelineRayHitAttributeSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineLibraryCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "libraryCount"
                        },
                        {
                            "@len": "libraryCount",
                            "type": "VkPipeline",
                            "name": "pLibraries",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExtendedDynamicStateFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "extendedDynamicState"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExtendedDynamicState2FeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "extendedDynamicState2"
                        },
                        {
                            "type": "VkBool32",
                            "name": "extendedDynamicState2LogicOp"
                        },
                        {
                            "type": "VkBool32",
                            "name": "extendedDynamicState2PatchControlPoints"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderPassTransformBeginInfoQCOM",
                    "@structextends": "VkRenderPassBeginInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "comment": "Pointer to next structure",
                            "#text": "*"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkSurfaceTransformFlagBitsKHR",
                            "name": "transform"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyCommandTransformInfoQCOM",
                    "@structextends": "VkBufferImageCopy2KHR,VkImageBlit2KHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkSurfaceTransformFlagBitsKHR",
                            "name": "transform"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandBufferInheritanceRenderPassTransformInfoQCOM",
                    "@structextends": "VkCommandBufferInheritanceInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "comment": "Pointer to next structure",
                            "#text": "*"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkSurfaceTransformFlagBitsKHR",
                            "name": "transform"
                        },
                        {
                            "type": "VkRect2D",
                            "name": "renderArea"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDiagnosticsConfigFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "diagnosticsConfig"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDeviceDiagnosticsConfigCreateInfoNV",
                    "@structextends": "VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeviceDiagnosticsConfigFlagsNV",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderZeroInitializeWorkgroupMemory"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR",
                    "@alias": "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSubgroupUniformControlFlow"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceRobustness2FeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "robustBufferAccess2"
                        },
                        {
                            "type": "VkBool32",
                            "name": "robustImageAccess2"
                        },
                        {
                            "type": "VkBool32",
                            "name": "nullDescriptor"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceRobustness2PropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "robustStorageBufferAccessSizeAlignment"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "VkDeviceSize",
                            "name": "robustUniformBufferAccessSizeAlignment"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceImageRobustnessFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "robustImageAccess"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceImageRobustnessFeaturesEXT",
                    "@alias": "VkPhysicalDeviceImageRobustnessFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "workgroupMemoryExplicitLayout"
                        },
                        {
                            "type": "VkBool32",
                            "name": "workgroupMemoryExplicitLayoutScalarBlockLayout"
                        },
                        {
                            "type": "VkBool32",
                            "name": "workgroupMemoryExplicitLayout8BitAccess"
                        },
                        {
                            "type": "VkBool32",
                            "name": "workgroupMemoryExplicitLayout16BitAccess"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePortabilitySubsetFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "constantAlphaColorBlendFactors"
                        },
                        {
                            "type": "VkBool32",
                            "name": "events"
                        },
                        {
                            "type": "VkBool32",
                            "name": "imageViewFormatReinterpretation"
                        },
                        {
                            "type": "VkBool32",
                            "name": "imageViewFormatSwizzle"
                        },
                        {
                            "type": "VkBool32",
                            "name": "imageView2DOn3DImage"
                        },
                        {
                            "type": "VkBool32",
                            "name": "multisampleArrayImage"
                        },
                        {
                            "type": "VkBool32",
                            "name": "mutableComparisonSamplers"
                        },
                        {
                            "type": "VkBool32",
                            "name": "pointPolygons"
                        },
                        {
                            "type": "VkBool32",
                            "name": "samplerMipLodBias"
                        },
                        {
                            "type": "VkBool32",
                            "name": "separateStencilMaskRef"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderSampleRateInterpolationFunctions"
                        },
                        {
                            "type": "VkBool32",
                            "name": "tessellationIsolines"
                        },
                        {
                            "type": "VkBool32",
                            "name": "tessellationPointMode"
                        },
                        {
                            "type": "VkBool32",
                            "name": "triangleFans"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vertexAttributeAccessBeyondStride"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevicePortabilitySubsetPropertiesKHR",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "minVertexInputBindingStrideAlignment"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDevice4444FormatsFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "formatA4R4G4B4"
                        },
                        {
                            "type": "VkBool32",
                            "name": "formatA4B4G4R4"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSubpassShadingFeaturesHUAWEI",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "subpassShading"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferCopy2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_COPY_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "srcOffset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "dstOffset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceSize",
                            "name": "size",
                            "comment": "Specified in bytes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferCopy2KHR",
                    "@alias": "VkBufferCopy2"
                },
                {
                    "@category": "struct",
                    "@name": "VkImageCopy2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_COPY_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "srcSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "srcOffset",
                            "comment": "Specified in pixels for both compressed and uncompressed images"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "dstSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "dstOffset",
                            "comment": "Specified in pixels for both compressed and uncompressed images"
                        },
                        {
                            "type": "VkExtent3D",
                            "name": "extent",
                            "comment": "Specified in pixels for both compressed and uncompressed images"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageCopy2KHR",
                    "@alias": "VkImageCopy2"
                },
                {
                    "@category": "struct",
                    "@name": "VkImageBlit2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_BLIT_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "srcSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "srcOffsets",
                            "comment": "Specified in pixels for both compressed and uncompressed images",
                            "#text": "[2]"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "dstSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "dstOffsets",
                            "comment": "Specified in pixels for both compressed and uncompressed images",
                            "#text": "[2]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageBlit2KHR",
                    "@alias": "VkImageBlit2"
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferImageCopy2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "bufferOffset",
                            "comment": "Specified in bytes"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bufferRowLength",
                            "comment": "Specified in texels"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bufferImageHeight"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "imageSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "imageOffset",
                            "comment": "Specified in pixels for both compressed and uncompressed images"
                        },
                        {
                            "type": "VkExtent3D",
                            "name": "imageExtent",
                            "comment": "Specified in pixels for both compressed and uncompressed images"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferImageCopy2KHR",
                    "@alias": "VkBufferImageCopy2"
                },
                {
                    "@category": "struct",
                    "@name": "VkImageResolve2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "srcSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "srcOffset"
                        },
                        {
                            "type": "VkImageSubresourceLayers",
                            "name": "dstSubresource"
                        },
                        {
                            "type": "VkOffset3D",
                            "name": "dstOffset"
                        },
                        {
                            "type": "VkExtent3D",
                            "name": "extent"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageResolve2KHR",
                    "@alias": "VkImageResolve2"
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyBufferInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "srcBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "dstBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkBufferCopy2",
                            "name": "pRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyBufferInfo2KHR",
                    "@alias": "VkCopyBufferInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyImageInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImage",
                            "name": "srcImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "srcImageLayout"
                        },
                        {
                            "type": "VkImage",
                            "name": "dstImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "dstImageLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkImageCopy2",
                            "name": "pRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyImageInfo2KHR",
                    "@alias": "VkCopyImageInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkBlitImageInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImage",
                            "name": "srcImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "srcImageLayout"
                        },
                        {
                            "type": "VkImage",
                            "name": "dstImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "dstImageLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkImageBlit2",
                            "name": "pRegions",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFilter",
                            "name": "filter"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBlitImageInfo2KHR",
                    "@alias": "VkBlitImageInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyBufferToImageInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "srcBuffer"
                        },
                        {
                            "type": "VkImage",
                            "name": "dstImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "dstImageLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkBufferImageCopy2",
                            "name": "pRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyBufferToImageInfo2KHR",
                    "@alias": "VkCopyBufferToImageInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyImageToBufferInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImage",
                            "name": "srcImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "srcImageLayout"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "dstBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkBufferImageCopy2",
                            "name": "pRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCopyImageToBufferInfo2KHR",
                    "@alias": "VkCopyImageToBufferInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkResolveImageInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImage",
                            "name": "srcImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "srcImageLayout"
                        },
                        {
                            "type": "VkImage",
                            "name": "dstImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "dstImageLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkImageResolve2",
                            "name": "pRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkResolveImageInfo2KHR",
                    "@alias": "VkResolveImageInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderImageInt64Atomics"
                        },
                        {
                            "type": "VkBool32",
                            "name": "sparseImageInt64Atomics"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFragmentShadingRateAttachmentInfoKHR",
                    "@structextends": "VkSubpassDescription2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAttachmentReference2",
                            "name": "pFragmentShadingRateAttachment",
                            "#text": "const *"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "shadingRateAttachmentTexelSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineFragmentShadingRateStateCreateInfoKHR",
                    "@structextends": "VkGraphicsPipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "fragmentSize"
                        },
                        {
                            "type": "VkFragmentShadingRateCombinerOpKHR",
                            "name": "combinerOps",
                            "#text": "[2]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentShadingRateFeaturesKHR",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "pipelineFragmentShadingRate"
                        },
                        {
                            "type": "VkBool32",
                            "name": "primitiveFragmentShadingRate"
                        },
                        {
                            "type": "VkBool32",
                            "name": "attachmentFragmentShadingRate"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentShadingRatePropertiesKHR",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "min",
                            "type": "VkExtent2D",
                            "name": "minFragmentShadingRateAttachmentTexelSize"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkExtent2D",
                            "name": "maxFragmentShadingRateAttachmentTexelSize"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "maxFragmentShadingRateAttachmentTexelSizeAspectRatio"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "primitiveFragmentShadingRateWithMultipleViewports"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "layeredShadingRateAttachments"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "fragmentShadingRateNonTrivialCombinerOps"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkExtent2D",
                            "name": "maxFragmentSize"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "maxFragmentSizeAspectRatio"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "uint32_t",
                            "name": "maxFragmentShadingRateCoverageSamples"
                        },
                        {
                            "@limittype": "max",
                            "type": "VkSampleCountFlagBits",
                            "name": "maxFragmentShadingRateRasterizationSamples"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "fragmentShadingRateWithShaderDepthStencilWrites"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "fragmentShadingRateWithSampleMask"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "fragmentShadingRateWithShaderSampleMask"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "fragmentShadingRateWithConservativeRasterization"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "fragmentShadingRateWithFragmentShaderInterlock"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "fragmentShadingRateWithCustomSampleLocations"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "fragmentShadingRateStrictMultiplyCombiner"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentShadingRateKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkSampleCountFlags",
                            "name": "sampleCounts"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "fragmentSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderTerminateInvocationFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderTerminateInvocation"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR",
                    "@alias": "VkPhysicalDeviceShaderTerminateInvocationFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "fragmentShadingRateEnums"
                        },
                        {
                            "type": "VkBool32",
                            "name": "supersampleFragmentShadingRates"
                        },
                        {
                            "type": "VkBool32",
                            "name": "noInvocationFragmentShadingRates"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkSampleCountFlagBits",
                            "name": "maxFragmentShadingRateInvocationCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineFragmentShadingRateEnumStateCreateInfoNV",
                    "@structextends": "VkGraphicsPipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFragmentShadingRateTypeNV",
                            "name": "shadingRateType"
                        },
                        {
                            "type": "VkFragmentShadingRateNV",
                            "name": "shadingRate"
                        },
                        {
                            "type": "VkFragmentShadingRateCombinerOpKHR",
                            "name": "combinerOps",
                            "#text": "[2]"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureBuildSizesInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "accelerationStructureSize"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "updateScratchSize"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "buildScratchSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "mutableDescriptorType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMutableDescriptorTypeListVALVE",
                    "member": [
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "descriptorTypeCount"
                        },
                        {
                            "@len": "descriptorTypeCount",
                            "type": "VkDescriptorType",
                            "name": "pDescriptorTypes",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMutableDescriptorTypeCreateInfoVALVE",
                    "@structextends": "VkDescriptorSetLayoutCreateInfo,VkDescriptorPoolCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "mutableDescriptorTypeListCount"
                        },
                        {
                            "@len": "mutableDescriptorTypeListCount",
                            "type": "VkMutableDescriptorTypeListVALVE",
                            "name": "pMutableDescriptorTypeLists",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDepthClipControlFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthClipControl"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineViewportDepthClipControlCreateInfoEXT",
                    "@structextends": "VkPipelineViewportStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "negativeOneToOne"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "vertexInputDynamicState"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceExternalMemoryRDMAFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "externalMemoryRDMA"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVertexInputBindingDescription2EXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "binding"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride"
                        },
                        {
                            "type": "VkVertexInputRate",
                            "name": "inputRate"
                        },
                        {
                            "type": "uint32_t",
                            "name": "divisor"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVertexInputAttributeDescription2EXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "location",
                            "comment": "location of the shader vertex attrib"
                        },
                        {
                            "type": "uint32_t",
                            "name": "binding",
                            "comment": "Vertex buffer binding id"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format",
                            "comment": "format of source data"
                        },
                        {
                            "type": "uint32_t",
                            "name": "offset",
                            "comment": "Offset of first element in bytes from base of vertex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceColorWriteEnableFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "colorWriteEnable"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineColorWriteCreateInfoEXT",
                    "@structextends": "VkPipelineColorBlendStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "attachmentCount",
                            "comment": "# of pAttachments"
                        },
                        {
                            "@len": "attachmentCount",
                            "type": "VkBool32",
                            "name": "pColorWriteEnables",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryBarrier2",
                    "@structextends": "VkSubpassDependency2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_BARRIER_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags2",
                            "name": "srcStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags2",
                            "name": "srcAccessMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags2",
                            "name": "dstStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags2",
                            "name": "dstAccessMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryBarrier2KHR",
                    "@alias": "VkMemoryBarrier2"
                },
                {
                    "@category": "struct",
                    "@name": "VkImageMemoryBarrier2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags2",
                            "name": "srcStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags2",
                            "name": "srcAccessMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags2",
                            "name": "dstStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags2",
                            "name": "dstAccessMask"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "oldLayout"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "newLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "srcQueueFamilyIndex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstQueueFamilyIndex"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "VkImageSubresourceRange",
                            "name": "subresourceRange"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageMemoryBarrier2KHR",
                    "@alias": "VkImageMemoryBarrier2"
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferMemoryBarrier2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags2",
                            "name": "srcStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags2",
                            "name": "srcAccessMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags2",
                            "name": "dstStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccessFlags2",
                            "name": "dstAccessMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "srcQueueFamilyIndex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "dstQueueFamilyIndex"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferMemoryBarrier2KHR",
                    "@alias": "VkBufferMemoryBarrier2"
                },
                {
                    "@category": "struct",
                    "@name": "VkDependencyInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DEPENDENCY_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDependencyFlags",
                            "name": "dependencyFlags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "memoryBarrierCount"
                        },
                        {
                            "@len": "memoryBarrierCount",
                            "type": "VkMemoryBarrier2",
                            "name": "pMemoryBarriers",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "bufferMemoryBarrierCount"
                        },
                        {
                            "@len": "bufferMemoryBarrierCount",
                            "type": "VkBufferMemoryBarrier2",
                            "name": "pBufferMemoryBarriers",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "imageMemoryBarrierCount"
                        },
                        {
                            "@len": "imageMemoryBarrierCount",
                            "type": "VkImageMemoryBarrier2",
                            "name": "pImageMemoryBarriers",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDependencyInfoKHR",
                    "@alias": "VkDependencyInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreSubmitInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "type": "uint64_t",
                            "name": "value"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags2",
                            "name": "stageMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "deviceIndex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSemaphoreSubmitInfoKHR",
                    "@alias": "VkSemaphoreSubmitInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandBufferSubmitInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "deviceMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandBufferSubmitInfoKHR",
                    "@alias": "VkCommandBufferSubmitInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkSubmitInfo2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SUBMIT_INFO_2",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSubmitFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "waitSemaphoreInfoCount"
                        },
                        {
                            "@len": "waitSemaphoreInfoCount",
                            "type": "VkSemaphoreSubmitInfo",
                            "name": "pWaitSemaphoreInfos",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "commandBufferInfoCount"
                        },
                        {
                            "@len": "commandBufferInfoCount",
                            "type": "VkCommandBufferSubmitInfo",
                            "name": "pCommandBufferInfos",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "signalSemaphoreInfoCount"
                        },
                        {
                            "@len": "signalSemaphoreInfoCount",
                            "type": "VkSemaphoreSubmitInfo",
                            "name": "pSignalSemaphoreInfos",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSubmitInfo2KHR",
                    "@alias": "VkSubmitInfo2"
                },
                {
                    "@category": "struct",
                    "@name": "VkQueueFamilyCheckpointProperties2NV",
                    "@structextends": "VkQueueFamilyProperties2",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkPipelineStageFlags2",
                            "name": "checkpointExecutionStageMask"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCheckpointData2NV",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkPipelineStageFlags2",
                            "name": "stage"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pCheckpointMarker",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSynchronization2Features",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "synchronization2"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceSynchronization2FeaturesKHR",
                    "@alias": "VkPhysicalDeviceSynchronization2Features"
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoQueueFamilyProperties2KHR",
                    "@structextends": "VkQueueFamilyProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_QUEUE_FAMILY_PROPERTIES_2_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkVideoCodecOperationFlagsKHR",
                            "name": "videoCodecOperations"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkQueueFamilyQueryResultStatusProperties2KHR",
                    "@structextends": "VkQueueFamilyProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_2_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "supported"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoProfilesKHR",
                    "@structextends": "VkFormatProperties2,VkImageCreateInfo,VkImageViewCreateInfo,VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_PROFILES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "profileCount"
                        },
                        {
                            "type": "VkVideoProfileKHR",
                            "name": "pProfiles",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceVideoFormatInfoKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "imageUsage"
                        },
                        {
                            "type": "VkVideoProfilesKHR",
                            "name": "pVideoProfiles",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoFormatPropertiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoProfileKHR",
                    "@structextends": "VkQueryPoolCreateInfo,VkFormatProperties2,VkImageCreateInfo,VkImageViewCreateInfo,VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_PROFILE_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkVideoCodecOperationFlagBitsKHR",
                            "name": "videoCodecOperation"
                        },
                        {
                            "type": "VkVideoChromaSubsamplingFlagsKHR",
                            "name": "chromaSubsampling"
                        },
                        {
                            "type": "VkVideoComponentBitDepthFlagsKHR",
                            "name": "lumaBitDepth"
                        },
                        {
                            "type": "VkVideoComponentBitDepthFlagsKHR",
                            "name": "chromaBitDepth"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoCapabilitiesKHR",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkVideoCapabilityFlagsKHR",
                            "name": "capabilityFlags"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "minBitstreamBufferOffsetAlignment"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "minBitstreamBufferSizeAlignment"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "videoPictureExtentGranularity"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "minExtent"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "maxExtent"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxReferencePicturesSlotsCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxReferencePicturesActiveCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoGetMemoryPropertiesKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_GET_MEMORY_PROPERTIES_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryBindIndex"
                        },
                        {
                            "type": "VkMemoryRequirements2",
                            "name": "pMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoBindMemoryKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_BIND_MEMORY_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryBindIndex"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "memoryOffset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "memorySize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoPictureResourceKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkOffset2D",
                            "name": "codedOffset",
                            "comment": "The offset to be used for the picture resource, currently only used in field mode"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "codedExtent",
                            "comment": "The extent to be used for the picture resource"
                        },
                        {
                            "type": "uint32_t",
                            "name": "baseArrayLayer",
                            "comment": "TThe first array layer to be accessed for the Decode or Encode Operations"
                        },
                        {
                            "type": "VkImageView",
                            "name": "imageViewBinding",
                            "comment": "The ImageView binding of the resource"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoReferenceSlotKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "int8_t",
                            "name": "slotIndex",
                            "comment": "The reference slot index"
                        },
                        {
                            "type": "VkVideoPictureResourceKHR",
                            "name": "pPictureResource",
                            "comment": "The reference picture resource",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoDecodeFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "type": "VkOffset2D",
                            "name": "codedOffset"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "codedExtent"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "srcBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "srcBufferOffset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "srcBufferRange"
                        },
                        {
                            "type": "VkVideoPictureResourceKHR",
                            "name": "dstPictureResource"
                        },
                        {
                            "type": "VkVideoReferenceSlotKHR",
                            "name": "pSetupReferenceSlot",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "referenceSlotCount"
                        },
                        {
                            "@len": "referenceSlotCount",
                            "type": "VkVideoReferenceSlotKHR",
                            "name": "pReferenceSlots",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "include",
                    "@name": "vk_video/vulkan_video_codec_h264std.h",
                    "#text": "#include \"vk_video/vulkan_video_codec_h264std.h\""
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264ProfileIdc"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264Level"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264ChromaFormatIdc"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264PocType"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264SpsFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264ScalingLists"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264SequenceParameterSetVui"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264AspectRatioIdc"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264HrdParameters"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264SpsVuiFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264WeightedBipredIdc"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264PpsFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264SliceType"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264CabacInitIdc"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264DisableDeblockingFilterIdc"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264PictureType"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264ModificationOfPicNumsIdc"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264MemMgmtControlOp"
                },
                {
                    "@category": "include",
                    "@name": "vk_video/vulkan_video_codec_h264std_decode.h",
                    "#text": "#include \"vk_video/vulkan_video_codec_h264std_decode.h\""
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_decode.h",
                    "@name": "StdVideoDecodeH264PictureInfo"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_decode.h",
                    "@name": "StdVideoDecodeH264ReferenceInfo"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_decode.h",
                    "@name": "StdVideoDecodeH264Mvc"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_decode.h",
                    "@name": "StdVideoDecodeH264PictureInfoFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_decode.h",
                    "@name": "StdVideoDecodeH264ReferenceInfoFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_decode.h",
                    "@name": "StdVideoDecodeH264MvcElement"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_decode.h",
                    "@name": "StdVideoDecodeH264MvcElementFlags"
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH264ProfileEXT",
                    "@structextends": "VkVideoProfileKHR,VkQueryPoolCreateInfo,VkFormatProperties2,VkImageCreateInfo,VkImageViewCreateInfo,VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoH264ProfileIdc",
                            "name": "stdProfileIdc"
                        },
                        {
                            "type": "VkVideoDecodeH264PictureLayoutFlagsEXT",
                            "name": "pictureLayout"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH264CapabilitiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkVideoCapabilitiesKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxLevel"
                        },
                        {
                            "type": "VkOffset2D",
                            "name": "fieldOffsetGranularity"
                        },
                        {
                            "type": "VkExtensionProperties",
                            "name": "stdExtensionVersion"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH264SessionCreateInfoEXT",
                    "@structextends": "VkVideoSessionCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkVideoDecodeH264CreateFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "VkExtensionProperties",
                            "name": "pStdExtensionVersion",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264SequenceParameterSet"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std.h",
                    "@name": "StdVideoH264PictureParameterSet"
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH264SessionParametersAddInfoEXT",
                    "@structextends": "VkVideoSessionParametersUpdateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "spsStdCount"
                        },
                        {
                            "@len": "spsStdCount",
                            "@optional": "true",
                            "type": "StdVideoH264SequenceParameterSet",
                            "name": "pSpsStd",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "ppsStdCount"
                        },
                        {
                            "@len": "ppsStdCount",
                            "@optional": "true",
                            "type": "StdVideoH264PictureParameterSet",
                            "name": "pPpsStd",
                            "comment": "List of Picture Parameters associated with the spsStd, above",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH264SessionParametersCreateInfoEXT",
                    "@structextends": "VkVideoSessionParametersCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxSpsStdCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxPpsStdCount"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoDecodeH264SessionParametersAddInfoEXT",
                            "name": "pParametersAddInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH264PictureInfoEXT",
                    "@structextends": "VkVideoDecodeInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoDecodeH264PictureInfo",
                            "name": "pStdPictureInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "slicesCount"
                        },
                        {
                            "@len": "slicesCount",
                            "type": "uint32_t",
                            "name": "pSlicesDataOffsets",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH264DpbSlotInfoEXT",
                    "@structextends": "VkVideoReferenceSlotKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoDecodeH264ReferenceInfo",
                            "name": "pStdReferenceInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH264MvcEXT",
                    "@structextends": "VkVideoDecodeH264PictureInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_MVC_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoDecodeH264Mvc",
                            "name": "pStdMvc",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "include",
                    "@name": "vk_video/vulkan_video_codec_h265std.h",
                    "#text": "#include \"vk_video/vulkan_video_codec_h265std.h\""
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265ProfileIdc"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265VideoParameterSet"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265SequenceParameterSet"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265PictureParameterSet"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265DecPicBufMgr"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265HrdParameters"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265VpsFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265Level"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265SpsFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265ScalingLists"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265SequenceParameterSetVui"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265PredictorPaletteEntries"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265PpsFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265SubLayerHrdParameters"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265HrdFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265SpsVuiFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265SliceType"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std.h",
                    "@name": "StdVideoH265PictureType"
                },
                {
                    "@category": "include",
                    "@name": "vk_video/vulkan_video_codec_h265std_decode.h",
                    "#text": "#include \"vk_video/vulkan_video_codec_h265std_decode.h\""
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_decode.h",
                    "@name": "StdVideoDecodeH265PictureInfo"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_decode.h",
                    "@name": "StdVideoDecodeH265ReferenceInfo"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_decode.h",
                    "@name": "StdVideoDecodeH265PictureInfoFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_decode.h",
                    "@name": "StdVideoDecodeH265ReferenceInfoFlags"
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH265ProfileEXT",
                    "@structextends": "VkVideoProfileKHR,VkQueryPoolCreateInfo,VkFormatProperties2,VkImageCreateInfo,VkImageViewCreateInfo,VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoH265ProfileIdc",
                            "name": "stdProfileIdc"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH265CapabilitiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkVideoCapabilitiesKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxLevel"
                        },
                        {
                            "type": "VkExtensionProperties",
                            "name": "stdExtensionVersion"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH265SessionCreateInfoEXT",
                    "@structextends": "VkVideoSessionCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkVideoDecodeH265CreateFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "VkExtensionProperties",
                            "name": "pStdExtensionVersion",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH265SessionParametersAddInfoEXT",
                    "@structextends": "VkVideoSessionParametersUpdateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "spsStdCount"
                        },
                        {
                            "@len": "spsStdCount",
                            "@optional": "true",
                            "type": "StdVideoH265SequenceParameterSet",
                            "name": "pSpsStd",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "ppsStdCount"
                        },
                        {
                            "@len": "ppsStdCount",
                            "@optional": "true",
                            "type": "StdVideoH265PictureParameterSet",
                            "name": "pPpsStd",
                            "comment": "List of Picture Parameters associated with the spsStd, above",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH265SessionParametersCreateInfoEXT",
                    "@structextends": "VkVideoSessionParametersCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxSpsStdCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxPpsStdCount"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoDecodeH265SessionParametersAddInfoEXT",
                            "name": "pParametersAddInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH265PictureInfoEXT",
                    "@structextends": "VkVideoDecodeInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoDecodeH265PictureInfo",
                            "name": "pStdPictureInfo",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "slicesCount"
                        },
                        {
                            "@len": "slicesCount",
                            "type": "uint32_t",
                            "name": "pSlicesDataOffsets",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoDecodeH265DpbSlotInfoEXT",
                    "@structextends": "VkVideoReferenceSlotKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoDecodeH265ReferenceInfo",
                            "name": "pStdReferenceInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoSessionCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoSessionCreateFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "type": "VkVideoProfileKHR",
                            "name": "pVideoProfile",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFormat",
                            "name": "pictureFormat"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "maxCodedExtent"
                        },
                        {
                            "type": "VkFormat",
                            "name": "referencePicturesFormat"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxReferencePicturesSlotsCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxReferencePicturesActiveCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoSessionParametersCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoSessionParametersKHR",
                            "name": "videoSessionParametersTemplate"
                        },
                        {
                            "type": "VkVideoSessionKHR",
                            "name": "videoSession"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoSessionParametersUpdateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "updateSequenceCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoBeginCodingInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoBeginCodingFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "type": "VkVideoCodingQualityPresetFlagsKHR",
                            "name": "codecQualityPreset"
                        },
                        {
                            "type": "VkVideoSessionKHR",
                            "name": "videoSession"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoSessionParametersKHR",
                            "name": "videoSessionParameters"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "referenceSlotCount"
                        },
                        {
                            "@len": "referenceSlotCount",
                            "type": "VkVideoReferenceSlotKHR",
                            "name": "pReferenceSlots",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEndCodingInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoEndCodingFlagsKHR",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoCodingControlInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoCodingControlFlagsKHR",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoEncodeFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "qualityLevel"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "codedExtent"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "dstBitstreamBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "dstBitstreamBufferOffset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "dstBitstreamBufferMaxRange"
                        },
                        {
                            "type": "VkVideoPictureResourceKHR",
                            "name": "srcPictureResource"
                        },
                        {
                            "type": "VkVideoReferenceSlotKHR",
                            "name": "pSetupReferenceSlot",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "referenceSlotCount"
                        },
                        {
                            "@len": "referenceSlotCount",
                            "type": "VkVideoReferenceSlotKHR",
                            "name": "pReferenceSlots",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "precedingExternallyEncodedBytes"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeRateControlInfoKHR",
                    "@structextends": "VkVideoCodingControlInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkVideoEncodeRateControlFlagsKHR",
                            "name": "flags"
                        },
                        {
                            "type": "VkVideoEncodeRateControlModeFlagBitsKHR",
                            "name": "rateControlMode"
                        },
                        {
                            "type": "uint8_t",
                            "name": "layerCount"
                        },
                        {
                            "@len": "layerCount",
                            "type": "VkVideoEncodeRateControlLayerInfoKHR",
                            "name": "pLayerConfigs",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeRateControlLayerInfoKHR",
                    "@structextends": "VkVideoCodingControlInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "averageBitrate"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxBitrate"
                        },
                        {
                            "type": "uint32_t",
                            "name": "frameRateNumerator"
                        },
                        {
                            "type": "uint32_t",
                            "name": "frameRateDenominator"
                        },
                        {
                            "type": "uint32_t",
                            "name": "virtualBufferSizeInMs"
                        },
                        {
                            "type": "uint32_t",
                            "name": "initialVirtualBufferSizeInMs"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264CapabilitiesEXT",
                    "@structextends": "VkVideoCapabilitiesKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkVideoEncodeH264CapabilityFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "VkVideoEncodeH264InputModeFlagsEXT",
                            "name": "inputModeFlags"
                        },
                        {
                            "type": "VkVideoEncodeH264OutputModeFlagsEXT",
                            "name": "outputModeFlags"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "minPictureSizeInMbs"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "maxPictureSizeInMbs"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "inputImageDataAlignment"
                        },
                        {
                            "type": "uint8_t",
                            "name": "maxNumL0ReferenceForP"
                        },
                        {
                            "type": "uint8_t",
                            "name": "maxNumL0ReferenceForB"
                        },
                        {
                            "type": "uint8_t",
                            "name": "maxNumL1Reference"
                        },
                        {
                            "type": "uint8_t",
                            "name": "qualityLevelCount"
                        },
                        {
                            "type": "VkExtensionProperties",
                            "name": "stdExtensionVersion"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264SessionCreateInfoEXT",
                    "@structextends": "VkVideoSessionCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkVideoEncodeH264CreateFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "maxPictureSizeInMbs"
                        },
                        {
                            "type": "VkExtensionProperties",
                            "name": "pStdExtensionVersion",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "include",
                    "@name": "vk_video/vulkan_video_codec_h264std_encode.h",
                    "#text": "#include \"vk_video/vulkan_video_codec_h264std_encode.h\""
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_encode.h",
                    "@name": "StdVideoEncodeH264SliceHeader"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_encode.h",
                    "@name": "StdVideoEncodeH264PictureInfo"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_encode.h",
                    "@name": "StdVideoEncodeH264SliceHeaderFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_encode.h",
                    "@name": "StdVideoEncodeH264RefMemMgmtCtrlOperations"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_encode.h",
                    "@name": "StdVideoEncodeH264PictureInfoFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_encode.h",
                    "@name": "StdVideoEncodeH264RefMgmtFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_encode.h",
                    "@name": "StdVideoEncodeH264RefListModEntry"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h264std_encode.h",
                    "@name": "StdVideoEncodeH264RefPicMarkingEntry"
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264SessionParametersAddInfoEXT",
                    "@structextends": "VkVideoSessionParametersUpdateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "spsStdCount"
                        },
                        {
                            "@len": "spsStdCount",
                            "@optional": "true",
                            "type": "StdVideoH264SequenceParameterSet",
                            "name": "pSpsStd",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "ppsStdCount"
                        },
                        {
                            "@len": "ppsStdCount",
                            "@optional": "true",
                            "type": "StdVideoH264PictureParameterSet",
                            "name": "pPpsStd",
                            "comment": "List of Picture Parameters associated with the spsStd, above",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264SessionParametersCreateInfoEXT",
                    "@structextends": "VkVideoSessionParametersCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxSpsStdCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxPpsStdCount"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoEncodeH264SessionParametersAddInfoEXT",
                            "name": "pParametersAddInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264DpbSlotInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "int8_t",
                            "name": "slotIndex"
                        },
                        {
                            "type": "StdVideoEncodeH264PictureInfo",
                            "name": "pStdPictureInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264VclFrameInfoEXT",
                    "@structextends": "VkVideoEncodeInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_VCL_FRAME_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint8_t",
                            "name": "refDefaultFinalList0EntryCount"
                        },
                        {
                            "@len": "refDefaultFinalList0EntryCount",
                            "type": "VkVideoEncodeH264DpbSlotInfoEXT",
                            "name": "pRefDefaultFinalList0Entries",
                            "#text": "const *"
                        },
                        {
                            "type": "uint8_t",
                            "name": "refDefaultFinalList1EntryCount"
                        },
                        {
                            "@len": "refDefaultFinalList1EntryCount",
                            "type": "VkVideoEncodeH264DpbSlotInfoEXT",
                            "name": "pRefDefaultFinalList1Entries",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "naluSliceEntryCount"
                        },
                        {
                            "@len": "naluSliceEntryCount",
                            "type": "VkVideoEncodeH264NaluSliceEXT",
                            "name": "pNaluSliceEntries",
                            "#text": "const *"
                        },
                        {
                            "type": "VkVideoEncodeH264DpbSlotInfoEXT",
                            "name": "pCurrentPictureInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264EmitPictureParametersEXT",
                    "@structextends": "VkVideoEncodeInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_EMIT_PICTURE_PARAMETERS_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint8_t",
                            "name": "spsId"
                        },
                        {
                            "type": "VkBool32",
                            "name": "emitSpsEnable"
                        },
                        {
                            "type": "uint32_t",
                            "name": "ppsIdEntryCount"
                        },
                        {
                            "@len": "ppsIdEntryCount",
                            "type": "uint8_t",
                            "name": "ppsIdEntries",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264ProfileEXT",
                    "@structextends": "VkVideoProfileKHR,VkQueryPoolCreateInfo,VkFormatProperties2,VkImageCreateInfo,VkImageViewCreateInfo,VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoH264ProfileIdc",
                            "name": "stdProfileIdc"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264NaluSliceEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoEncodeH264SliceHeader",
                            "name": "pSliceHeaderStd",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "mbCount"
                        },
                        {
                            "type": "uint8_t",
                            "name": "refFinalList0EntryCount"
                        },
                        {
                            "@len": "refFinalList0EntryCount",
                            "type": "VkVideoEncodeH264DpbSlotInfoEXT",
                            "name": "pRefFinalList0Entries",
                            "#text": "const *"
                        },
                        {
                            "type": "uint8_t",
                            "name": "refFinalList1EntryCount"
                        },
                        {
                            "@len": "refFinalList1EntryCount",
                            "type": "VkVideoEncodeH264DpbSlotInfoEXT",
                            "name": "pRefFinalList1Entries",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264RateControlInfoEXT",
                    "@structextends": "VkVideoEncodeRateControlInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "gopFrameCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "idrPeriod"
                        },
                        {
                            "type": "uint32_t",
                            "name": "consecutiveBFrameCount"
                        },
                        {
                            "type": "VkVideoEncodeH264RateControlStructureFlagBitsEXT",
                            "name": "rateControlStructure"
                        },
                        {
                            "type": "uint8_t",
                            "name": "temporalLayerCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264QpEXT",
                    "member": [
                        {
                            "@noautovalidity": "true",
                            "type": "int32_t",
                            "name": "qpI"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "int32_t",
                            "name": "qpP"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "int32_t",
                            "name": "qpB"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264FrameSizeEXT",
                    "member": [
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "frameISize"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "framePSize"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "frameBSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH264RateControlLayerInfoEXT",
                    "@structextends": "VkVideoEncodeRateControlLayerInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint8_t",
                            "name": "temporalLayerId"
                        },
                        {
                            "type": "VkBool32",
                            "name": "useInitialRcQp"
                        },
                        {
                            "type": "VkVideoEncodeH264QpEXT",
                            "name": "initialRcQp"
                        },
                        {
                            "type": "VkBool32",
                            "name": "useMinQp"
                        },
                        {
                            "type": "VkVideoEncodeH264QpEXT",
                            "name": "minQp"
                        },
                        {
                            "type": "VkBool32",
                            "name": "useMaxQp"
                        },
                        {
                            "type": "VkVideoEncodeH264QpEXT",
                            "name": "maxQp"
                        },
                        {
                            "type": "VkBool32",
                            "name": "useMaxFrameSize"
                        },
                        {
                            "type": "VkVideoEncodeH264FrameSizeEXT",
                            "name": "maxFrameSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265CapabilitiesEXT",
                    "@structextends": "VkVideoCapabilitiesKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkVideoEncodeH265CapabilityFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "VkVideoEncodeH265InputModeFlagsEXT",
                            "name": "inputModeFlags"
                        },
                        {
                            "type": "VkVideoEncodeH265OutputModeFlagsEXT",
                            "name": "outputModeFlags"
                        },
                        {
                            "type": "VkVideoEncodeH265CtbSizeFlagsEXT",
                            "name": "ctbSizes"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "inputImageDataAlignment"
                        },
                        {
                            "type": "uint8_t",
                            "name": "maxNumL0ReferenceForP"
                        },
                        {
                            "type": "uint8_t",
                            "name": "maxNumL0ReferenceForB"
                        },
                        {
                            "type": "uint8_t",
                            "name": "maxNumL1Reference"
                        },
                        {
                            "type": "uint8_t",
                            "name": "maxNumSubLayers"
                        },
                        {
                            "type": "uint8_t",
                            "name": "qualityLevelCount"
                        },
                        {
                            "type": "VkExtensionProperties",
                            "name": "stdExtensionVersion"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265SessionCreateInfoEXT",
                    "@structextends": "VkVideoSessionCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkVideoEncodeH265CreateFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "VkExtensionProperties",
                            "name": "pStdExtensionVersion",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "include",
                    "@name": "vk_video/vulkan_video_codec_h265std_encode.h",
                    "#text": "#include \"vk_video/vulkan_video_codec_h265std_encode.h\""
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_encode.h",
                    "@name": "StdVideoEncodeH265PictureInfoFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_encode.h",
                    "@name": "StdVideoEncodeH265PictureInfo"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_encode.h",
                    "@name": "StdVideoEncodeH265SliceHeader"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_encode.h",
                    "@name": "StdVideoEncodeH265ReferenceInfo"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_encode.h",
                    "@name": "StdVideoEncodeH265ReferenceModifications"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_encode.h",
                    "@name": "StdVideoEncodeH265SliceHeaderFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_encode.h",
                    "@name": "StdVideoEncodeH265ReferenceInfoFlags"
                },
                {
                    "@requires": "vk_video/vulkan_video_codec_h265std_encode.h",
                    "@name": "StdVideoEncodeH265ReferenceModificationFlags"
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265SessionParametersAddInfoEXT",
                    "@structextends": "VkVideoSessionParametersUpdateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "vpsStdCount"
                        },
                        {
                            "@len": "vpsStdCount",
                            "@optional": "true",
                            "type": "StdVideoH265VideoParameterSet",
                            "name": "pVpsStd",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "spsStdCount"
                        },
                        {
                            "@len": "spsStdCount",
                            "@optional": "true",
                            "type": "StdVideoH265SequenceParameterSet",
                            "name": "pSpsStd",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "ppsStdCount"
                        },
                        {
                            "@len": "ppsStdCount",
                            "@optional": "true",
                            "type": "StdVideoH265PictureParameterSet",
                            "name": "pPpsStd",
                            "comment": "List of Picture Parameters associated with the spsStd, above",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265SessionParametersCreateInfoEXT",
                    "@structextends": "VkVideoSessionParametersCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxVpsStdCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxSpsStdCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxPpsStdCount"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoEncodeH265SessionParametersAddInfoEXT",
                            "name": "pParametersAddInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265VclFrameInfoEXT",
                    "@structextends": "VkVideoEncodeInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_VCL_FRAME_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoEncodeH265ReferenceListsEXT",
                            "name": "pReferenceFinalLists",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "naluSliceEntryCount"
                        },
                        {
                            "@len": "naluSliceEntryCount",
                            "type": "VkVideoEncodeH265NaluSliceEXT",
                            "name": "pNaluSliceEntries",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoEncodeH265PictureInfo",
                            "name": "pCurrentPictureInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265EmitPictureParametersEXT",
                    "@structextends": "VkVideoEncodeInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_EMIT_PICTURE_PARAMETERS_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint8_t",
                            "name": "vpsId"
                        },
                        {
                            "type": "uint8_t",
                            "name": "spsId"
                        },
                        {
                            "type": "VkBool32",
                            "name": "emitVpsEnable"
                        },
                        {
                            "type": "VkBool32",
                            "name": "emitSpsEnable"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "ppsIdEntryCount"
                        },
                        {
                            "@len": "ppsIdEntryCount",
                            "type": "uint8_t",
                            "name": "ppsIdEntries",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265NaluSliceEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "ctbCount"
                        },
                        {
                            "@optional": "true",
                            "type": "VkVideoEncodeH265ReferenceListsEXT",
                            "name": "pReferenceFinalLists",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoEncodeH265SliceHeader",
                            "name": "pSliceHeaderStd",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265RateControlInfoEXT",
                    "@structextends": "VkVideoEncodeRateControlInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "gopFrameCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "idrPeriod"
                        },
                        {
                            "type": "uint32_t",
                            "name": "consecutiveBFrameCount"
                        },
                        {
                            "type": "VkVideoEncodeH265RateControlStructureFlagBitsEXT",
                            "name": "rateControlStructure"
                        },
                        {
                            "type": "uint8_t",
                            "name": "subLayerCount"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265QpEXT",
                    "member": [
                        {
                            "@noautovalidity": "true",
                            "type": "int32_t",
                            "name": "qpI"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "int32_t",
                            "name": "qpP"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "int32_t",
                            "name": "qpB"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265FrameSizeEXT",
                    "member": [
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "frameISize"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "framePSize"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "uint32_t",
                            "name": "frameBSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265RateControlLayerInfoEXT",
                    "@structextends": "VkVideoEncodeRateControlLayerInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint8_t",
                            "name": "temporalId"
                        },
                        {
                            "type": "VkBool32",
                            "name": "useInitialRcQp"
                        },
                        {
                            "type": "VkVideoEncodeH265QpEXT",
                            "name": "initialRcQp"
                        },
                        {
                            "type": "VkBool32",
                            "name": "useMinQp"
                        },
                        {
                            "type": "VkVideoEncodeH265QpEXT",
                            "name": "minQp"
                        },
                        {
                            "type": "VkBool32",
                            "name": "useMaxQp"
                        },
                        {
                            "type": "VkVideoEncodeH265QpEXT",
                            "name": "maxQp"
                        },
                        {
                            "type": "VkBool32",
                            "name": "useMaxFrameSize"
                        },
                        {
                            "type": "VkVideoEncodeH265FrameSizeEXT",
                            "name": "maxFrameSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265ProfileEXT",
                    "@structextends": "VkVideoProfileKHR,VkQueryPoolCreateInfo,VkFormatProperties2,VkImageCreateInfo,VkImageViewCreateInfo,VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoH265ProfileIdc",
                            "name": "stdProfileIdc"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265DpbSlotInfoEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "int8_t",
                            "name": "slotIndex"
                        },
                        {
                            "type": "StdVideoEncodeH265ReferenceInfo",
                            "name": "pStdReferenceInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkVideoEncodeH265ReferenceListsEXT",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_REFERENCE_LISTS_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint8_t",
                            "name": "referenceList0EntryCount"
                        },
                        {
                            "@len": "referenceList0EntryCount",
                            "type": "VkVideoEncodeH265DpbSlotInfoEXT",
                            "name": "pReferenceList0Entries",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint8_t",
                            "name": "referenceList1EntryCount"
                        },
                        {
                            "@len": "referenceList1EntryCount",
                            "type": "VkVideoEncodeH265DpbSlotInfoEXT",
                            "name": "pReferenceList1Entries",
                            "#text": "const *"
                        },
                        {
                            "type": "StdVideoEncodeH265ReferenceModifications",
                            "name": "pReferenceModifications",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceInheritedViewportScissorFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "inheritedViewportScissor2D"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandBufferInheritanceViewportScissorInfoNV",
                    "@structextends": "VkCommandBufferInheritanceInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "viewportScissor2D"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewportDepthCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkViewport",
                            "name": "pViewportDepths",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "ycbcr2plane444Formats"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceProvokingVertexFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "provokingVertexLast"
                        },
                        {
                            "type": "VkBool32",
                            "name": "transformFeedbackPreservesProvokingVertex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceProvokingVertexPropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "provokingVertexModePerPipeline"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "transformFeedbackPreservesTriangleFanProvokingVertex"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineRasterizationProvokingVertexStateCreateInfoEXT",
                    "@structextends": "VkPipelineRasterizationStateCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkProvokingVertexModeEXT",
                            "name": "provokingVertexMode"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCuModuleCreateInfoNVX",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "size_t",
                            "name": "dataSize"
                        },
                        {
                            "@len": "dataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCuFunctionCreateInfoNVX",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkCuModuleNVX",
                            "name": "module"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pName",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCuLaunchInfoNVX",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkCuFunctionNVX",
                            "name": "function"
                        },
                        {
                            "type": "uint32_t",
                            "name": "gridDimX"
                        },
                        {
                            "type": "uint32_t",
                            "name": "gridDimY"
                        },
                        {
                            "type": "uint32_t",
                            "name": "gridDimZ"
                        },
                        {
                            "type": "uint32_t",
                            "name": "blockDimX"
                        },
                        {
                            "type": "uint32_t",
                            "name": "blockDimY"
                        },
                        {
                            "type": "uint32_t",
                            "name": "blockDimZ"
                        },
                        {
                            "type": "uint32_t",
                            "name": "sharedMemBytes"
                        },
                        {
                            "@optional": "true",
                            "type": "size_t",
                            "name": "paramCount"
                        },
                        {
                            "@len": "paramCount",
                            "type": "void",
                            "name": "pParams",
                            "#text": "const * const *"
                        },
                        {
                            "@optional": "true",
                            "type": "size_t",
                            "name": "extraCount"
                        },
                        {
                            "@len": "extraCount",
                            "type": "void",
                            "name": "pExtras",
                            "#text": "const * const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderIntegerDotProductFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "shaderIntegerDotProduct"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR",
                    "@alias": "VkPhysicalDeviceShaderIntegerDotProductFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderIntegerDotProductProperties",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct8BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct8BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct8BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct4x8BitPackedUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct4x8BitPackedSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct4x8BitPackedMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct16BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct16BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct16BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct32BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct32BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct32BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct64BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct64BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProduct64BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating8BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating16BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating32BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating64BitSignedAccelerated"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR",
                    "@alias": "VkPhysicalDeviceShaderIntegerDotProductProperties"
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDrmPropertiesEXT",
                    "@returnedonly": "true",
                    "@structextends": "VkPhysicalDeviceProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "hasPrimary"
                        },
                        {
                            "@limittype": "bitmask",
                            "type": "VkBool32",
                            "name": "hasRender"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "int64_t",
                            "name": "primaryMajor"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "int64_t",
                            "name": "primaryMinor"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "int64_t",
                            "name": "renderMajor"
                        },
                        {
                            "@limittype": "noauto",
                            "type": "int64_t",
                            "name": "renderMinor"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceRayTracingMotionBlurFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rayTracingMotionBlur"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rayTracingMotionBlurPipelineTraceRaysIndirect"
                        }
                    ]
                },
                {
                    "@name": "VkAccelerationStructureMotionInstanceTypeNV",
                    "@category": "enum"
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureGeometryMotionTrianglesDataNV",
                    "@structextends": "VkAccelerationStructureGeometryTrianglesDataKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkDeviceOrHostAddressConstKHR",
                            "name": "vertexData"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureMotionInfoNV",
                    "@structextends": "VkAccelerationStructureCreateInfoKHR",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxInstances"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccelerationStructureMotionInfoFlagsNV",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSRTDataNV",
                    "member": [
                        {
                            "type": "float",
                            "name": "sx"
                        },
                        {
                            "type": "float",
                            "name": "a"
                        },
                        {
                            "type": "float",
                            "name": "b"
                        },
                        {
                            "type": "float",
                            "name": "pvx"
                        },
                        {
                            "type": "float",
                            "name": "sy"
                        },
                        {
                            "type": "float",
                            "name": "c"
                        },
                        {
                            "type": "float",
                            "name": "pvy"
                        },
                        {
                            "type": "float",
                            "name": "sz"
                        },
                        {
                            "type": "float",
                            "name": "pvz"
                        },
                        {
                            "type": "float",
                            "name": "qx"
                        },
                        {
                            "type": "float",
                            "name": "qy"
                        },
                        {
                            "type": "float",
                            "name": "qz"
                        },
                        {
                            "type": "float",
                            "name": "qw"
                        },
                        {
                            "type": "float",
                            "name": "tx"
                        },
                        {
                            "type": "float",
                            "name": "ty"
                        },
                        {
                            "type": "float",
                            "name": "tz"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureSRTMotionInstanceNV",
                    "comment": "The bitfields in this structure are non-normative since bitfield ordering is implementation-defined in C. The specification defines the normative layout.",
                    "member": [
                        {
                            "type": "VkSRTDataNV",
                            "name": "transformT0"
                        },
                        {
                            "type": "VkSRTDataNV",
                            "name": "transformT1"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceCustomIndex",
                            "#text": ":24"
                        },
                        {
                            "type": "uint32_t",
                            "name": "mask",
                            "#text": ":8"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceShaderBindingTableRecordOffset",
                            "#text": ":24"
                        },
                        {
                            "@optional": "true",
                            "type": "VkGeometryInstanceFlagsKHR",
                            "name": "flags",
                            "#text": ":8"
                        },
                        {
                            "type": "uint64_t",
                            "name": "accelerationStructureReference"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureMatrixMotionInstanceNV",
                    "comment": "The bitfields in this structure are non-normative since bitfield ordering is implementation-defined in C. The specification defines the normative layout.",
                    "member": [
                        {
                            "type": "VkTransformMatrixKHR",
                            "name": "transformT0"
                        },
                        {
                            "type": "VkTransformMatrixKHR",
                            "name": "transformT1"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceCustomIndex",
                            "#text": ":24"
                        },
                        {
                            "type": "uint32_t",
                            "name": "mask",
                            "#text": ":8"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceShaderBindingTableRecordOffset",
                            "#text": ":24"
                        },
                        {
                            "@optional": "true",
                            "type": "VkGeometryInstanceFlagsKHR",
                            "name": "flags",
                            "#text": ":8"
                        },
                        {
                            "type": "uint64_t",
                            "name": "accelerationStructureReference"
                        }
                    ]
                },
                {
                    "@category": "union",
                    "@name": "VkAccelerationStructureMotionInstanceDataNV",
                    "member": [
                        {
                            "@selection": "VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV",
                            "type": "VkAccelerationStructureInstanceKHR",
                            "name": "staticInstance"
                        },
                        {
                            "@selection": "VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV",
                            "type": "VkAccelerationStructureMatrixMotionInstanceNV",
                            "name": "matrixMotionInstance"
                        },
                        {
                            "@selection": "VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV",
                            "type": "VkAccelerationStructureSRTMotionInstanceNV",
                            "name": "srtMotionInstance"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAccelerationStructureMotionInstanceNV",
                    "member": [
                        {
                            "type": "VkAccelerationStructureMotionInstanceTypeNV",
                            "name": "type"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccelerationStructureMotionInstanceFlagsNV",
                            "name": "flags"
                        },
                        {
                            "@selector": "type",
                            "type": "VkAccelerationStructureMotionInstanceDataNV",
                            "name": "data"
                        }
                    ]
                },
                {
                    "@category": "basetype",
                    "type": "void",
                    "name": "VkRemoteAddressNV",
                    "#text": "typedef * ;"
                },
                {
                    "@category": "struct",
                    "@name": "VkMemoryGetRemoteAddressInfoNV",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImportMemoryBufferCollectionFUCHSIA",
                    "@structextends": "VkMemoryAllocateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBufferCollectionFUCHSIA",
                            "name": "collection"
                        },
                        {
                            "type": "uint32_t",
                            "name": "index"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferCollectionImageCreateInfoFUCHSIA",
                    "@structextends": "VkImageCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBufferCollectionFUCHSIA",
                            "name": "collection"
                        },
                        {
                            "type": "uint32_t",
                            "name": "index"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferCollectionBufferCreateInfoFUCHSIA",
                    "@structextends": "VkBufferCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBufferCollectionFUCHSIA",
                            "name": "collection"
                        },
                        {
                            "type": "uint32_t",
                            "name": "index"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferCollectionCreateInfoFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "zx_handle_t",
                            "name": "collectionToken"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferCollectionPropertiesFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryTypeBits"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bufferCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "createInfoIndex"
                        },
                        {
                            "type": "uint64_t",
                            "name": "sysmemPixelFormat"
                        },
                        {
                            "type": "VkFormatFeatureFlags",
                            "name": "formatFeatures"
                        },
                        {
                            "type": "VkSysmemColorSpaceFUCHSIA",
                            "name": "sysmemColorSpaceIndex"
                        },
                        {
                            "type": "VkComponentMapping",
                            "name": "samplerYcbcrConversionComponents"
                        },
                        {
                            "type": "VkSamplerYcbcrModelConversion",
                            "name": "suggestedYcbcrModel"
                        },
                        {
                            "type": "VkSamplerYcbcrRange",
                            "name": "suggestedYcbcrRange"
                        },
                        {
                            "type": "VkChromaLocation",
                            "name": "suggestedXChromaOffset"
                        },
                        {
                            "type": "VkChromaLocation",
                            "name": "suggestedYChromaOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferConstraintsInfoFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBufferCreateInfo",
                            "name": "createInfo"
                        },
                        {
                            "@optional": "true",
                            "type": "VkFormatFeatureFlags",
                            "name": "requiredFormatFeatures"
                        },
                        {
                            "type": "VkBufferCollectionConstraintsInfoFUCHSIA",
                            "name": "bufferCollectionConstraints"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkSysmemColorSpaceFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "colorSpace"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageFormatConstraintsInfoFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageCreateInfo",
                            "name": "imageCreateInfo"
                        },
                        {
                            "type": "VkFormatFeatureFlags",
                            "name": "requiredFormatFeatures"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageFormatConstraintsFlagsFUCHSIA",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint64_t",
                            "name": "sysmemPixelFormat"
                        },
                        {
                            "type": "uint32_t",
                            "name": "colorSpaceCount"
                        },
                        {
                            "type": "VkSysmemColorSpaceFUCHSIA",
                            "name": "pColorSpaces",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageConstraintsInfoFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "formatConstraintsCount"
                        },
                        {
                            "@len": "formatConstraintsCount",
                            "type": "VkImageFormatConstraintsInfoFUCHSIA",
                            "name": "pFormatConstraints",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBufferCollectionConstraintsInfoFUCHSIA",
                            "name": "bufferCollectionConstraints"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageConstraintsInfoFlagsFUCHSIA",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkBufferCollectionConstraintsInfoFUCHSIA",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "minBufferCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxBufferCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "minBufferCountForCamping"
                        },
                        {
                            "type": "uint32_t",
                            "name": "minBufferCountForDedicatedSlack"
                        },
                        {
                            "type": "uint32_t",
                            "name": "minBufferCountForSharedSlack"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "formatRgba10x6WithoutYCbCrSampler"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFormatProperties3",
                    "@returnedonly": "true",
                    "@structextends": "VkFormatProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "type": "VkFormatFeatureFlags2",
                            "name": "linearTilingFeatures"
                        },
                        {
                            "@optional": "true",
                            "type": "VkFormatFeatureFlags2",
                            "name": "optimalTilingFeatures"
                        },
                        {
                            "@optional": "true",
                            "type": "VkFormatFeatureFlags2",
                            "name": "bufferFeatures"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkFormatProperties3KHR",
                    "@alias": "VkFormatProperties3"
                },
                {
                    "@category": "struct",
                    "@name": "VkDrmFormatModifierPropertiesList2EXT",
                    "@returnedonly": "true",
                    "@structextends": "VkFormatProperties2",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "drmFormatModifierCount"
                        },
                        {
                            "@optional": "true,false",
                            "@len": "drmFormatModifierCount",
                            "type": "VkDrmFormatModifierProperties2EXT",
                            "name": "pDrmFormatModifierProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkDrmFormatModifierProperties2EXT",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "type": "uint64_t",
                            "name": "drmFormatModifier"
                        },
                        {
                            "type": "uint32_t",
                            "name": "drmFormatModifierPlaneCount"
                        },
                        {
                            "type": "VkFormatFeatureFlags2",
                            "name": "drmFormatModifierTilingFeatures"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAndroidHardwareBufferFormatProperties2ANDROID",
                    "@structextends": "VkAndroidHardwareBufferPropertiesANDROID",
                    "@returnedonly": "true",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "uint64_t",
                            "name": "externalFormat"
                        },
                        {
                            "type": "VkFormatFeatureFlags2",
                            "name": "formatFeatures"
                        },
                        {
                            "type": "VkComponentMapping",
                            "name": "samplerYcbcrConversionComponents"
                        },
                        {
                            "type": "VkSamplerYcbcrModelConversion",
                            "name": "suggestedYcbcrModel"
                        },
                        {
                            "type": "VkSamplerYcbcrRange",
                            "name": "suggestedYcbcrRange"
                        },
                        {
                            "type": "VkChromaLocation",
                            "name": "suggestedXChromaOffset"
                        },
                        {
                            "type": "VkChromaLocation",
                            "name": "suggestedYChromaOffset"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineRenderingCreateInfo",
                    "@structextends": "VkGraphicsPipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewMask"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "colorAttachmentCount"
                        },
                        {
                            "@len": "colorAttachmentCount",
                            "type": "VkFormat",
                            "name": "pColorAttachmentFormats",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFormat",
                            "name": "depthAttachmentFormat"
                        },
                        {
                            "type": "VkFormat",
                            "name": "stencilAttachmentFormat"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPipelineRenderingCreateInfoKHR",
                    "@alias": "VkPipelineRenderingCreateInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderingInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDERING_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkRenderingFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkRect2D",
                            "name": "renderArea"
                        },
                        {
                            "type": "uint32_t",
                            "name": "layerCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewMask"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "colorAttachmentCount"
                        },
                        {
                            "@len": "colorAttachmentCount",
                            "type": "VkRenderingAttachmentInfo",
                            "name": "pColorAttachments",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkRenderingAttachmentInfo",
                            "name": "pDepthAttachment",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkRenderingAttachmentInfo",
                            "name": "pStencilAttachment",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderingInfoKHR",
                    "@alias": "VkRenderingInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderingAttachmentInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageView",
                            "name": "imageView"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "imageLayout"
                        },
                        {
                            "@optional": "true",
                            "type": "VkResolveModeFlagBits",
                            "name": "resolveMode"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageView",
                            "name": "resolveImageView"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "resolveImageLayout"
                        },
                        {
                            "type": "VkAttachmentLoadOp",
                            "name": "loadOp"
                        },
                        {
                            "type": "VkAttachmentStoreOp",
                            "name": "storeOp"
                        },
                        {
                            "type": "VkClearValue",
                            "name": "clearValue"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderingAttachmentInfoKHR",
                    "@alias": "VkRenderingAttachmentInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderingFragmentShadingRateAttachmentInfoKHR",
                    "@structextends": "VkRenderingInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageView",
                            "name": "imageView"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "imageLayout"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "shadingRateAttachmentTexelSize"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkRenderingFragmentDensityMapAttachmentInfoEXT",
                    "@structextends": "VkRenderingInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageView",
                            "name": "imageView"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "imageLayout"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDynamicRenderingFeatures",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "dynamicRendering"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceDynamicRenderingFeaturesKHR",
                    "@alias": "VkPhysicalDeviceDynamicRenderingFeatures"
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandBufferInheritanceRenderingInfo",
                    "@structextends": "VkCommandBufferInheritanceInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkRenderingFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewMask"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "colorAttachmentCount"
                        },
                        {
                            "@len": "colorAttachmentCount",
                            "type": "VkFormat",
                            "name": "pColorAttachmentFormats",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFormat",
                            "name": "depthAttachmentFormat"
                        },
                        {
                            "type": "VkFormat",
                            "name": "stencilAttachmentFormat"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSampleCountFlagBits",
                            "name": "rasterizationSamples"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkCommandBufferInheritanceRenderingInfoKHR",
                    "@alias": "VkCommandBufferInheritanceRenderingInfo"
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentSampleCountInfoAMD",
                    "@structextends": "VkCommandBufferInheritanceInfo,VkGraphicsPipelineCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "colorAttachmentCount"
                        },
                        {
                            "@optional": "false,true",
                            "@len": "colorAttachmentCount",
                            "type": "VkSampleCountFlagBits",
                            "name": "pColorAttachmentSamples",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSampleCountFlagBits",
                            "name": "depthStencilAttachmentSamples"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkAttachmentSampleCountInfoNV",
                    "@alias": "VkAttachmentSampleCountInfoAMD"
                },
                {
                    "@category": "struct",
                    "@name": "VkMultiviewPerViewAttributesInfoNVX",
                    "@structextends": "VkCommandBufferInheritanceInfo,VkGraphicsPipelineCreateInfo,VkRenderingInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "perViewAttributes"
                        },
                        {
                            "type": "VkBool32",
                            "name": "perViewAttributesPositionXOnly"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceImageViewMinLodFeaturesEXT",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "minLod"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkImageViewMinLodCreateInfoEXT",
                    "@structextends": "VkImageViewCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "float",
                            "name": "minLod"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rasterizationOrderColorAttachmentAccess"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rasterizationOrderDepthAttachmentAccess"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rasterizationOrderStencilAttachmentAccess"
                        }
                    ]
                },
                {
                    "@category": "struct",
                    "@name": "VkPhysicalDeviceLinearColorAttachmentFeaturesNV",
                    "@structextends": "VkPhysicalDeviceFeatures2,VkDeviceCreateInfo",
                    "member": [
                        {
                            "@values": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV",
                            "type": "VkStructureType",
                            "name": "sType"
                        },
                        {
                            "@optional": "true",
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pNext",
                            "#text": "*"
                        },
                        {
                            "type": "VkBool32",
                            "name": "linearColorAttachment"
                        }
                    ]
                }
            ],
            "comment": [
                "WSI extensions",
                "In the current header structure, each platform's interfaces\n                are confined to a platform-specific header (vulkan_xlib.h,\n                vulkan_win32.h, etc.). These headers are not self-contained,\n                and should not include native headers (X11/Xlib.h,\n                windows.h, etc.). Code should either include vulkan.h after\n                defining the appropriate VK_USE_PLATFORM_platform\n                macros, or include the required native headers prior to\n                explicitly including the corresponding platform header.\n\n                To accomplish this, the dependencies of native types require\n                native headers, but the XML defines the content for those\n                native headers as empty. The actual native header includes\n                can be restored by modifying the native header tags above\n                to #include the header file in the 'name' attribute.",
                "Basic C types, pulled in via vk_platform.h",
                "Bitmask types",
                "WSI extensions",
                "Video Core extension",
                "Video Decode Core extension",
                "Video Decode H.264 extension",
                "Video Decode H.265 extension",
                "Video Encode Core extension",
                "Video Encode H.264 extension",
                "Video Encode H.265 extension",
                "Types which can be void pointers or class pointers, selected at compile time",
                "WSI extensions",
                "Video extensions",
                "Types generated from corresponding enums tags below",
                "Extensions",
                "WSI extensions",
                "Enumerated types in the header, but not used by the API",
                "Video Core extensions",
                "Video Decode extensions",
                "Video H.264 Decode extensions",
                "Video H.265 Decode extensions",
                "Video Encode extensions",
                "Video H.264 Encode extensions",
                "Video H.265 Encode extensions",
                "The PFN_vk*Function types are used by VkAllocationCallbacks below",
                "The PFN_vkVoidFunction type are used by VkGet*ProcAddr below",
                "The PFN_vkDebugReportCallbackEXT type are used by the DEBUG_REPORT extension",
                "The PFN_vkDebugUtilsMessengerCallbackEXT type are used by the VK_EXT_debug_utils extension",
                "The PFN_vkDeviceMemoryReportCallbackEXT type is used by the VK_EXT_device_memory_report extension",
                "Struct types",
                "WSI extensions",
                "Video Decode Codec Standard specific structures"
            ]
        },
        "enums": [
            {
                "@name": "API Constants",
                "@comment": "Vulkan hardcoded constants - not an enumerated type, part of the header boilerplate",
                "enum": [
                    {
                        "@type": "uint32_t",
                        "@value": "256",
                        "@name": "VK_MAX_PHYSICAL_DEVICE_NAME_SIZE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "16",
                        "@name": "VK_UUID_SIZE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "8",
                        "@name": "VK_LUID_SIZE"
                    },
                    {
                        "@name": "VK_LUID_SIZE_KHR",
                        "@alias": "VK_LUID_SIZE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "256",
                        "@name": "VK_MAX_EXTENSION_NAME_SIZE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "256",
                        "@name": "VK_MAX_DESCRIPTION_SIZE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "32",
                        "@name": "VK_MAX_MEMORY_TYPES"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "16",
                        "@name": "VK_MAX_MEMORY_HEAPS",
                        "@comment": "The maximum number of unique memory heaps, each of which supporting 1 or more memory types"
                    },
                    {
                        "@type": "float",
                        "@value": "1000.0f",
                        "@name": "VK_LOD_CLAMP_NONE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "(~0U)",
                        "@name": "VK_REMAINING_MIP_LEVELS"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "(~0U)",
                        "@name": "VK_REMAINING_ARRAY_LAYERS"
                    },
                    {
                        "@type": "uint64_t",
                        "@value": "(~0ULL)",
                        "@name": "VK_WHOLE_SIZE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "(~0U)",
                        "@name": "VK_ATTACHMENT_UNUSED"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "1",
                        "@name": "VK_TRUE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "0",
                        "@name": "VK_FALSE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "(~0U)",
                        "@name": "VK_QUEUE_FAMILY_IGNORED"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "(~0U-1)",
                        "@name": "VK_QUEUE_FAMILY_EXTERNAL"
                    },
                    {
                        "@name": "VK_QUEUE_FAMILY_EXTERNAL_KHR",
                        "@alias": "VK_QUEUE_FAMILY_EXTERNAL"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "(~0U-2)",
                        "@name": "VK_QUEUE_FAMILY_FOREIGN_EXT"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "(~0U)",
                        "@name": "VK_SUBPASS_EXTERNAL"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "32",
                        "@name": "VK_MAX_DEVICE_GROUP_SIZE"
                    },
                    {
                        "@name": "VK_MAX_DEVICE_GROUP_SIZE_KHR",
                        "@alias": "VK_MAX_DEVICE_GROUP_SIZE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "256",
                        "@name": "VK_MAX_DRIVER_NAME_SIZE"
                    },
                    {
                        "@name": "VK_MAX_DRIVER_NAME_SIZE_KHR",
                        "@alias": "VK_MAX_DRIVER_NAME_SIZE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "256",
                        "@name": "VK_MAX_DRIVER_INFO_SIZE"
                    },
                    {
                        "@name": "VK_MAX_DRIVER_INFO_SIZE_KHR",
                        "@alias": "VK_MAX_DRIVER_INFO_SIZE"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "(~0U)",
                        "@name": "VK_SHADER_UNUSED_KHR"
                    },
                    {
                        "@name": "VK_SHADER_UNUSED_NV",
                        "@alias": "VK_SHADER_UNUSED_KHR"
                    },
                    {
                        "@type": "uint32_t",
                        "@value": "16",
                        "@name": "VK_MAX_GLOBAL_PRIORITY_SIZE_KHR"
                    },
                    {
                        "@name": "VK_MAX_GLOBAL_PRIORITY_SIZE_EXT",
                        "@alias": "VK_MAX_GLOBAL_PRIORITY_SIZE_KHR"
                    }
                ]
            },
            {
                "@name": "VkImageLayout",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_IMAGE_LAYOUT_UNDEFINED",
                        "@comment": "Implicit layout an image is when its contents are undefined due to various reasons (e.g. right after creation)"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_IMAGE_LAYOUT_GENERAL",
                        "@comment": "General layout when image can be used for any kind of access"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL",
                        "@comment": "Optimal layout when image is only used for color attachment read/write"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL",
                        "@comment": "Optimal layout when image is only used for depth/stencil attachment read/write"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL",
                        "@comment": "Optimal layout when image is used for read only depth/stencil attachment and shader access"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL",
                        "@comment": "Optimal layout when image is used for read only shader access"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL",
                        "@comment": "Optimal layout when image is used only as source of transfer operations"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL",
                        "@comment": "Optimal layout when image is used only as destination of transfer operations"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_IMAGE_LAYOUT_PREINITIALIZED",
                        "@comment": "Initial layout used when the data is populated by the CPU"
                    }
                ]
            },
            {
                "@name": "VkAttachmentLoadOp",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_ATTACHMENT_LOAD_OP_LOAD"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_ATTACHMENT_LOAD_OP_CLEAR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_ATTACHMENT_LOAD_OP_DONT_CARE"
                    }
                ]
            },
            {
                "@name": "VkAttachmentStoreOp",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_ATTACHMENT_STORE_OP_STORE"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_ATTACHMENT_STORE_OP_DONT_CARE"
                    }
                ]
            },
            {
                "@name": "VkImageType",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_IMAGE_TYPE_1D"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_IMAGE_TYPE_2D"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_IMAGE_TYPE_3D"
                    }
                ]
            },
            {
                "@name": "VkImageTiling",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_IMAGE_TILING_OPTIMAL"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_IMAGE_TILING_LINEAR"
                    }
                ]
            },
            {
                "@name": "VkImageViewType",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_IMAGE_VIEW_TYPE_1D"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_IMAGE_VIEW_TYPE_2D"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_IMAGE_VIEW_TYPE_3D"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_IMAGE_VIEW_TYPE_CUBE"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_IMAGE_VIEW_TYPE_1D_ARRAY"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_IMAGE_VIEW_TYPE_2D_ARRAY"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_IMAGE_VIEW_TYPE_CUBE_ARRAY"
                    }
                ]
            },
            {
                "@name": "VkCommandBufferLevel",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_COMMAND_BUFFER_LEVEL_PRIMARY"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_COMMAND_BUFFER_LEVEL_SECONDARY"
                    }
                ]
            },
            {
                "@name": "VkComponentSwizzle",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_COMPONENT_SWIZZLE_IDENTITY"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_COMPONENT_SWIZZLE_ZERO"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_COMPONENT_SWIZZLE_ONE"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_COMPONENT_SWIZZLE_R"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_COMPONENT_SWIZZLE_G"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_COMPONENT_SWIZZLE_B"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_COMPONENT_SWIZZLE_A"
                    }
                ]
            },
            {
                "@name": "VkDescriptorType",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_DESCRIPTOR_TYPE_SAMPLER"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_DESCRIPTOR_TYPE_STORAGE_IMAGE"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT"
                    }
                ]
            },
            {
                "@name": "VkQueryType",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_QUERY_TYPE_OCCLUSION"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_QUERY_TYPE_PIPELINE_STATISTICS",
                        "@comment": "Optional"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_QUERY_TYPE_TIMESTAMP"
                    }
                ]
            },
            {
                "@name": "VkBorderColor",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_BORDER_COLOR_INT_TRANSPARENT_BLACK"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_BORDER_COLOR_INT_OPAQUE_BLACK"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_BORDER_COLOR_INT_OPAQUE_WHITE"
                    }
                ]
            },
            {
                "@name": "VkPipelineBindPoint",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PIPELINE_BIND_POINT_GRAPHICS"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PIPELINE_BIND_POINT_COMPUTE"
                    }
                ]
            },
            {
                "@name": "VkPipelineCacheHeaderVersion",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "1",
                        "@name": "VK_PIPELINE_CACHE_HEADER_VERSION_ONE"
                    }
                ]
            },
            {
                "@name": "VkPipelineCacheCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkPrimitiveTopology",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_POINT_LIST"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_LINE_LIST"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_LINE_STRIP"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_PRIMITIVE_TOPOLOGY_PATCH_LIST"
                    }
                ]
            },
            {
                "@name": "VkSharingMode",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SHARING_MODE_EXCLUSIVE"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SHARING_MODE_CONCURRENT"
                    }
                ]
            },
            {
                "@name": "VkIndexType",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_INDEX_TYPE_UINT16"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_INDEX_TYPE_UINT32"
                    }
                ]
            },
            {
                "@name": "VkFilter",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_FILTER_NEAREST"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_FILTER_LINEAR"
                    }
                ]
            },
            {
                "@name": "VkSamplerMipmapMode",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SAMPLER_MIPMAP_MODE_NEAREST",
                        "@comment": "Choose nearest mip level"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SAMPLER_MIPMAP_MODE_LINEAR",
                        "@comment": "Linear filter between mip levels"
                    }
                ]
            },
            {
                "@name": "VkSamplerAddressMode",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SAMPLER_ADDRESS_MODE_REPEAT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER"
                    }
                ],
                "comment": "value=\"4\" reserved for VK_KHR_sampler_mirror_clamp_to_edge\n                enum VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE; do not\n                alias!"
            },
            {
                "@name": "VkCompareOp",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_COMPARE_OP_NEVER"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_COMPARE_OP_LESS"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_COMPARE_OP_EQUAL"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_COMPARE_OP_LESS_OR_EQUAL"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_COMPARE_OP_GREATER"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_COMPARE_OP_NOT_EQUAL"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_COMPARE_OP_GREATER_OR_EQUAL"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_COMPARE_OP_ALWAYS"
                    }
                ]
            },
            {
                "@name": "VkPolygonMode",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_POLYGON_MODE_FILL"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_POLYGON_MODE_LINE"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_POLYGON_MODE_POINT"
                    }
                ]
            },
            {
                "@name": "VkFrontFace",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_FRONT_FACE_COUNTER_CLOCKWISE"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_FRONT_FACE_CLOCKWISE"
                    }
                ]
            },
            {
                "@name": "VkBlendFactor",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_BLEND_FACTOR_ZERO"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_BLEND_FACTOR_ONE"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_BLEND_FACTOR_SRC_COLOR"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_BLEND_FACTOR_DST_COLOR"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_BLEND_FACTOR_SRC_ALPHA"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_BLEND_FACTOR_DST_ALPHA"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_BLEND_FACTOR_CONSTANT_COLOR"
                    },
                    {
                        "@value": "11",
                        "@name": "VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR"
                    },
                    {
                        "@value": "12",
                        "@name": "VK_BLEND_FACTOR_CONSTANT_ALPHA"
                    },
                    {
                        "@value": "13",
                        "@name": "VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA"
                    },
                    {
                        "@value": "14",
                        "@name": "VK_BLEND_FACTOR_SRC_ALPHA_SATURATE"
                    },
                    {
                        "@value": "15",
                        "@name": "VK_BLEND_FACTOR_SRC1_COLOR"
                    },
                    {
                        "@value": "16",
                        "@name": "VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR"
                    },
                    {
                        "@value": "17",
                        "@name": "VK_BLEND_FACTOR_SRC1_ALPHA"
                    },
                    {
                        "@value": "18",
                        "@name": "VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA"
                    }
                ]
            },
            {
                "@name": "VkBlendOp",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_BLEND_OP_ADD"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_BLEND_OP_SUBTRACT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_BLEND_OP_REVERSE_SUBTRACT"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_BLEND_OP_MIN"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_BLEND_OP_MAX"
                    }
                ]
            },
            {
                "@name": "VkStencilOp",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_STENCIL_OP_KEEP"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_STENCIL_OP_ZERO"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_STENCIL_OP_REPLACE"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_STENCIL_OP_INCREMENT_AND_CLAMP"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_STENCIL_OP_DECREMENT_AND_CLAMP"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_STENCIL_OP_INVERT"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_STENCIL_OP_INCREMENT_AND_WRAP"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_STENCIL_OP_DECREMENT_AND_WRAP"
                    }
                ]
            },
            {
                "@name": "VkLogicOp",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_LOGIC_OP_CLEAR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_LOGIC_OP_AND"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_LOGIC_OP_AND_REVERSE"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_LOGIC_OP_COPY"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_LOGIC_OP_AND_INVERTED"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_LOGIC_OP_NO_OP"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_LOGIC_OP_XOR"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_LOGIC_OP_OR"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_LOGIC_OP_NOR"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_LOGIC_OP_EQUIVALENT"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_LOGIC_OP_INVERT"
                    },
                    {
                        "@value": "11",
                        "@name": "VK_LOGIC_OP_OR_REVERSE"
                    },
                    {
                        "@value": "12",
                        "@name": "VK_LOGIC_OP_COPY_INVERTED"
                    },
                    {
                        "@value": "13",
                        "@name": "VK_LOGIC_OP_OR_INVERTED"
                    },
                    {
                        "@value": "14",
                        "@name": "VK_LOGIC_OP_NAND"
                    },
                    {
                        "@value": "15",
                        "@name": "VK_LOGIC_OP_SET"
                    }
                ]
            },
            {
                "@name": "VkInternalAllocationType",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE"
                    }
                ]
            },
            {
                "@name": "VkSystemAllocationScope",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SYSTEM_ALLOCATION_SCOPE_COMMAND"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SYSTEM_ALLOCATION_SCOPE_OBJECT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_SYSTEM_ALLOCATION_SCOPE_CACHE"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_SYSTEM_ALLOCATION_SCOPE_DEVICE"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE"
                    }
                ]
            },
            {
                "@name": "VkPhysicalDeviceType",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PHYSICAL_DEVICE_TYPE_OTHER"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_PHYSICAL_DEVICE_TYPE_CPU"
                    }
                ]
            },
            {
                "@name": "VkVertexInputRate",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VERTEX_INPUT_RATE_VERTEX"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_VERTEX_INPUT_RATE_INSTANCE"
                    }
                ]
            },
            {
                "@name": "VkFormat",
                "@type": "enum",
                "@comment": "Vulkan format definitions",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_FORMAT_UNDEFINED"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_FORMAT_R4G4_UNORM_PACK8"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_FORMAT_R4G4B4A4_UNORM_PACK16"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_FORMAT_B4G4R4A4_UNORM_PACK16"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_FORMAT_R5G6B5_UNORM_PACK16"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_FORMAT_B5G6R5_UNORM_PACK16"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_FORMAT_R5G5B5A1_UNORM_PACK16"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_FORMAT_B5G5R5A1_UNORM_PACK16"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_FORMAT_A1R5G5B5_UNORM_PACK16"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_FORMAT_R8_UNORM"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_FORMAT_R8_SNORM"
                    },
                    {
                        "@value": "11",
                        "@name": "VK_FORMAT_R8_USCALED"
                    },
                    {
                        "@value": "12",
                        "@name": "VK_FORMAT_R8_SSCALED"
                    },
                    {
                        "@value": "13",
                        "@name": "VK_FORMAT_R8_UINT"
                    },
                    {
                        "@value": "14",
                        "@name": "VK_FORMAT_R8_SINT"
                    },
                    {
                        "@value": "15",
                        "@name": "VK_FORMAT_R8_SRGB"
                    },
                    {
                        "@value": "16",
                        "@name": "VK_FORMAT_R8G8_UNORM"
                    },
                    {
                        "@value": "17",
                        "@name": "VK_FORMAT_R8G8_SNORM"
                    },
                    {
                        "@value": "18",
                        "@name": "VK_FORMAT_R8G8_USCALED"
                    },
                    {
                        "@value": "19",
                        "@name": "VK_FORMAT_R8G8_SSCALED"
                    },
                    {
                        "@value": "20",
                        "@name": "VK_FORMAT_R8G8_UINT"
                    },
                    {
                        "@value": "21",
                        "@name": "VK_FORMAT_R8G8_SINT"
                    },
                    {
                        "@value": "22",
                        "@name": "VK_FORMAT_R8G8_SRGB"
                    },
                    {
                        "@value": "23",
                        "@name": "VK_FORMAT_R8G8B8_UNORM"
                    },
                    {
                        "@value": "24",
                        "@name": "VK_FORMAT_R8G8B8_SNORM"
                    },
                    {
                        "@value": "25",
                        "@name": "VK_FORMAT_R8G8B8_USCALED"
                    },
                    {
                        "@value": "26",
                        "@name": "VK_FORMAT_R8G8B8_SSCALED"
                    },
                    {
                        "@value": "27",
                        "@name": "VK_FORMAT_R8G8B8_UINT"
                    },
                    {
                        "@value": "28",
                        "@name": "VK_FORMAT_R8G8B8_SINT"
                    },
                    {
                        "@value": "29",
                        "@name": "VK_FORMAT_R8G8B8_SRGB"
                    },
                    {
                        "@value": "30",
                        "@name": "VK_FORMAT_B8G8R8_UNORM"
                    },
                    {
                        "@value": "31",
                        "@name": "VK_FORMAT_B8G8R8_SNORM"
                    },
                    {
                        "@value": "32",
                        "@name": "VK_FORMAT_B8G8R8_USCALED"
                    },
                    {
                        "@value": "33",
                        "@name": "VK_FORMAT_B8G8R8_SSCALED"
                    },
                    {
                        "@value": "34",
                        "@name": "VK_FORMAT_B8G8R8_UINT"
                    },
                    {
                        "@value": "35",
                        "@name": "VK_FORMAT_B8G8R8_SINT"
                    },
                    {
                        "@value": "36",
                        "@name": "VK_FORMAT_B8G8R8_SRGB"
                    },
                    {
                        "@value": "37",
                        "@name": "VK_FORMAT_R8G8B8A8_UNORM"
                    },
                    {
                        "@value": "38",
                        "@name": "VK_FORMAT_R8G8B8A8_SNORM"
                    },
                    {
                        "@value": "39",
                        "@name": "VK_FORMAT_R8G8B8A8_USCALED"
                    },
                    {
                        "@value": "40",
                        "@name": "VK_FORMAT_R8G8B8A8_SSCALED"
                    },
                    {
                        "@value": "41",
                        "@name": "VK_FORMAT_R8G8B8A8_UINT"
                    },
                    {
                        "@value": "42",
                        "@name": "VK_FORMAT_R8G8B8A8_SINT"
                    },
                    {
                        "@value": "43",
                        "@name": "VK_FORMAT_R8G8B8A8_SRGB"
                    },
                    {
                        "@value": "44",
                        "@name": "VK_FORMAT_B8G8R8A8_UNORM"
                    },
                    {
                        "@value": "45",
                        "@name": "VK_FORMAT_B8G8R8A8_SNORM"
                    },
                    {
                        "@value": "46",
                        "@name": "VK_FORMAT_B8G8R8A8_USCALED"
                    },
                    {
                        "@value": "47",
                        "@name": "VK_FORMAT_B8G8R8A8_SSCALED"
                    },
                    {
                        "@value": "48",
                        "@name": "VK_FORMAT_B8G8R8A8_UINT"
                    },
                    {
                        "@value": "49",
                        "@name": "VK_FORMAT_B8G8R8A8_SINT"
                    },
                    {
                        "@value": "50",
                        "@name": "VK_FORMAT_B8G8R8A8_SRGB"
                    },
                    {
                        "@value": "51",
                        "@name": "VK_FORMAT_A8B8G8R8_UNORM_PACK32"
                    },
                    {
                        "@value": "52",
                        "@name": "VK_FORMAT_A8B8G8R8_SNORM_PACK32"
                    },
                    {
                        "@value": "53",
                        "@name": "VK_FORMAT_A8B8G8R8_USCALED_PACK32"
                    },
                    {
                        "@value": "54",
                        "@name": "VK_FORMAT_A8B8G8R8_SSCALED_PACK32"
                    },
                    {
                        "@value": "55",
                        "@name": "VK_FORMAT_A8B8G8R8_UINT_PACK32"
                    },
                    {
                        "@value": "56",
                        "@name": "VK_FORMAT_A8B8G8R8_SINT_PACK32"
                    },
                    {
                        "@value": "57",
                        "@name": "VK_FORMAT_A8B8G8R8_SRGB_PACK32"
                    },
                    {
                        "@value": "58",
                        "@name": "VK_FORMAT_A2R10G10B10_UNORM_PACK32"
                    },
                    {
                        "@value": "59",
                        "@name": "VK_FORMAT_A2R10G10B10_SNORM_PACK32"
                    },
                    {
                        "@value": "60",
                        "@name": "VK_FORMAT_A2R10G10B10_USCALED_PACK32"
                    },
                    {
                        "@value": "61",
                        "@name": "VK_FORMAT_A2R10G10B10_SSCALED_PACK32"
                    },
                    {
                        "@value": "62",
                        "@name": "VK_FORMAT_A2R10G10B10_UINT_PACK32"
                    },
                    {
                        "@value": "63",
                        "@name": "VK_FORMAT_A2R10G10B10_SINT_PACK32"
                    },
                    {
                        "@value": "64",
                        "@name": "VK_FORMAT_A2B10G10R10_UNORM_PACK32"
                    },
                    {
                        "@value": "65",
                        "@name": "VK_FORMAT_A2B10G10R10_SNORM_PACK32"
                    },
                    {
                        "@value": "66",
                        "@name": "VK_FORMAT_A2B10G10R10_USCALED_PACK32"
                    },
                    {
                        "@value": "67",
                        "@name": "VK_FORMAT_A2B10G10R10_SSCALED_PACK32"
                    },
                    {
                        "@value": "68",
                        "@name": "VK_FORMAT_A2B10G10R10_UINT_PACK32"
                    },
                    {
                        "@value": "69",
                        "@name": "VK_FORMAT_A2B10G10R10_SINT_PACK32"
                    },
                    {
                        "@value": "70",
                        "@name": "VK_FORMAT_R16_UNORM"
                    },
                    {
                        "@value": "71",
                        "@name": "VK_FORMAT_R16_SNORM"
                    },
                    {
                        "@value": "72",
                        "@name": "VK_FORMAT_R16_USCALED"
                    },
                    {
                        "@value": "73",
                        "@name": "VK_FORMAT_R16_SSCALED"
                    },
                    {
                        "@value": "74",
                        "@name": "VK_FORMAT_R16_UINT"
                    },
                    {
                        "@value": "75",
                        "@name": "VK_FORMAT_R16_SINT"
                    },
                    {
                        "@value": "76",
                        "@name": "VK_FORMAT_R16_SFLOAT"
                    },
                    {
                        "@value": "77",
                        "@name": "VK_FORMAT_R16G16_UNORM"
                    },
                    {
                        "@value": "78",
                        "@name": "VK_FORMAT_R16G16_SNORM"
                    },
                    {
                        "@value": "79",
                        "@name": "VK_FORMAT_R16G16_USCALED"
                    },
                    {
                        "@value": "80",
                        "@name": "VK_FORMAT_R16G16_SSCALED"
                    },
                    {
                        "@value": "81",
                        "@name": "VK_FORMAT_R16G16_UINT"
                    },
                    {
                        "@value": "82",
                        "@name": "VK_FORMAT_R16G16_SINT"
                    },
                    {
                        "@value": "83",
                        "@name": "VK_FORMAT_R16G16_SFLOAT"
                    },
                    {
                        "@value": "84",
                        "@name": "VK_FORMAT_R16G16B16_UNORM"
                    },
                    {
                        "@value": "85",
                        "@name": "VK_FORMAT_R16G16B16_SNORM"
                    },
                    {
                        "@value": "86",
                        "@name": "VK_FORMAT_R16G16B16_USCALED"
                    },
                    {
                        "@value": "87",
                        "@name": "VK_FORMAT_R16G16B16_SSCALED"
                    },
                    {
                        "@value": "88",
                        "@name": "VK_FORMAT_R16G16B16_UINT"
                    },
                    {
                        "@value": "89",
                        "@name": "VK_FORMAT_R16G16B16_SINT"
                    },
                    {
                        "@value": "90",
                        "@name": "VK_FORMAT_R16G16B16_SFLOAT"
                    },
                    {
                        "@value": "91",
                        "@name": "VK_FORMAT_R16G16B16A16_UNORM"
                    },
                    {
                        "@value": "92",
                        "@name": "VK_FORMAT_R16G16B16A16_SNORM"
                    },
                    {
                        "@value": "93",
                        "@name": "VK_FORMAT_R16G16B16A16_USCALED"
                    },
                    {
                        "@value": "94",
                        "@name": "VK_FORMAT_R16G16B16A16_SSCALED"
                    },
                    {
                        "@value": "95",
                        "@name": "VK_FORMAT_R16G16B16A16_UINT"
                    },
                    {
                        "@value": "96",
                        "@name": "VK_FORMAT_R16G16B16A16_SINT"
                    },
                    {
                        "@value": "97",
                        "@name": "VK_FORMAT_R16G16B16A16_SFLOAT"
                    },
                    {
                        "@value": "98",
                        "@name": "VK_FORMAT_R32_UINT"
                    },
                    {
                        "@value": "99",
                        "@name": "VK_FORMAT_R32_SINT"
                    },
                    {
                        "@value": "100",
                        "@name": "VK_FORMAT_R32_SFLOAT"
                    },
                    {
                        "@value": "101",
                        "@name": "VK_FORMAT_R32G32_UINT"
                    },
                    {
                        "@value": "102",
                        "@name": "VK_FORMAT_R32G32_SINT"
                    },
                    {
                        "@value": "103",
                        "@name": "VK_FORMAT_R32G32_SFLOAT"
                    },
                    {
                        "@value": "104",
                        "@name": "VK_FORMAT_R32G32B32_UINT"
                    },
                    {
                        "@value": "105",
                        "@name": "VK_FORMAT_R32G32B32_SINT"
                    },
                    {
                        "@value": "106",
                        "@name": "VK_FORMAT_R32G32B32_SFLOAT"
                    },
                    {
                        "@value": "107",
                        "@name": "VK_FORMAT_R32G32B32A32_UINT"
                    },
                    {
                        "@value": "108",
                        "@name": "VK_FORMAT_R32G32B32A32_SINT"
                    },
                    {
                        "@value": "109",
                        "@name": "VK_FORMAT_R32G32B32A32_SFLOAT"
                    },
                    {
                        "@value": "110",
                        "@name": "VK_FORMAT_R64_UINT"
                    },
                    {
                        "@value": "111",
                        "@name": "VK_FORMAT_R64_SINT"
                    },
                    {
                        "@value": "112",
                        "@name": "VK_FORMAT_R64_SFLOAT"
                    },
                    {
                        "@value": "113",
                        "@name": "VK_FORMAT_R64G64_UINT"
                    },
                    {
                        "@value": "114",
                        "@name": "VK_FORMAT_R64G64_SINT"
                    },
                    {
                        "@value": "115",
                        "@name": "VK_FORMAT_R64G64_SFLOAT"
                    },
                    {
                        "@value": "116",
                        "@name": "VK_FORMAT_R64G64B64_UINT"
                    },
                    {
                        "@value": "117",
                        "@name": "VK_FORMAT_R64G64B64_SINT"
                    },
                    {
                        "@value": "118",
                        "@name": "VK_FORMAT_R64G64B64_SFLOAT"
                    },
                    {
                        "@value": "119",
                        "@name": "VK_FORMAT_R64G64B64A64_UINT"
                    },
                    {
                        "@value": "120",
                        "@name": "VK_FORMAT_R64G64B64A64_SINT"
                    },
                    {
                        "@value": "121",
                        "@name": "VK_FORMAT_R64G64B64A64_SFLOAT"
                    },
                    {
                        "@value": "122",
                        "@name": "VK_FORMAT_B10G11R11_UFLOAT_PACK32"
                    },
                    {
                        "@value": "123",
                        "@name": "VK_FORMAT_E5B9G9R9_UFLOAT_PACK32"
                    },
                    {
                        "@value": "124",
                        "@name": "VK_FORMAT_D16_UNORM"
                    },
                    {
                        "@value": "125",
                        "@name": "VK_FORMAT_X8_D24_UNORM_PACK32"
                    },
                    {
                        "@value": "126",
                        "@name": "VK_FORMAT_D32_SFLOAT"
                    },
                    {
                        "@value": "127",
                        "@name": "VK_FORMAT_S8_UINT"
                    },
                    {
                        "@value": "128",
                        "@name": "VK_FORMAT_D16_UNORM_S8_UINT"
                    },
                    {
                        "@value": "129",
                        "@name": "VK_FORMAT_D24_UNORM_S8_UINT"
                    },
                    {
                        "@value": "130",
                        "@name": "VK_FORMAT_D32_SFLOAT_S8_UINT"
                    },
                    {
                        "@value": "131",
                        "@name": "VK_FORMAT_BC1_RGB_UNORM_BLOCK"
                    },
                    {
                        "@value": "132",
                        "@name": "VK_FORMAT_BC1_RGB_SRGB_BLOCK"
                    },
                    {
                        "@value": "133",
                        "@name": "VK_FORMAT_BC1_RGBA_UNORM_BLOCK"
                    },
                    {
                        "@value": "134",
                        "@name": "VK_FORMAT_BC1_RGBA_SRGB_BLOCK"
                    },
                    {
                        "@value": "135",
                        "@name": "VK_FORMAT_BC2_UNORM_BLOCK"
                    },
                    {
                        "@value": "136",
                        "@name": "VK_FORMAT_BC2_SRGB_BLOCK"
                    },
                    {
                        "@value": "137",
                        "@name": "VK_FORMAT_BC3_UNORM_BLOCK"
                    },
                    {
                        "@value": "138",
                        "@name": "VK_FORMAT_BC3_SRGB_BLOCK"
                    },
                    {
                        "@value": "139",
                        "@name": "VK_FORMAT_BC4_UNORM_BLOCK"
                    },
                    {
                        "@value": "140",
                        "@name": "VK_FORMAT_BC4_SNORM_BLOCK"
                    },
                    {
                        "@value": "141",
                        "@name": "VK_FORMAT_BC5_UNORM_BLOCK"
                    },
                    {
                        "@value": "142",
                        "@name": "VK_FORMAT_BC5_SNORM_BLOCK"
                    },
                    {
                        "@value": "143",
                        "@name": "VK_FORMAT_BC6H_UFLOAT_BLOCK"
                    },
                    {
                        "@value": "144",
                        "@name": "VK_FORMAT_BC6H_SFLOAT_BLOCK"
                    },
                    {
                        "@value": "145",
                        "@name": "VK_FORMAT_BC7_UNORM_BLOCK"
                    },
                    {
                        "@value": "146",
                        "@name": "VK_FORMAT_BC7_SRGB_BLOCK"
                    },
                    {
                        "@value": "147",
                        "@name": "VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK"
                    },
                    {
                        "@value": "148",
                        "@name": "VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK"
                    },
                    {
                        "@value": "149",
                        "@name": "VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK"
                    },
                    {
                        "@value": "150",
                        "@name": "VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK"
                    },
                    {
                        "@value": "151",
                        "@name": "VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK"
                    },
                    {
                        "@value": "152",
                        "@name": "VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK"
                    },
                    {
                        "@value": "153",
                        "@name": "VK_FORMAT_EAC_R11_UNORM_BLOCK"
                    },
                    {
                        "@value": "154",
                        "@name": "VK_FORMAT_EAC_R11_SNORM_BLOCK"
                    },
                    {
                        "@value": "155",
                        "@name": "VK_FORMAT_EAC_R11G11_UNORM_BLOCK"
                    },
                    {
                        "@value": "156",
                        "@name": "VK_FORMAT_EAC_R11G11_SNORM_BLOCK"
                    },
                    {
                        "@value": "157",
                        "@name": "VK_FORMAT_ASTC_4x4_UNORM_BLOCK"
                    },
                    {
                        "@value": "158",
                        "@name": "VK_FORMAT_ASTC_4x4_SRGB_BLOCK"
                    },
                    {
                        "@value": "159",
                        "@name": "VK_FORMAT_ASTC_5x4_UNORM_BLOCK"
                    },
                    {
                        "@value": "160",
                        "@name": "VK_FORMAT_ASTC_5x4_SRGB_BLOCK"
                    },
                    {
                        "@value": "161",
                        "@name": "VK_FORMAT_ASTC_5x5_UNORM_BLOCK"
                    },
                    {
                        "@value": "162",
                        "@name": "VK_FORMAT_ASTC_5x5_SRGB_BLOCK"
                    },
                    {
                        "@value": "163",
                        "@name": "VK_FORMAT_ASTC_6x5_UNORM_BLOCK"
                    },
                    {
                        "@value": "164",
                        "@name": "VK_FORMAT_ASTC_6x5_SRGB_BLOCK"
                    },
                    {
                        "@value": "165",
                        "@name": "VK_FORMAT_ASTC_6x6_UNORM_BLOCK"
                    },
                    {
                        "@value": "166",
                        "@name": "VK_FORMAT_ASTC_6x6_SRGB_BLOCK"
                    },
                    {
                        "@value": "167",
                        "@name": "VK_FORMAT_ASTC_8x5_UNORM_BLOCK"
                    },
                    {
                        "@value": "168",
                        "@name": "VK_FORMAT_ASTC_8x5_SRGB_BLOCK"
                    },
                    {
                        "@value": "169",
                        "@name": "VK_FORMAT_ASTC_8x6_UNORM_BLOCK"
                    },
                    {
                        "@value": "170",
                        "@name": "VK_FORMAT_ASTC_8x6_SRGB_BLOCK"
                    },
                    {
                        "@value": "171",
                        "@name": "VK_FORMAT_ASTC_8x8_UNORM_BLOCK"
                    },
                    {
                        "@value": "172",
                        "@name": "VK_FORMAT_ASTC_8x8_SRGB_BLOCK"
                    },
                    {
                        "@value": "173",
                        "@name": "VK_FORMAT_ASTC_10x5_UNORM_BLOCK"
                    },
                    {
                        "@value": "174",
                        "@name": "VK_FORMAT_ASTC_10x5_SRGB_BLOCK"
                    },
                    {
                        "@value": "175",
                        "@name": "VK_FORMAT_ASTC_10x6_UNORM_BLOCK"
                    },
                    {
                        "@value": "176",
                        "@name": "VK_FORMAT_ASTC_10x6_SRGB_BLOCK"
                    },
                    {
                        "@value": "177",
                        "@name": "VK_FORMAT_ASTC_10x8_UNORM_BLOCK"
                    },
                    {
                        "@value": "178",
                        "@name": "VK_FORMAT_ASTC_10x8_SRGB_BLOCK"
                    },
                    {
                        "@value": "179",
                        "@name": "VK_FORMAT_ASTC_10x10_UNORM_BLOCK"
                    },
                    {
                        "@value": "180",
                        "@name": "VK_FORMAT_ASTC_10x10_SRGB_BLOCK"
                    },
                    {
                        "@value": "181",
                        "@name": "VK_FORMAT_ASTC_12x10_UNORM_BLOCK"
                    },
                    {
                        "@value": "182",
                        "@name": "VK_FORMAT_ASTC_12x10_SRGB_BLOCK"
                    },
                    {
                        "@value": "183",
                        "@name": "VK_FORMAT_ASTC_12x12_UNORM_BLOCK"
                    },
                    {
                        "@value": "184",
                        "@name": "VK_FORMAT_ASTC_12x12_SRGB_BLOCK"
                    }
                ]
            },
            {
                "@name": "VkStructureType",
                "@type": "enum",
                "@comment": "Structure type enumerant",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_STRUCTURE_TYPE_APPLICATION_INFO"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_STRUCTURE_TYPE_SUBMIT_INFO"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_STRUCTURE_TYPE_BIND_SPARSE_INFO"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_STRUCTURE_TYPE_FENCE_CREATE_INFO"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_STRUCTURE_TYPE_EVENT_CREATE_INFO"
                    },
                    {
                        "@value": "11",
                        "@name": "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO"
                    },
                    {
                        "@value": "12",
                        "@name": "VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO"
                    },
                    {
                        "@value": "13",
                        "@name": "VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO"
                    },
                    {
                        "@value": "14",
                        "@name": "VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO"
                    },
                    {
                        "@value": "15",
                        "@name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO"
                    },
                    {
                        "@value": "16",
                        "@name": "VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO"
                    },
                    {
                        "@value": "17",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO"
                    },
                    {
                        "@value": "18",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO"
                    },
                    {
                        "@value": "19",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO"
                    },
                    {
                        "@value": "20",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO"
                    },
                    {
                        "@value": "21",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO"
                    },
                    {
                        "@value": "22",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO"
                    },
                    {
                        "@value": "23",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO"
                    },
                    {
                        "@value": "24",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO"
                    },
                    {
                        "@value": "25",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO"
                    },
                    {
                        "@value": "26",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO"
                    },
                    {
                        "@value": "27",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO"
                    },
                    {
                        "@value": "28",
                        "@name": "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO"
                    },
                    {
                        "@value": "29",
                        "@name": "VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO"
                    },
                    {
                        "@value": "30",
                        "@name": "VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO"
                    },
                    {
                        "@value": "31",
                        "@name": "VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO"
                    },
                    {
                        "@value": "32",
                        "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO"
                    },
                    {
                        "@value": "33",
                        "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO"
                    },
                    {
                        "@value": "34",
                        "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO"
                    },
                    {
                        "@value": "35",
                        "@name": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET"
                    },
                    {
                        "@value": "36",
                        "@name": "VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET"
                    },
                    {
                        "@value": "37",
                        "@name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO"
                    },
                    {
                        "@value": "38",
                        "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO"
                    },
                    {
                        "@value": "39",
                        "@name": "VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO"
                    },
                    {
                        "@value": "40",
                        "@name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO"
                    },
                    {
                        "@value": "41",
                        "@name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO"
                    },
                    {
                        "@value": "42",
                        "@name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO"
                    },
                    {
                        "@value": "43",
                        "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO"
                    },
                    {
                        "@value": "44",
                        "@name": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER"
                    },
                    {
                        "@value": "45",
                        "@name": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER"
                    },
                    {
                        "@value": "46",
                        "@name": "VK_STRUCTURE_TYPE_MEMORY_BARRIER"
                    },
                    {
                        "@value": "47",
                        "@name": "VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO",
                        "@comment": "Reserved for internal use by the loader, layers, and ICDs"
                    },
                    {
                        "@value": "48",
                        "@name": "VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO",
                        "@comment": "Reserved for internal use by the loader, layers, and ICDs"
                    }
                ]
            },
            {
                "@name": "VkSubpassContents",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SUBPASS_CONTENTS_INLINE"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS"
                    }
                ]
            },
            {
                "@name": "VkResult",
                "@type": "enum",
                "@comment": "API result codes",
                "comment": [
                    "Return codes (positive values)",
                    "Error codes (negative values)"
                ],
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SUCCESS",
                        "@comment": "Command completed successfully"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_NOT_READY",
                        "@comment": "A fence or query has not yet completed"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_TIMEOUT",
                        "@comment": "A wait operation has not completed in the specified time"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_EVENT_SET",
                        "@comment": "An event is signaled"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_EVENT_RESET",
                        "@comment": "An event is unsignaled"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_INCOMPLETE",
                        "@comment": "A return array was too small for the result"
                    },
                    {
                        "@value": "-1",
                        "@name": "VK_ERROR_OUT_OF_HOST_MEMORY",
                        "@comment": "A host memory allocation has failed"
                    },
                    {
                        "@value": "-2",
                        "@name": "VK_ERROR_OUT_OF_DEVICE_MEMORY",
                        "@comment": "A device memory allocation has failed"
                    },
                    {
                        "@value": "-3",
                        "@name": "VK_ERROR_INITIALIZATION_FAILED",
                        "@comment": "Initialization of a object has failed"
                    },
                    {
                        "@value": "-4",
                        "@name": "VK_ERROR_DEVICE_LOST",
                        "@comment": "The logical device has been lost. See <<devsandqueues-lost-device>>"
                    },
                    {
                        "@value": "-5",
                        "@name": "VK_ERROR_MEMORY_MAP_FAILED",
                        "@comment": "Mapping of a memory object has failed"
                    },
                    {
                        "@value": "-6",
                        "@name": "VK_ERROR_LAYER_NOT_PRESENT",
                        "@comment": "Layer specified does not exist"
                    },
                    {
                        "@value": "-7",
                        "@name": "VK_ERROR_EXTENSION_NOT_PRESENT",
                        "@comment": "Extension specified does not exist"
                    },
                    {
                        "@value": "-8",
                        "@name": "VK_ERROR_FEATURE_NOT_PRESENT",
                        "@comment": "Requested feature is not available on this device"
                    },
                    {
                        "@value": "-9",
                        "@name": "VK_ERROR_INCOMPATIBLE_DRIVER",
                        "@comment": "Unable to find a Vulkan driver"
                    },
                    {
                        "@value": "-10",
                        "@name": "VK_ERROR_TOO_MANY_OBJECTS",
                        "@comment": "Too many objects of the type have already been created"
                    },
                    {
                        "@value": "-11",
                        "@name": "VK_ERROR_FORMAT_NOT_SUPPORTED",
                        "@comment": "Requested format is not supported on this device"
                    },
                    {
                        "@value": "-12",
                        "@name": "VK_ERROR_FRAGMENTED_POOL",
                        "@comment": "A requested pool allocation has failed due to fragmentation of the pool's memory"
                    },
                    {
                        "@value": "-13",
                        "@name": "VK_ERROR_UNKNOWN",
                        "@comment": "An unknown error has occurred, due to an implementation or application bug"
                    }
                ],
                "unused": {
                    "@start": "-14",
                    "@comment": "This is the next unused available error code (negative value)"
                }
            },
            {
                "@name": "VkDynamicState",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_DYNAMIC_STATE_VIEWPORT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_DYNAMIC_STATE_SCISSOR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_DYNAMIC_STATE_LINE_WIDTH"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_DYNAMIC_STATE_DEPTH_BIAS"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_DYNAMIC_STATE_BLEND_CONSTANTS"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_DYNAMIC_STATE_DEPTH_BOUNDS"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_DYNAMIC_STATE_STENCIL_WRITE_MASK"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_DYNAMIC_STATE_STENCIL_REFERENCE"
                    }
                ]
            },
            {
                "@name": "VkDescriptorUpdateTemplateType",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET",
                        "@comment": "Create descriptor update template for descriptor set updates"
                    }
                ]
            },
            {
                "@name": "VkObjectType",
                "@type": "enum",
                "@comment": "Enums to track objects of various types - also see objtypeenum attributes on type tags",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_OBJECT_TYPE_UNKNOWN"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_OBJECT_TYPE_INSTANCE"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_OBJECT_TYPE_PHYSICAL_DEVICE"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_OBJECT_TYPE_DEVICE"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_OBJECT_TYPE_QUEUE"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_OBJECT_TYPE_SEMAPHORE"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_OBJECT_TYPE_COMMAND_BUFFER"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_OBJECT_TYPE_FENCE"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_OBJECT_TYPE_DEVICE_MEMORY"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_OBJECT_TYPE_BUFFER"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_OBJECT_TYPE_IMAGE"
                    },
                    {
                        "@value": "11",
                        "@name": "VK_OBJECT_TYPE_EVENT"
                    },
                    {
                        "@value": "12",
                        "@name": "VK_OBJECT_TYPE_QUERY_POOL"
                    },
                    {
                        "@value": "13",
                        "@name": "VK_OBJECT_TYPE_BUFFER_VIEW"
                    },
                    {
                        "@value": "14",
                        "@name": "VK_OBJECT_TYPE_IMAGE_VIEW"
                    },
                    {
                        "@value": "15",
                        "@name": "VK_OBJECT_TYPE_SHADER_MODULE"
                    },
                    {
                        "@value": "16",
                        "@name": "VK_OBJECT_TYPE_PIPELINE_CACHE"
                    },
                    {
                        "@value": "17",
                        "@name": "VK_OBJECT_TYPE_PIPELINE_LAYOUT"
                    },
                    {
                        "@value": "18",
                        "@name": "VK_OBJECT_TYPE_RENDER_PASS"
                    },
                    {
                        "@value": "19",
                        "@name": "VK_OBJECT_TYPE_PIPELINE"
                    },
                    {
                        "@value": "20",
                        "@name": "VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT"
                    },
                    {
                        "@value": "21",
                        "@name": "VK_OBJECT_TYPE_SAMPLER"
                    },
                    {
                        "@value": "22",
                        "@name": "VK_OBJECT_TYPE_DESCRIPTOR_POOL"
                    },
                    {
                        "@value": "23",
                        "@name": "VK_OBJECT_TYPE_DESCRIPTOR_SET"
                    },
                    {
                        "@value": "24",
                        "@name": "VK_OBJECT_TYPE_FRAMEBUFFER"
                    },
                    {
                        "@value": "25",
                        "@name": "VK_OBJECT_TYPE_COMMAND_POOL"
                    }
                ]
            },
            {
                "@name": "VkQueueFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_QUEUE_GRAPHICS_BIT",
                        "@comment": "Queue supports graphics operations"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_QUEUE_COMPUTE_BIT",
                        "@comment": "Queue supports compute operations"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_QUEUE_TRANSFER_BIT",
                        "@comment": "Queue supports transfer operations"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_QUEUE_SPARSE_BINDING_BIT",
                        "@comment": "Queue supports sparse resource memory management operations"
                    }
                ]
            },
            {
                "@name": "VkCullModeFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_CULL_MODE_NONE"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_CULL_MODE_FRONT_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_CULL_MODE_BACK_BIT"
                    },
                    {
                        "@value": "0x00000003",
                        "@name": "VK_CULL_MODE_FRONT_AND_BACK"
                    }
                ]
            },
            {
                "@name": "VkRenderPassCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkDeviceQueueCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkMemoryPropertyFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT",
                        "@comment": "If otherwise stated, then allocate memory on device"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT",
                        "@comment": "Memory is mappable by host"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_MEMORY_PROPERTY_HOST_COHERENT_BIT",
                        "@comment": "Memory will have i/o coherency. If not set, application may need to use vkFlushMappedMemoryRanges and vkInvalidateMappedMemoryRanges to flush/invalidate host cache"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_MEMORY_PROPERTY_HOST_CACHED_BIT",
                        "@comment": "Memory will be cached by the host"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT",
                        "@comment": "Memory may be allocated by the driver when it is required"
                    }
                ]
            },
            {
                "@name": "VkMemoryHeapFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_MEMORY_HEAP_DEVICE_LOCAL_BIT",
                        "@comment": "If set, heap represents device memory"
                    }
                ]
            },
            {
                "@name": "VkAccessFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_ACCESS_INDIRECT_COMMAND_READ_BIT",
                        "@comment": "Controls coherency of indirect command reads"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_ACCESS_INDEX_READ_BIT",
                        "@comment": "Controls coherency of index reads"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT",
                        "@comment": "Controls coherency of vertex attribute reads"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_ACCESS_UNIFORM_READ_BIT",
                        "@comment": "Controls coherency of uniform buffer reads"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_ACCESS_INPUT_ATTACHMENT_READ_BIT",
                        "@comment": "Controls coherency of input attachment reads"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_ACCESS_SHADER_READ_BIT",
                        "@comment": "Controls coherency of shader reads"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_ACCESS_SHADER_WRITE_BIT",
                        "@comment": "Controls coherency of shader writes"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_ACCESS_COLOR_ATTACHMENT_READ_BIT",
                        "@comment": "Controls coherency of color attachment reads"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT",
                        "@comment": "Controls coherency of color attachment writes"
                    },
                    {
                        "@bitpos": "9",
                        "@name": "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT",
                        "@comment": "Controls coherency of depth/stencil attachment reads"
                    },
                    {
                        "@bitpos": "10",
                        "@name": "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT",
                        "@comment": "Controls coherency of depth/stencil attachment writes"
                    },
                    {
                        "@bitpos": "11",
                        "@name": "VK_ACCESS_TRANSFER_READ_BIT",
                        "@comment": "Controls coherency of transfer reads"
                    },
                    {
                        "@bitpos": "12",
                        "@name": "VK_ACCESS_TRANSFER_WRITE_BIT",
                        "@comment": "Controls coherency of transfer writes"
                    },
                    {
                        "@bitpos": "13",
                        "@name": "VK_ACCESS_HOST_READ_BIT",
                        "@comment": "Controls coherency of host reads"
                    },
                    {
                        "@bitpos": "14",
                        "@name": "VK_ACCESS_HOST_WRITE_BIT",
                        "@comment": "Controls coherency of host writes"
                    },
                    {
                        "@bitpos": "15",
                        "@name": "VK_ACCESS_MEMORY_READ_BIT",
                        "@comment": "Controls coherency of memory reads"
                    },
                    {
                        "@bitpos": "16",
                        "@name": "VK_ACCESS_MEMORY_WRITE_BIT",
                        "@comment": "Controls coherency of memory writes"
                    }
                ]
            },
            {
                "@name": "VkBufferUsageFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_BUFFER_USAGE_TRANSFER_SRC_BIT",
                        "@comment": "Can be used as a source of transfer operations"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_BUFFER_USAGE_TRANSFER_DST_BIT",
                        "@comment": "Can be used as a destination of transfer operations"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT",
                        "@comment": "Can be used as TBO"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT",
                        "@comment": "Can be used as IBO"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT",
                        "@comment": "Can be used as UBO"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_BUFFER_USAGE_STORAGE_BUFFER_BIT",
                        "@comment": "Can be used as SSBO"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_BUFFER_USAGE_INDEX_BUFFER_BIT",
                        "@comment": "Can be used as source of fixed-function index fetch (index buffer)"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_BUFFER_USAGE_VERTEX_BUFFER_BIT",
                        "@comment": "Can be used as source of fixed-function vertex fetch (VBO)"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT",
                        "@comment": "Can be the source of indirect parameters (e.g. indirect buffer, parameter buffer)"
                    }
                ]
            },
            {
                "@name": "VkBufferCreateFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_BUFFER_CREATE_SPARSE_BINDING_BIT",
                        "@comment": "Buffer should support sparse backing"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT",
                        "@comment": "Buffer should support sparse backing with partial residency"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_BUFFER_CREATE_SPARSE_ALIASED_BIT",
                        "@comment": "Buffer should support constant data access to physical memory ranges mapped into multiple locations of sparse buffers"
                    }
                ]
            },
            {
                "@name": "VkShaderStageFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SHADER_STAGE_VERTEX_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_SHADER_STAGE_GEOMETRY_BIT"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_SHADER_STAGE_FRAGMENT_BIT"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_SHADER_STAGE_COMPUTE_BIT"
                    },
                    {
                        "@value": "0x0000001F",
                        "@name": "VK_SHADER_STAGE_ALL_GRAPHICS"
                    },
                    {
                        "@value": "0x7FFFFFFF",
                        "@name": "VK_SHADER_STAGE_ALL"
                    }
                ]
            },
            {
                "@name": "VkImageUsageFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_IMAGE_USAGE_TRANSFER_SRC_BIT",
                        "@comment": "Can be used as a source of transfer operations"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_IMAGE_USAGE_TRANSFER_DST_BIT",
                        "@comment": "Can be used as a destination of transfer operations"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_IMAGE_USAGE_SAMPLED_BIT",
                        "@comment": "Can be sampled from (SAMPLED_IMAGE and COMBINED_IMAGE_SAMPLER descriptor types)"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_IMAGE_USAGE_STORAGE_BIT",
                        "@comment": "Can be used as storage image (STORAGE_IMAGE descriptor type)"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT",
                        "@comment": "Can be used as framebuffer color attachment"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT",
                        "@comment": "Can be used as framebuffer depth/stencil attachment"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT",
                        "@comment": "Image data not needed outside of rendering"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT",
                        "@comment": "Can be used as framebuffer input attachment"
                    }
                ]
            },
            {
                "@name": "VkImageCreateFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_IMAGE_CREATE_SPARSE_BINDING_BIT",
                        "@comment": "Image should support sparse backing"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT",
                        "@comment": "Image should support sparse backing with partial residency"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_IMAGE_CREATE_SPARSE_ALIASED_BIT",
                        "@comment": "Image should support constant data access to physical memory ranges mapped into multiple locations of sparse images"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT",
                        "@comment": "Allows image views to have different format than the base image"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT",
                        "@comment": "Allows creating image views with cube type from the created image"
                    }
                ]
            },
            {
                "@name": "VkImageViewCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkSamplerCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkPipelineCreateFlagBits",
                "@type": "bitmask",
                "@comment": "Note that the gap at bitpos 10 is unused, and can be reserved",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_PIPELINE_CREATE_DERIVATIVE_BIT"
                    }
                ]
            },
            {
                "@name": "VkPipelineShaderStageCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkColorComponentFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_COLOR_COMPONENT_R_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_COLOR_COMPONENT_G_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_COLOR_COMPONENT_B_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_COLOR_COMPONENT_A_BIT"
                    }
                ]
            },
            {
                "@name": "VkFenceCreateFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_FENCE_CREATE_SIGNALED_BIT"
                    }
                ]
            },
            {
                "@name": "VkSemaphoreCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkFormatFeatureFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT",
                        "@comment": "Format can be used for sampled images (SAMPLED_IMAGE and COMBINED_IMAGE_SAMPLER descriptor types)"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT",
                        "@comment": "Format can be used for storage images (STORAGE_IMAGE descriptor type)"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT",
                        "@comment": "Format supports atomic operations in case it is used for storage images"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT",
                        "@comment": "Format can be used for uniform texel buffers (TBOs)"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT",
                        "@comment": "Format can be used for storage texel buffers (IBOs)"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT",
                        "@comment": "Format supports atomic operations in case it is used for storage texel buffers"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT",
                        "@comment": "Format can be used for vertex buffers (VBOs)"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT",
                        "@comment": "Format can be used for color attachment images"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT",
                        "@comment": "Format supports blending in case it is used for color attachment images"
                    },
                    {
                        "@bitpos": "9",
                        "@name": "VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT",
                        "@comment": "Format can be used for depth/stencil attachment images"
                    },
                    {
                        "@bitpos": "10",
                        "@name": "VK_FORMAT_FEATURE_BLIT_SRC_BIT",
                        "@comment": "Format can be used as the source image of blits with vkCmdBlitImage"
                    },
                    {
                        "@bitpos": "11",
                        "@name": "VK_FORMAT_FEATURE_BLIT_DST_BIT",
                        "@comment": "Format can be used as the destination image of blits with vkCmdBlitImage"
                    },
                    {
                        "@bitpos": "12",
                        "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT",
                        "@comment": "Format can be filtered with VK_FILTER_LINEAR when being sampled"
                    }
                ]
            },
            {
                "@name": "VkQueryControlFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_QUERY_CONTROL_PRECISE_BIT",
                        "@comment": "Require precise results to be collected by the query"
                    }
                ]
            },
            {
                "@name": "VkQueryResultFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_QUERY_RESULT_64_BIT",
                        "@comment": "Results of the queries are written to the destination buffer as 64-bit values"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_QUERY_RESULT_WAIT_BIT",
                        "@comment": "Results of the queries are waited on before proceeding with the result copy"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_QUERY_RESULT_WITH_AVAILABILITY_BIT",
                        "@comment": "Besides the results of the query, the availability of the results is also written"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_QUERY_RESULT_PARTIAL_BIT",
                        "@comment": "Copy the partial results of the query even if the final results are not available"
                    }
                ]
            },
            {
                "@name": "VkCommandBufferUsageFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT",
                        "@comment": "Command buffer may be submitted/executed more than once simultaneously"
                    }
                ]
            },
            {
                "@name": "VkQueryPipelineStatisticFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT",
                        "@comment": "Optional"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT",
                        "@comment": "Optional"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT",
                        "@comment": "Optional"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT",
                        "@comment": "Optional"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT",
                        "@comment": "Optional"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT",
                        "@comment": "Optional"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT",
                        "@comment": "Optional"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT",
                        "@comment": "Optional"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT",
                        "@comment": "Optional"
                    },
                    {
                        "@bitpos": "9",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT",
                        "@comment": "Optional"
                    },
                    {
                        "@bitpos": "10",
                        "@name": "VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT",
                        "@comment": "Optional"
                    }
                ]
            },
            {
                "@name": "VkImageAspectFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_IMAGE_ASPECT_COLOR_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_IMAGE_ASPECT_DEPTH_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_IMAGE_ASPECT_STENCIL_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_IMAGE_ASPECT_METADATA_BIT"
                    }
                ]
            },
            {
                "@name": "VkSparseImageFormatFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT",
                        "@comment": "Image uses a single mip tail region for all array layers"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT",
                        "@comment": "Image requires mip level dimensions to be an integer multiple of the sparse image block dimensions for non-tail mip levels."
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT",
                        "@comment": "Image uses a non-standard sparse image block dimensions"
                    }
                ]
            },
            {
                "@name": "VkSparseMemoryBindFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SPARSE_MEMORY_BIND_METADATA_BIT",
                        "@comment": "Operation binds resource metadata to memory"
                    }
                ]
            },
            {
                "@name": "VkPipelineStageFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT",
                        "@comment": "Before subsequent commands are processed"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT",
                        "@comment": "Draw/DispatchIndirect command fetch"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_PIPELINE_STAGE_VERTEX_INPUT_BIT",
                        "@comment": "Vertex/index fetch"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_PIPELINE_STAGE_VERTEX_SHADER_BIT",
                        "@comment": "Vertex shading"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT",
                        "@comment": "Tessellation control shading"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT",
                        "@comment": "Tessellation evaluation shading"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT",
                        "@comment": "Geometry shading"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT",
                        "@comment": "Fragment shading"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT",
                        "@comment": "Early fragment (depth and stencil) tests"
                    },
                    {
                        "@bitpos": "9",
                        "@name": "VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT",
                        "@comment": "Late fragment (depth and stencil) tests"
                    },
                    {
                        "@bitpos": "10",
                        "@name": "VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT",
                        "@comment": "Color attachment writes"
                    },
                    {
                        "@bitpos": "11",
                        "@name": "VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT",
                        "@comment": "Compute shading"
                    },
                    {
                        "@bitpos": "12",
                        "@name": "VK_PIPELINE_STAGE_TRANSFER_BIT",
                        "@comment": "Transfer/copy operations"
                    },
                    {
                        "@bitpos": "13",
                        "@name": "VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT",
                        "@comment": "After previous commands have completed"
                    },
                    {
                        "@bitpos": "14",
                        "@name": "VK_PIPELINE_STAGE_HOST_BIT",
                        "@comment": "Indicates host (CPU) is a source/sink of the dependency"
                    },
                    {
                        "@bitpos": "15",
                        "@name": "VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT",
                        "@comment": "All stages of the graphics pipeline"
                    },
                    {
                        "@bitpos": "16",
                        "@name": "VK_PIPELINE_STAGE_ALL_COMMANDS_BIT",
                        "@comment": "All stages supported on the queue"
                    }
                ]
            },
            {
                "@name": "VkCommandPoolCreateFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_COMMAND_POOL_CREATE_TRANSIENT_BIT",
                        "@comment": "Command buffers have a short lifetime"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT",
                        "@comment": "Command buffers may release their memory individually"
                    }
                ]
            },
            {
                "@name": "VkCommandPoolResetFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT",
                        "@comment": "Release resources owned by the pool"
                    }
                ]
            },
            {
                "@name": "VkCommandBufferResetFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT",
                        "@comment": "Release resources owned by the buffer"
                    }
                ]
            },
            {
                "@name": "VkSampleCountFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SAMPLE_COUNT_1_BIT",
                        "@comment": "Sample count 1 supported"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_SAMPLE_COUNT_2_BIT",
                        "@comment": "Sample count 2 supported"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_SAMPLE_COUNT_4_BIT",
                        "@comment": "Sample count 4 supported"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_SAMPLE_COUNT_8_BIT",
                        "@comment": "Sample count 8 supported"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_SAMPLE_COUNT_16_BIT",
                        "@comment": "Sample count 16 supported"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_SAMPLE_COUNT_32_BIT",
                        "@comment": "Sample count 32 supported"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_SAMPLE_COUNT_64_BIT",
                        "@comment": "Sample count 64 supported"
                    }
                ]
            },
            {
                "@name": "VkAttachmentDescriptionFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT",
                        "@comment": "The attachment may alias physical memory of another attachment in the same render pass"
                    }
                ]
            },
            {
                "@name": "VkStencilFaceFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_STENCIL_FACE_FRONT_BIT",
                        "@comment": "Front face"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_STENCIL_FACE_BACK_BIT",
                        "@comment": "Back face"
                    },
                    {
                        "@value": "0x00000003",
                        "@name": "VK_STENCIL_FACE_FRONT_AND_BACK",
                        "@comment": "Front and back faces"
                    },
                    {
                        "@name": "VK_STENCIL_FRONT_AND_BACK",
                        "@alias": "VK_STENCIL_FACE_FRONT_AND_BACK",
                        "@comment": "Backwards-compatible alias containing a typo"
                    }
                ]
            },
            {
                "@name": "VkDescriptorPoolCreateFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT",
                        "@comment": "Descriptor sets may be freed individually"
                    }
                ]
            },
            {
                "@name": "VkDependencyFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_DEPENDENCY_BY_REGION_BIT",
                        "@comment": "Dependency is per pixel region "
                    }
                ]
            },
            {
                "@name": "VkSemaphoreType",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SEMAPHORE_TYPE_BINARY"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SEMAPHORE_TYPE_TIMELINE"
                    }
                ]
            },
            {
                "@name": "VkSemaphoreWaitFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SEMAPHORE_WAIT_ANY_BIT"
                    }
                ]
            },
            {
                "@name": "VkPresentModeKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PRESENT_MODE_IMMEDIATE_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PRESENT_MODE_MAILBOX_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_PRESENT_MODE_FIFO_KHR"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_PRESENT_MODE_FIFO_RELAXED_KHR"
                    }
                ]
            },
            {
                "@name": "VkColorSpaceKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_COLOR_SPACE_SRGB_NONLINEAR_KHR"
                    },
                    {
                        "@name": "VK_COLORSPACE_SRGB_NONLINEAR_KHR",
                        "@alias": "VK_COLOR_SPACE_SRGB_NONLINEAR_KHR",
                        "@comment": "Backwards-compatible alias containing a typo"
                    }
                ]
            },
            {
                "@name": "VkDisplayPlaneAlphaFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkCompositeAlphaFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkSurfaceTransformFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkSwapchainImageUsageFlagBitsANDROID",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SWAPCHAIN_IMAGE_USAGE_SHARED_BIT_ANDROID"
                    }
                ]
            },
            {
                "@name": "VkTimeDomainEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_TIME_DOMAIN_DEVICE_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT"
                    }
                ]
            },
            {
                "@name": "VkDebugReportFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_DEBUG_REPORT_INFORMATION_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_DEBUG_REPORT_WARNING_BIT_EXT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_DEBUG_REPORT_ERROR_BIT_EXT"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_DEBUG_REPORT_DEBUG_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkDebugReportObjectTypeEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT"
                    },
                    {
                        "@value": "11",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT"
                    },
                    {
                        "@value": "12",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT"
                    },
                    {
                        "@value": "13",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT"
                    },
                    {
                        "@value": "14",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT"
                    },
                    {
                        "@value": "15",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT"
                    },
                    {
                        "@value": "16",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT"
                    },
                    {
                        "@value": "17",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT"
                    },
                    {
                        "@value": "18",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT"
                    },
                    {
                        "@value": "19",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT"
                    },
                    {
                        "@value": "20",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT"
                    },
                    {
                        "@value": "21",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT"
                    },
                    {
                        "@value": "22",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT"
                    },
                    {
                        "@value": "23",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT"
                    },
                    {
                        "@value": "24",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT"
                    },
                    {
                        "@value": "25",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT"
                    },
                    {
                        "@value": "26",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT"
                    },
                    {
                        "@value": "27",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT"
                    },
                    {
                        "@value": "28",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT"
                    },
                    {
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT",
                        "@alias": "VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT",
                        "@comment": "Backwards-compatible alias containing a typo"
                    },
                    {
                        "@value": "29",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT"
                    },
                    {
                        "@value": "30",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT"
                    },
                    {
                        "@value": "33",
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT"
                    },
                    {
                        "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT",
                        "@alias": "VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT",
                        "@comment": "Backwards-compatible alias containing a typo"
                    }
                ]
            },
            {
                "@name": "VkDeviceMemoryReportEventTypeEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT"
                    }
                ]
            },
            {
                "@name": "VkRasterizationOrderAMD",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_RASTERIZATION_ORDER_STRICT_AMD"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_RASTERIZATION_ORDER_RELAXED_AMD"
                    }
                ]
            },
            {
                "@name": "VkExternalMemoryHandleTypeFlagBitsNV",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV"
                    }
                ]
            },
            {
                "@name": "VkExternalMemoryFeatureFlagBitsNV",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV"
                    }
                ]
            },
            {
                "@name": "VkValidationCheckEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VALIDATION_CHECK_ALL_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_VALIDATION_CHECK_SHADERS_EXT"
                    }
                ]
            },
            {
                "@name": "VkValidationFeatureEnableEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT"
                    }
                ]
            },
            {
                "@name": "VkValidationFeatureDisableEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VALIDATION_FEATURE_DISABLE_ALL_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT"
                    }
                ]
            },
            {
                "@name": "VkSubgroupFeatureFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SUBGROUP_FEATURE_BASIC_BIT",
                        "@comment": "Basic subgroup operations"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_SUBGROUP_FEATURE_VOTE_BIT",
                        "@comment": "Vote subgroup operations"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_SUBGROUP_FEATURE_ARITHMETIC_BIT",
                        "@comment": "Arithmetic subgroup operations"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_SUBGROUP_FEATURE_BALLOT_BIT",
                        "@comment": "Ballot subgroup operations"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_SUBGROUP_FEATURE_SHUFFLE_BIT",
                        "@comment": "Shuffle subgroup operations"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT",
                        "@comment": "Shuffle relative subgroup operations"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_SUBGROUP_FEATURE_CLUSTERED_BIT",
                        "@comment": "Clustered subgroup operations"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_SUBGROUP_FEATURE_QUAD_BIT",
                        "@comment": "Quad subgroup operations"
                    }
                ]
            },
            {
                "@name": "VkIndirectCommandsLayoutUsageFlagBitsNV",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV"
                    }
                ]
            },
            {
                "@name": "VkIndirectStateFlagBitsNV",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV"
                    }
                ]
            },
            {
                "@name": "VkIndirectCommandsTokenTypeNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV"
                    }
                ]
            },
            {
                "@name": "VkPrivateDataSlotCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkDescriptorSetLayoutCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkExternalMemoryHandleTypeFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT"
                    }
                ]
            },
            {
                "@name": "VkExternalMemoryFeatureFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT"
                    }
                ]
            },
            {
                "@name": "VkExternalSemaphoreHandleTypeFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT"
                    },
                    {
                        "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT",
                        "@alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT"
                    }
                ]
            },
            {
                "@name": "VkExternalSemaphoreFeatureFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT"
                    }
                ]
            },
            {
                "@name": "VkSemaphoreImportFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SEMAPHORE_IMPORT_TEMPORARY_BIT"
                    }
                ]
            },
            {
                "@name": "VkExternalFenceHandleTypeFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT"
                    }
                ]
            },
            {
                "@name": "VkExternalFenceFeatureFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT"
                    }
                ]
            },
            {
                "@name": "VkFenceImportFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_FENCE_IMPORT_TEMPORARY_BIT"
                    }
                ]
            },
            {
                "@name": "VkSurfaceCounterFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SURFACE_COUNTER_VBLANK_BIT_EXT"
                    },
                    {
                        "@name": "VK_SURFACE_COUNTER_VBLANK_EXT",
                        "@alias": "VK_SURFACE_COUNTER_VBLANK_BIT_EXT",
                        "@comment": "Backwards-compatible alias containing a typo"
                    }
                ]
            },
            {
                "@name": "VkDisplayPowerStateEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_DISPLAY_POWER_STATE_OFF_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_DISPLAY_POWER_STATE_SUSPEND_EXT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_DISPLAY_POWER_STATE_ON_EXT"
                    }
                ]
            },
            {
                "@name": "VkDeviceEventTypeEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT"
                    }
                ]
            },
            {
                "@name": "VkDisplayEventTypeEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT"
                    }
                ]
            },
            {
                "@name": "VkPeerMemoryFeatureFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT",
                        "@comment": "Can read with vkCmdCopy commands"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_PEER_MEMORY_FEATURE_COPY_DST_BIT",
                        "@comment": "Can write with vkCmdCopy commands"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT",
                        "@comment": "Can read with any access type/command"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT",
                        "@comment": "Can write with and access type/command"
                    }
                ]
            },
            {
                "@name": "VkMemoryAllocateFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT",
                        "@comment": "Force allocation on specific devices"
                    }
                ]
            },
            {
                "@name": "VkDeviceGroupPresentModeFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR",
                        "@comment": "Present from local memory"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR",
                        "@comment": "Present from remote memory"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR",
                        "@comment": "Present sum of local and/or remote memory"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR",
                        "@comment": "Each physical device presents from local memory"
                    }
                ]
            },
            {
                "@name": "VkSwapchainCreateFlagBitsKHR",
                "@type": "bitmask"
            },
            {
                "@name": "VkViewportCoordinateSwizzleNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV"
                    }
                ]
            },
            {
                "@name": "VkDiscardRectangleModeEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT"
                    }
                ]
            },
            {
                "@name": "VkSubpassDescriptionFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkPointClippingBehavior",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY"
                    }
                ]
            },
            {
                "@name": "VkSamplerReductionMode",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SAMPLER_REDUCTION_MODE_MIN"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_SAMPLER_REDUCTION_MODE_MAX"
                    }
                ]
            },
            {
                "@name": "VkTessellationDomainOrigin",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT"
                    }
                ]
            },
            {
                "@name": "VkSamplerYcbcrModelConversion",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY",
                        "@comment": "just range expansion"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709",
                        "@comment": "aka HD YUV"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601",
                        "@comment": "aka SD YUV"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020",
                        "@comment": "aka UHD YUV"
                    }
                ]
            },
            {
                "@name": "VkSamplerYcbcrRange",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SAMPLER_YCBCR_RANGE_ITU_FULL",
                        "@comment": "Luma 0..1 maps to 0..255, chroma -0.5..0.5 to 1..255 (clamped)"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SAMPLER_YCBCR_RANGE_ITU_NARROW",
                        "@comment": "Luma 0..1 maps to 16..235, chroma -0.5..0.5 to 16..240"
                    }
                ]
            },
            {
                "@name": "VkChromaLocation",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_CHROMA_LOCATION_COSITED_EVEN"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_CHROMA_LOCATION_MIDPOINT"
                    }
                ]
            },
            {
                "@name": "VkBlendOverlapEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_BLEND_OVERLAP_UNCORRELATED_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_BLEND_OVERLAP_DISJOINT_EXT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_BLEND_OVERLAP_CONJOINT_EXT"
                    }
                ]
            },
            {
                "@name": "VkCoverageModulationModeNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_COVERAGE_MODULATION_MODE_NONE_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_COVERAGE_MODULATION_MODE_RGB_NV"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_COVERAGE_MODULATION_MODE_ALPHA_NV"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_COVERAGE_MODULATION_MODE_RGBA_NV"
                    }
                ]
            },
            {
                "@name": "VkCoverageReductionModeNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_COVERAGE_REDUCTION_MODE_MERGE_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV"
                    }
                ]
            },
            {
                "@name": "VkValidationCacheHeaderVersionEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "1",
                        "@name": "VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT"
                    }
                ]
            },
            {
                "@name": "VkShaderInfoTypeAMD",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SHADER_INFO_TYPE_STATISTICS_AMD"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SHADER_INFO_TYPE_BINARY_AMD"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD"
                    }
                ]
            },
            {
                "@name": "VkQueueGlobalPriorityKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "128",
                        "@name": "VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR"
                    },
                    {
                        "@value": "256",
                        "@name": "VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR"
                    },
                    {
                        "@value": "512",
                        "@name": "VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR"
                    },
                    {
                        "@value": "1024",
                        "@name": "VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR"
                    },
                    {
                        "@name": "VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT",
                        "@alias": "VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR"
                    },
                    {
                        "@name": "VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT",
                        "@alias": "VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR"
                    },
                    {
                        "@name": "VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT",
                        "@alias": "VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR"
                    },
                    {
                        "@name": "VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT",
                        "@alias": "VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR"
                    }
                ]
            },
            {
                "@name": "VkDebugUtilsMessageSeverityFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT"
                    },
                    {
                        "@bitpos": "12",
                        "@name": "VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkDebugUtilsMessageTypeFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkConservativeRasterizationModeEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT"
                    }
                ]
            },
            {
                "@name": "VkDescriptorBindingFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT"
                    }
                ]
            },
            {
                "@name": "VkVendorId",
                "@type": "enum",
                "comment": "Vendor IDs are now represented as enums instead of the old\n                 <vendorids> tag, allowing them to be included in the\n                 API headers.",
                "enum": [
                    {
                        "@value": "0x10001",
                        "@name": "VK_VENDOR_ID_VIV",
                        "@comment": "Vivante vendor ID"
                    },
                    {
                        "@value": "0x10002",
                        "@name": "VK_VENDOR_ID_VSI",
                        "@comment": "VeriSilicon vendor ID"
                    },
                    {
                        "@value": "0x10003",
                        "@name": "VK_VENDOR_ID_KAZAN",
                        "@comment": "Kazan Software Renderer"
                    },
                    {
                        "@value": "0x10004",
                        "@name": "VK_VENDOR_ID_CODEPLAY",
                        "@comment": "Codeplay Software Ltd. vendor ID"
                    },
                    {
                        "@value": "0x10005",
                        "@name": "VK_VENDOR_ID_MESA",
                        "@comment": "Mesa vendor ID"
                    },
                    {
                        "@value": "0x10006",
                        "@name": "VK_VENDOR_ID_POCL",
                        "@comment": "PoCL vendor ID"
                    }
                ],
                "unused": {
                    "@start": "0x10007",
                    "@comment": "This is the next unused available Khronos vendor ID"
                }
            },
            {
                "@name": "VkDriverId",
                "@type": "enum",
                "comment": "Driver IDs are now represented as enums instead of the old\n                 <driverids> tag, allowing them to be included in the\n                 API headers.",
                "enum": [
                    {
                        "@value": "1",
                        "@name": "VK_DRIVER_ID_AMD_PROPRIETARY",
                        "@comment": "Advanced Micro Devices, Inc."
                    },
                    {
                        "@value": "2",
                        "@name": "VK_DRIVER_ID_AMD_OPEN_SOURCE",
                        "@comment": "Advanced Micro Devices, Inc."
                    },
                    {
                        "@value": "3",
                        "@name": "VK_DRIVER_ID_MESA_RADV",
                        "@comment": "Mesa open source project"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_DRIVER_ID_NVIDIA_PROPRIETARY",
                        "@comment": "NVIDIA Corporation"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS",
                        "@comment": "Intel Corporation"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA",
                        "@comment": "Intel Corporation"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_DRIVER_ID_IMAGINATION_PROPRIETARY",
                        "@comment": "Imagination Technologies"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_DRIVER_ID_QUALCOMM_PROPRIETARY",
                        "@comment": "Qualcomm Technologies, Inc."
                    },
                    {
                        "@value": "9",
                        "@name": "VK_DRIVER_ID_ARM_PROPRIETARY",
                        "@comment": "Arm Limited"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_DRIVER_ID_GOOGLE_SWIFTSHADER",
                        "@comment": "Google LLC"
                    },
                    {
                        "@value": "11",
                        "@name": "VK_DRIVER_ID_GGP_PROPRIETARY",
                        "@comment": "Google LLC"
                    },
                    {
                        "@value": "12",
                        "@name": "VK_DRIVER_ID_BROADCOM_PROPRIETARY",
                        "@comment": "Broadcom Inc."
                    },
                    {
                        "@value": "13",
                        "@name": "VK_DRIVER_ID_MESA_LLVMPIPE",
                        "@comment": "Mesa"
                    },
                    {
                        "@value": "14",
                        "@name": "VK_DRIVER_ID_MOLTENVK",
                        "@comment": "MoltenVK"
                    },
                    {
                        "@value": "15",
                        "@name": "VK_DRIVER_ID_COREAVI_PROPRIETARY",
                        "@comment": "Core Avionics & Industrial Inc."
                    },
                    {
                        "@value": "16",
                        "@name": "VK_DRIVER_ID_JUICE_PROPRIETARY",
                        "@comment": "Juice Technologies, Inc."
                    },
                    {
                        "@value": "17",
                        "@name": "VK_DRIVER_ID_VERISILICON_PROPRIETARY",
                        "@comment": "Verisilicon, Inc."
                    },
                    {
                        "@value": "18",
                        "@name": "VK_DRIVER_ID_MESA_TURNIP",
                        "@comment": "Mesa open source project"
                    },
                    {
                        "@value": "19",
                        "@name": "VK_DRIVER_ID_MESA_V3DV",
                        "@comment": "Mesa open source project"
                    },
                    {
                        "@value": "20",
                        "@name": "VK_DRIVER_ID_MESA_PANVK",
                        "@comment": "Mesa open source project"
                    },
                    {
                        "@value": "21",
                        "@name": "VK_DRIVER_ID_SAMSUNG_PROPRIETARY",
                        "@comment": "Samsung Electronics Co., Ltd."
                    },
                    {
                        "@value": "22",
                        "@name": "VK_DRIVER_ID_MESA_VENUS",
                        "@comment": "Mesa open source project"
                    }
                ]
            },
            {
                "@name": "VkConditionalRenderingFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkResolveModeFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_RESOLVE_MODE_NONE"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_RESOLVE_MODE_SAMPLE_ZERO_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_RESOLVE_MODE_AVERAGE_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_RESOLVE_MODE_MIN_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_RESOLVE_MODE_MAX_BIT"
                    }
                ]
            },
            {
                "@name": "VkShadingRatePaletteEntryNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV"
                    },
                    {
                        "@value": "11",
                        "@name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV"
                    }
                ]
            },
            {
                "@name": "VkCoarseSampleOrderTypeNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV"
                    }
                ]
            },
            {
                "@name": "VkGeometryInstanceFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR"
                    },
                    {
                        "@name": "VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR",
                        "@alias": "VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkGeometryFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_GEOMETRY_OPAQUE_BIT_KHR"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkBuildAccelerationStructureFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkAccelerationStructureCreateFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkCopyAccelerationStructureModeKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR"
                    }
                ]
            },
            {
                "@name": "VkBuildAccelerationStructureModeKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR"
                    }
                ]
            },
            {
                "@name": "VkAccelerationStructureTypeKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR"
                    }
                ]
            },
            {
                "@name": "VkGeometryTypeKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_GEOMETRY_TYPE_TRIANGLES_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_GEOMETRY_TYPE_AABBS_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_GEOMETRY_TYPE_INSTANCES_KHR"
                    }
                ]
            },
            {
                "@name": "VkAccelerationStructureMemoryRequirementsTypeNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV"
                    }
                ]
            },
            {
                "@name": "VkAccelerationStructureBuildTypeKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR"
                    }
                ]
            },
            {
                "@name": "VkRayTracingShaderGroupTypeKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR"
                    }
                ]
            },
            {
                "@name": "VkAccelerationStructureCompatibilityKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR"
                    }
                ]
            },
            {
                "@name": "VkShaderGroupShaderKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SHADER_GROUP_SHADER_GENERAL_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_SHADER_GROUP_SHADER_ANY_HIT_KHR"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_SHADER_GROUP_SHADER_INTERSECTION_KHR"
                    }
                ]
            },
            {
                "@name": "VkMemoryOverallocationBehaviorAMD",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD"
                    }
                ]
            },
            {
                "@name": "VkFramebufferCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkScopeNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "1",
                        "@name": "VK_SCOPE_DEVICE_NV"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_SCOPE_WORKGROUP_NV"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_SCOPE_SUBGROUP_NV"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_SCOPE_QUEUE_FAMILY_NV"
                    }
                ]
            },
            {
                "@name": "VkComponentTypeNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_COMPONENT_TYPE_FLOAT16_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_COMPONENT_TYPE_FLOAT32_NV"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_COMPONENT_TYPE_FLOAT64_NV"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_COMPONENT_TYPE_SINT8_NV"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_COMPONENT_TYPE_SINT16_NV"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_COMPONENT_TYPE_SINT32_NV"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_COMPONENT_TYPE_SINT64_NV"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_COMPONENT_TYPE_UINT8_NV"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_COMPONENT_TYPE_UINT16_NV"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_COMPONENT_TYPE_UINT32_NV"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_COMPONENT_TYPE_UINT64_NV"
                    }
                ]
            },
            {
                "@name": "VkDeviceDiagnosticsConfigFlagBitsNV",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV"
                    }
                ]
            },
            {
                "@name": "VkPipelineCreationFeedbackFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT",
                        "@alias": "VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT",
                        "@alias": "VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT",
                        "@alias": "VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT"
                    }
                ]
            },
            {
                "@name": "VkFullScreenExclusiveEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_FULL_SCREEN_EXCLUSIVE_DEFAULT_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_FULL_SCREEN_EXCLUSIVE_ALLOWED_EXT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_FULL_SCREEN_EXCLUSIVE_DISALLOWED_EXT"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_FULL_SCREEN_EXCLUSIVE_APPLICATION_CONTROLLED_EXT"
                    }
                ]
            },
            {
                "@name": "VkPerformanceCounterScopeKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR"
                    },
                    {
                        "@name": "VK_QUERY_SCOPE_COMMAND_BUFFER_KHR",
                        "@alias": "VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR",
                        "@comment": "Backwards-compatible alias containing a typo"
                    },
                    {
                        "@name": "VK_QUERY_SCOPE_RENDER_PASS_KHR",
                        "@alias": "VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR",
                        "@comment": "Backwards-compatible alias containing a typo"
                    },
                    {
                        "@name": "VK_QUERY_SCOPE_COMMAND_KHR",
                        "@alias": "VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR",
                        "@comment": "Backwards-compatible alias containing a typo"
                    }
                ]
            },
            {
                "@name": "VkPerformanceCounterUnitKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR"
                    },
                    {
                        "@value": "7",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR"
                    },
                    {
                        "@value": "8",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR"
                    }
                ]
            },
            {
                "@name": "VkPerformanceCounterStorageKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR"
                    }
                ]
            },
            {
                "@name": "VkPerformanceCounterDescriptionFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR"
                    },
                    {
                        "@name": "VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR",
                        "@alias": "VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR",
                        "@comment": "Backwards-compatible alias containing a typo"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR"
                    },
                    {
                        "@name": "VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR",
                        "@alias": "VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR",
                        "@comment": "Backwards-compatible alias containing a typo"
                    }
                ]
            },
            {
                "@name": "VkAcquireProfilingLockFlagBitsKHR",
                "@type": "bitmask"
            },
            {
                "@name": "VkShaderCorePropertiesFlagBitsAMD",
                "@type": "bitmask"
            },
            {
                "@name": "VkPerformanceConfigurationTypeINTEL",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL"
                    }
                ]
            },
            {
                "@name": "VkQueryPoolSamplingModeINTEL",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL"
                    }
                ]
            },
            {
                "@name": "VkPerformanceOverrideTypeINTEL",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL"
                    }
                ]
            },
            {
                "@name": "VkPerformanceParameterTypeINTEL",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL"
                    }
                ]
            },
            {
                "@name": "VkPerformanceValueTypeINTEL",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL"
                    }
                ]
            },
            {
                "@name": "VkShaderFloatControlsIndependence",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE"
                    }
                ]
            },
            {
                "@name": "VkPipelineExecutableStatisticFormatKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR"
                    }
                ]
            },
            {
                "@name": "VkLineRasterizationModeEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT"
                    }
                ]
            },
            {
                "@name": "VkShaderModuleCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkPipelineCompilerControlFlagBitsAMD",
                "@type": "bitmask"
            },
            {
                "@name": "VkToolPurposeFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_TOOL_PURPOSE_VALIDATION_BIT"
                    },
                    {
                        "@name": "VK_TOOL_PURPOSE_VALIDATION_BIT_EXT",
                        "@alias": "VK_TOOL_PURPOSE_VALIDATION_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_TOOL_PURPOSE_PROFILING_BIT"
                    },
                    {
                        "@name": "VK_TOOL_PURPOSE_PROFILING_BIT_EXT",
                        "@alias": "VK_TOOL_PURPOSE_PROFILING_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_TOOL_PURPOSE_TRACING_BIT"
                    },
                    {
                        "@name": "VK_TOOL_PURPOSE_TRACING_BIT_EXT",
                        "@alias": "VK_TOOL_PURPOSE_TRACING_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT"
                    },
                    {
                        "@name": "VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT",
                        "@alias": "VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT"
                    },
                    {
                        "@name": "VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT",
                        "@alias": "VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT"
                    }
                ]
            },
            {
                "@name": "VkFragmentShadingRateCombinerOpKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR"
                    },
                    {
                        "@value": "3",
                        "@name": "VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR"
                    }
                ]
            },
            {
                "@name": "VkFragmentShadingRateNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV"
                    },
                    {
                        "@value": "4",
                        "@name": "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV"
                    },
                    {
                        "@value": "5",
                        "@name": "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV"
                    },
                    {
                        "@value": "6",
                        "@name": "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV"
                    },
                    {
                        "@value": "9",
                        "@name": "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV"
                    },
                    {
                        "@value": "10",
                        "@name": "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV"
                    },
                    {
                        "@value": "11",
                        "@name": "VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV"
                    },
                    {
                        "@value": "12",
                        "@name": "VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV"
                    },
                    {
                        "@value": "13",
                        "@name": "VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV"
                    },
                    {
                        "@value": "14",
                        "@name": "VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV"
                    },
                    {
                        "@value": "15",
                        "@name": "VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV"
                    }
                ]
            },
            {
                "@name": "VkFragmentShadingRateTypeNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV"
                    }
                ]
            },
            {
                "@name": "VkAccessFlagBits2",
                "@type": "bitmask",
                "@bitwidth": "64",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_ACCESS_2_NONE"
                    },
                    {
                        "@name": "VK_ACCESS_2_NONE_KHR",
                        "@alias": "VK_ACCESS_2_NONE"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_ACCESS_2_INDEX_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_INDEX_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_INDEX_READ_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_ACCESS_2_UNIFORM_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_UNIFORM_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_UNIFORM_READ_BIT"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_ACCESS_2_SHADER_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_SHADER_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_SHADER_READ_BIT"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_ACCESS_2_SHADER_WRITE_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_SHADER_WRITE_BIT_KHR",
                        "@alias": "VK_ACCESS_2_SHADER_WRITE_BIT"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR",
                        "@alias": "VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT"
                    },
                    {
                        "@bitpos": "9",
                        "@name": "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT"
                    },
                    {
                        "@bitpos": "10",
                        "@name": "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR",
                        "@alias": "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"
                    },
                    {
                        "@bitpos": "11",
                        "@name": "VK_ACCESS_2_TRANSFER_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_TRANSFER_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_TRANSFER_READ_BIT"
                    },
                    {
                        "@bitpos": "12",
                        "@name": "VK_ACCESS_2_TRANSFER_WRITE_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR",
                        "@alias": "VK_ACCESS_2_TRANSFER_WRITE_BIT"
                    },
                    {
                        "@bitpos": "13",
                        "@name": "VK_ACCESS_2_HOST_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_HOST_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_HOST_READ_BIT"
                    },
                    {
                        "@bitpos": "14",
                        "@name": "VK_ACCESS_2_HOST_WRITE_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_HOST_WRITE_BIT_KHR",
                        "@alias": "VK_ACCESS_2_HOST_WRITE_BIT"
                    },
                    {
                        "@bitpos": "15",
                        "@name": "VK_ACCESS_2_MEMORY_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_MEMORY_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_MEMORY_READ_BIT"
                    },
                    {
                        "@bitpos": "16",
                        "@name": "VK_ACCESS_2_MEMORY_WRITE_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_MEMORY_WRITE_BIT_KHR",
                        "@alias": "VK_ACCESS_2_MEMORY_WRITE_BIT"
                    },
                    {
                        "@bitpos": "32",
                        "@name": "VK_ACCESS_2_SHADER_SAMPLED_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_SHADER_SAMPLED_READ_BIT"
                    },
                    {
                        "@bitpos": "33",
                        "@name": "VK_ACCESS_2_SHADER_STORAGE_READ_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR",
                        "@alias": "VK_ACCESS_2_SHADER_STORAGE_READ_BIT"
                    },
                    {
                        "@bitpos": "34",
                        "@name": "VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT"
                    },
                    {
                        "@name": "VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR",
                        "@alias": "VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT"
                    }
                ]
            },
            {
                "@name": "VkPipelineStageFlagBits2",
                "@type": "bitmask",
                "@bitwidth": "64",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PIPELINE_STAGE_2_NONE"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_NONE_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_NONE"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT"
                    },
                    {
                        "@bitpos": "9",
                        "@name": "VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT"
                    },
                    {
                        "@bitpos": "10",
                        "@name": "VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT"
                    },
                    {
                        "@bitpos": "11",
                        "@name": "VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"
                    },
                    {
                        "@bitpos": "12",
                        "@name": "VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_TRANSFER_BIT",
                        "@alias": "VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_TRANSFER_BIT"
                    },
                    {
                        "@bitpos": "13",
                        "@name": "VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT"
                    },
                    {
                        "@bitpos": "14",
                        "@name": "VK_PIPELINE_STAGE_2_HOST_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_HOST_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_HOST_BIT"
                    },
                    {
                        "@bitpos": "15",
                        "@name": "VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT"
                    },
                    {
                        "@bitpos": "16",
                        "@name": "VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT"
                    },
                    {
                        "@bitpos": "32",
                        "@name": "VK_PIPELINE_STAGE_2_COPY_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_COPY_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_COPY_BIT"
                    },
                    {
                        "@bitpos": "33",
                        "@name": "VK_PIPELINE_STAGE_2_RESOLVE_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_RESOLVE_BIT"
                    },
                    {
                        "@bitpos": "34",
                        "@name": "VK_PIPELINE_STAGE_2_BLIT_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_BLIT_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_BLIT_BIT"
                    },
                    {
                        "@bitpos": "35",
                        "@name": "VK_PIPELINE_STAGE_2_CLEAR_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_CLEAR_BIT"
                    },
                    {
                        "@bitpos": "36",
                        "@name": "VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT"
                    },
                    {
                        "@bitpos": "37",
                        "@name": "VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT"
                    },
                    {
                        "@bitpos": "38",
                        "@name": "VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT"
                    },
                    {
                        "@name": "VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR",
                        "@alias": "VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT"
                    }
                ]
            },
            {
                "@name": "VkSubmitFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_SUBMIT_PROTECTED_BIT"
                    },
                    {
                        "@name": "VK_SUBMIT_PROTECTED_BIT_KHR",
                        "@alias": "VK_SUBMIT_PROTECTED_BIT"
                    }
                ]
            },
            {
                "@name": "VkEventCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkPipelineLayoutCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkProvokingVertexModeEXT",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT"
                    }
                ]
            },
            {
                "@name": "VkAccelerationStructureMotionInstanceTypeNV",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV"
                    }
                ]
            },
            {
                "@name": "VkPipelineColorBlendStateCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkPipelineDepthStencilStateCreateFlagBits",
                "@type": "bitmask"
            },
            {
                "@name": "VkVideoCodecOperationFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_CODEC_OPERATION_INVALID_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoChromaSubsamplingFlagBitsKHR",
                "@type": "bitmask",
                "@comment": "Vulkan video chroma subsampling definitions",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_CHROMA_SUBSAMPLING_INVALID_BIT_KHR"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHR"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoComponentBitDepthFlagBitsKHR",
                "@type": "bitmask",
                "@comment": "Vulkan video component bit depth definitions",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHR"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoCapabilityFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHR"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoSessionCreateFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_SESSION_CREATE_DEFAULT_KHR"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoCodingQualityPresetFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_CODING_QUALITY_PRESET_NORMAL_BIT_KHR"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_CODING_QUALITY_PRESET_POWER_BIT_KHR"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_VIDEO_CODING_QUALITY_PRESET_QUALITY_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoDecodeH264PictureLayoutFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_EXT"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkVideoCodingControlFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_CODING_CONTROL_DEFAULT_KHR"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_CODING_CONTROL_RESET_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkQueryResultStatusKHR",
                "@type": "enum",
                "enum": [
                    {
                        "@value": "-1",
                        "@name": "VK_QUERY_RESULT_STATUS_ERROR_KHR"
                    },
                    {
                        "@value": "0",
                        "@name": "VK_QUERY_RESULT_STATUS_NOT_READY_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_QUERY_RESULT_STATUS_COMPLETE_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoDecodeFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_DECODE_DEFAULT_KHR"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_DECODE_RESERVED_0_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_ENCODE_DEFAULT_KHR"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_RESERVED_0_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeRateControlFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_ENCODE_RATE_CONTROL_DEFAULT_KHR"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_RATE_CONTROL_RESERVED_0_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeRateControlModeFlagBitsKHR",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_ENCODE_RATE_CONTROL_MODE_NONE_BIT_KHR"
                    },
                    {
                        "@value": "1",
                        "@name": "VK_VIDEO_ENCODE_RATE_CONTROL_MODE_CBR_BIT_KHR"
                    },
                    {
                        "@value": "2",
                        "@name": "VK_VIDEO_ENCODE_RATE_CONTROL_MODE_VBR_BIT_KHR"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeH264CapabilityFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_CABAC_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_CAVLC_BIT_EXT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_WEIGHTED_BI_PRED_IMPLICIT_BIT_EXT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_TRANSFORM_8X8_BIT_EXT"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_CHROMA_QP_OFFSET_BIT_EXT"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_SECOND_CHROMA_QP_OFFSET_BIT_EXT"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_DEBLOCKING_FILTER_DISABLED_BIT_EXT"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_DEBLOCKING_FILTER_ENABLED_BIT_EXT"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_DEBLOCKING_FILTER_PARTIAL_BIT_EXT"
                    },
                    {
                        "@bitpos": "9",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_MULTIPLE_SLICE_PER_FRAME_BIT_EXT"
                    },
                    {
                        "@bitpos": "10",
                        "@name": "VK_VIDEO_ENCODE_H264_CAPABILITY_EVENLY_DISTRIBUTED_SLICE_SIZE_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeH264InputModeFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_H264_INPUT_MODE_FRAME_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_ENCODE_H264_INPUT_MODE_SLICE_BIT_EXT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_VIDEO_ENCODE_H264_INPUT_MODE_NON_VCL_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeH264OutputModeFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_H264_OUTPUT_MODE_FRAME_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_ENCODE_H264_OUTPUT_MODE_SLICE_BIT_EXT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_VIDEO_ENCODE_H264_OUTPUT_MODE_NON_VCL_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeH264CreateFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_ENCODE_H264_CREATE_DEFAULT_EXT"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_H264_CREATE_RESERVED_0_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeH264RateControlStructureFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_ENCODE_H264_RATE_CONTROL_STRUCTURE_UNKNOWN_EXT"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_H264_RATE_CONTROL_STRUCTURE_FLAT_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_ENCODE_H264_RATE_CONTROL_STRUCTURE_DYADIC_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkImageFormatConstraintsFlagBitsFUCHSIA",
                "@type": "bitmask"
            },
            {
                "@name": "VkImageConstraintsInfoFlagBitsFUCHSIA",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_IMAGE_CONSTRAINTS_INFO_CPU_READ_RARELY_FUCHSIA"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_IMAGE_CONSTRAINTS_INFO_CPU_READ_OFTEN_FUCHSIA"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_IMAGE_CONSTRAINTS_INFO_CPU_WRITE_RARELY_FUCHSIA"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_IMAGE_CONSTRAINTS_INFO_CPU_WRITE_OFTEN_FUCHSIA"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_IMAGE_CONSTRAINTS_INFO_PROTECTED_OPTIONAL_FUCHSIA"
                    }
                ]
            },
            {
                "@name": "VkFormatFeatureFlagBits2",
                "@type": "bitmask",
                "@bitwidth": "64",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT"
                    },
                    {
                        "@bitpos": "4",
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT"
                    },
                    {
                        "@bitpos": "5",
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT"
                    },
                    {
                        "@bitpos": "6",
                        "@name": "VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT"
                    },
                    {
                        "@bitpos": "7",
                        "@name": "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT"
                    },
                    {
                        "@bitpos": "8",
                        "@name": "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT"
                    },
                    {
                        "@bitpos": "9",
                        "@name": "VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT"
                    },
                    {
                        "@bitpos": "10",
                        "@name": "VK_FORMAT_FEATURE_2_BLIT_SRC_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_BLIT_SRC_BIT"
                    },
                    {
                        "@bitpos": "11",
                        "@name": "VK_FORMAT_FEATURE_2_BLIT_DST_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_BLIT_DST_BIT"
                    },
                    {
                        "@bitpos": "12",
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT"
                    },
                    {
                        "@bitpos": "13",
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT",
                        "@alias": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT"
                    },
                    {
                        "@bitpos": "14",
                        "@name": "VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT"
                    },
                    {
                        "@bitpos": "15",
                        "@name": "VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT"
                    },
                    {
                        "@bitpos": "16",
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT"
                    },
                    {
                        "@bitpos": "17",
                        "@name": "VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT"
                    },
                    {
                        "@bitpos": "18",
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT"
                    },
                    {
                        "@bitpos": "19",
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT"
                    },
                    {
                        "@bitpos": "20",
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"
                    },
                    {
                        "@bitpos": "21",
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"
                    },
                    {
                        "@bitpos": "22",
                        "@name": "VK_FORMAT_FEATURE_2_DISJOINT_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_DISJOINT_BIT"
                    },
                    {
                        "@bitpos": "23",
                        "@name": "VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT"
                    },
                    {
                        "@bitpos": "31",
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT"
                    },
                    {
                        "@bitpos": "32",
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT"
                    },
                    {
                        "@bitpos": "33",
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT"
                    },
                    {
                        "@name": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR",
                        "@alias": "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT"
                    }
                ]
            },
            {
                "@name": "VkRenderingFlagBits",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT"
                    },
                    {
                        "@name": "VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR",
                        "@alias": "VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_RENDERING_SUSPENDING_BIT"
                    },
                    {
                        "@name": "VK_RENDERING_SUSPENDING_BIT_KHR",
                        "@alias": "VK_RENDERING_SUSPENDING_BIT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_RENDERING_RESUMING_BIT"
                    },
                    {
                        "@name": "VK_RENDERING_RESUMING_BIT_KHR",
                        "@alias": "VK_RENDERING_RESUMING_BIT"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeH265InputModeFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_H265_INPUT_MODE_FRAME_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_ENCODE_H265_INPUT_MODE_SLICE_BIT_EXT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_VIDEO_ENCODE_H265_INPUT_MODE_NON_VCL_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeH265OutputModeFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_H265_OUTPUT_MODE_FRAME_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_ENCODE_H265_OUTPUT_MODE_SLICE_BIT_EXT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_VIDEO_ENCODE_H265_OUTPUT_MODE_NON_VCL_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeH265CtbSizeFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_H265_CTB_SIZE_8_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_ENCODE_H265_CTB_SIZE_16_BIT_EXT"
                    },
                    {
                        "@bitpos": "2",
                        "@name": "VK_VIDEO_ENCODE_H265_CTB_SIZE_32_BIT_EXT"
                    },
                    {
                        "@bitpos": "3",
                        "@name": "VK_VIDEO_ENCODE_H265_CTB_SIZE_64_BIT_EXT"
                    }
                ]
            },
            {
                "@name": "VkVideoEncodeH265RateControlStructureFlagBitsEXT",
                "@type": "bitmask",
                "enum": [
                    {
                        "@value": "0",
                        "@name": "VK_VIDEO_ENCODE_H265_RATE_CONTROL_STRUCTURE_UNKNOWN_EXT"
                    },
                    {
                        "@bitpos": "0",
                        "@name": "VK_VIDEO_ENCODE_H265_RATE_CONTROL_STRUCTURE_FLAT_BIT_EXT"
                    },
                    {
                        "@bitpos": "1",
                        "@name": "VK_VIDEO_ENCODE_H265_RATE_CONTROL_STRUCTURE_DYADIC_BIT_EXT"
                    }
                ]
            }
        ],
        "commands": {
            "@comment": "Vulkan command definitions",
            "command": [
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_LAYER_NOT_PRESENT,VK_ERROR_EXTENSION_NOT_PRESENT,VK_ERROR_INCOMPATIBLE_DRIVER",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateInstance"
                    },
                    "param": [
                        {
                            "type": "VkInstanceCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkInstance",
                            "name": "pInstance",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyInstance"
                    },
                    "param": [
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ],
                    "implicitexternsyncparams": {
                        "param": "all sname:VkPhysicalDevice objects enumerated from pname:instance"
                    }
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkEnumeratePhysicalDevices"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPhysicalDeviceCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPhysicalDeviceCount",
                            "type": "VkPhysicalDevice",
                            "name": "pPhysicalDevices",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "PFN_vkVoidFunction",
                        "name": "vkGetDeviceProcAddr"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pName",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "PFN_vkVoidFunction",
                        "name": "vkGetInstanceProcAddr"
                    },
                    "param": [
                        {
                            "@optional": "true",
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pName",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceProperties",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceQueueFamilyProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pQueueFamilyPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pQueueFamilyPropertyCount",
                            "type": "VkQueueFamilyProperties",
                            "name": "pQueueFamilyProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceMemoryProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceMemoryProperties",
                            "name": "pMemoryProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceFeatures"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceFeatures",
                            "name": "pFeatures",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceFormatProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkFormatProperties",
                            "name": "pFormatProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_FORMAT_NOT_SUPPORTED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceImageFormatProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkImageType",
                            "name": "type"
                        },
                        {
                            "type": "VkImageTiling",
                            "name": "tiling"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "usage"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageCreateFlags",
                            "name": "flags"
                        },
                        {
                            "type": "VkImageFormatProperties",
                            "name": "pImageFormatProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_EXTENSION_NOT_PRESENT,VK_ERROR_FEATURE_NOT_PRESENT,VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateDevice"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkDeviceCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDevice",
                            "name": "pDevice",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyDevice"
                    },
                    "param": [
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ],
                    "implicitexternsyncparams": {
                        "param": "all sname:VkQueue objects created from pname:device"
                    }
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkEnumerateInstanceVersion"
                    },
                    "param": {
                        "type": "uint32_t",
                        "name": "pApiVersion",
                        "#text": "*"
                    }
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkEnumerateInstanceLayerProperties"
                    },
                    "param": [
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkLayerProperties",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_LAYER_NOT_PRESENT",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkEnumerateInstanceExtensionProperties"
                    },
                    "param": [
                        {
                            "@optional": "true",
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pLayerName",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkExtensionProperties",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkEnumerateDeviceLayerProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkLayerProperties",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_LAYER_NOT_PRESENT",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkEnumerateDeviceExtensionProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "true",
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pLayerName",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkExtensionProperties",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetDeviceQueue"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueIndex"
                        },
                        {
                            "type": "VkQueue",
                            "name": "pQueue",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkQueueSubmit"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkQueue",
                            "name": "queue"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "submitCount"
                        },
                        {
                            "@len": "submitCount",
                            "type": "VkSubmitInfo",
                            "name": "pSubmits",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkFence",
                            "name": "fence"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkQueueWaitIdle"
                    },
                    "param": {
                        "@externsync": "true",
                        "type": "VkQueue",
                        "name": "queue"
                    }
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkDeviceWaitIdle"
                    },
                    "param": {
                        "type": "VkDevice",
                        "name": "device"
                    },
                    "implicitexternsyncparams": {
                        "param": "all sname:VkQueue objects created from pname:device"
                    }
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE,VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAllocateMemory"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkMemoryAllocateInfo",
                            "name": "pAllocateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "pMemory",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkFreeMemory"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_MEMORY_MAP_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkMapMemory"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size"
                        },
                        {
                            "@optional": "true",
                            "type": "VkMemoryMapFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "false,true",
                            "type": "void",
                            "name": "ppData",
                            "#text": "**"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkUnmapMemory"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkFlushMappedMemoryRanges"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryRangeCount"
                        },
                        {
                            "@len": "memoryRangeCount",
                            "type": "VkMappedMemoryRange",
                            "name": "pMemoryRanges",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkInvalidateMappedMemoryRanges"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "memoryRangeCount"
                        },
                        {
                            "@len": "memoryRangeCount",
                            "type": "VkMappedMemoryRange",
                            "name": "pMemoryRanges",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetDeviceMemoryCommitment"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "pCommittedMemoryInBytes",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetBufferMemoryRequirements"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkMemoryRequirements",
                            "name": "pMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkBindBufferMemory"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "memoryOffset"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetImageMemoryRequirements"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "VkMemoryRequirements",
                            "name": "pMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkBindImageMemory"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "memoryOffset"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetImageSparseMemoryRequirements"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pSparseMemoryRequirementCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pSparseMemoryRequirementCount",
                            "type": "VkSparseImageMemoryRequirements",
                            "name": "pSparseMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceSparseImageFormatProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkImageType",
                            "name": "type"
                        },
                        {
                            "type": "VkSampleCountFlagBits",
                            "name": "samples"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "usage"
                        },
                        {
                            "type": "VkImageTiling",
                            "name": "tiling"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkSparseImageFormatProperties",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "sparse_binding",
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkQueueBindSparse"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkQueue",
                            "name": "queue"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "bindInfoCount"
                        },
                        {
                            "@len": "bindInfoCount",
                            "@externsync": "pBindInfo[].pBufferBinds[].buffer,pBindInfo[].pImageOpaqueBinds[].image,pBindInfo[].pImageBinds[].image",
                            "type": "VkBindSparseInfo",
                            "name": "pBindInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkFence",
                            "name": "fence"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateFence"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkFenceCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFence",
                            "name": "pFence",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyFence"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkFence",
                            "name": "fence"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkResetFences"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "fenceCount"
                        },
                        {
                            "@len": "fenceCount",
                            "@externsync": "true",
                            "type": "VkFence",
                            "name": "pFences",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_NOT_READY",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetFenceStatus"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkFence",
                            "name": "fence"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_TIMEOUT",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkWaitForFences"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "fenceCount"
                        },
                        {
                            "@len": "fenceCount",
                            "type": "VkFence",
                            "name": "pFences",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBool32",
                            "name": "waitAll"
                        },
                        {
                            "type": "uint64_t",
                            "name": "timeout"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateSemaphore"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSemaphoreCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSemaphore",
                            "name": "pSemaphore",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroySemaphore"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateEvent"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkEventCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkEvent",
                            "name": "pEvent",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyEvent"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkEvent",
                            "name": "event"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_EVENT_SET,VK_EVENT_RESET",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetEventStatus"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkEvent",
                            "name": "event"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkSetEvent"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkEvent",
                            "name": "event"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkResetEvent"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkEvent",
                            "name": "event"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateQueryPool"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkQueryPoolCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "pQueryPool",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyQueryPool"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_NOT_READY",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetQueryPoolResults"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstQuery"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queryCount"
                        },
                        {
                            "type": "size_t",
                            "name": "dataSize"
                        },
                        {
                            "@len": "dataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "*"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "stride"
                        },
                        {
                            "@optional": "true",
                            "type": "VkQueryResultFlags",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkResetQueryPool"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstQuery"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queryCount"
                        }
                    ]
                },
                {
                    "@name": "vkResetQueryPoolEXT",
                    "@alias": "vkResetQueryPool"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateBuffer"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBufferCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "pBuffer",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyBuffer"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateBufferView"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBufferViewCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBufferView",
                            "name": "pView",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyBufferView"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkBufferView",
                            "name": "bufferView"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateImage"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImageCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImage",
                            "name": "pImage",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyImage"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetImageSubresourceLayout"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "VkImageSubresource",
                            "name": "pSubresource",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSubresourceLayout",
                            "name": "pLayout",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateImageView"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImageViewCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageView",
                            "name": "pView",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyImageView"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkImageView",
                            "name": "imageView"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INVALID_SHADER_NV",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateShaderModule"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkShaderModuleCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkShaderModule",
                            "name": "pShaderModule",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyShaderModule"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkShaderModule",
                            "name": "shaderModule"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreatePipelineCache"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipelineCacheCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPipelineCache",
                            "name": "pPipelineCache",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyPipelineCache"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkPipelineCache",
                            "name": "pipelineCache"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPipelineCacheData"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipelineCache",
                            "name": "pipelineCache"
                        },
                        {
                            "@optional": "false,true",
                            "type": "size_t",
                            "name": "pDataSize",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pDataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkMergePipelineCaches"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkPipelineCache",
                            "name": "dstCache"
                        },
                        {
                            "type": "uint32_t",
                            "name": "srcCacheCount"
                        },
                        {
                            "@len": "srcCacheCount",
                            "type": "VkPipelineCache",
                            "name": "pSrcCaches",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_PIPELINE_COMPILE_REQUIRED_EXT",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INVALID_SHADER_NV",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateGraphicsPipelines"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCache",
                            "name": "pipelineCache"
                        },
                        {
                            "type": "uint32_t",
                            "name": "createInfoCount"
                        },
                        {
                            "@len": "createInfoCount",
                            "type": "VkGraphicsPipelineCreateInfo",
                            "name": "pCreateInfos",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "@len": "createInfoCount",
                            "type": "VkPipeline",
                            "name": "pPipelines",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_PIPELINE_COMPILE_REQUIRED_EXT",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INVALID_SHADER_NV",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateComputePipelines"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCache",
                            "name": "pipelineCache"
                        },
                        {
                            "type": "uint32_t",
                            "name": "createInfoCount"
                        },
                        {
                            "@len": "createInfoCount",
                            "type": "VkComputePipelineCreateInfo",
                            "name": "pCreateInfos",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "@len": "createInfoCount",
                            "type": "VkPipeline",
                            "name": "pPipelines",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkRenderPass",
                            "name": "renderpass"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "pMaxWorkgroupSize",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyPipeline"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkPipeline",
                            "name": "pipeline"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreatePipelineLayout"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipelineLayoutCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPipelineLayout",
                            "name": "pPipelineLayout",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyPipelineLayout"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkPipelineLayout",
                            "name": "pipelineLayout"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateSampler"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSamplerCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSampler",
                            "name": "pSampler",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroySampler"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkSampler",
                            "name": "sampler"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateDescriptorSetLayout"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDescriptorSetLayoutCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDescriptorSetLayout",
                            "name": "pSetLayout",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyDescriptorSetLayout"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkDescriptorSetLayout",
                            "name": "descriptorSetLayout"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_FRAGMENTATION_EXT",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateDescriptorPool"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDescriptorPoolCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDescriptorPool",
                            "name": "pDescriptorPool",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyDescriptorPool"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkDescriptorPool",
                            "name": "descriptorPool"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkResetDescriptorPool"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkDescriptorPool",
                            "name": "descriptorPool"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDescriptorPoolResetFlags",
                            "name": "flags"
                        }
                    ],
                    "implicitexternsyncparams": {
                        "param": "any sname:VkDescriptorSet objects allocated from pname:descriptorPool"
                    }
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_FRAGMENTED_POOL,VK_ERROR_OUT_OF_POOL_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAllocateDescriptorSets"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "pAllocateInfo::descriptorPool",
                            "type": "VkDescriptorSetAllocateInfo",
                            "name": "pAllocateInfo",
                            "#text": "const *"
                        },
                        {
                            "@len": "pAllocateInfo::descriptorSetCount",
                            "type": "VkDescriptorSet",
                            "name": "pDescriptorSets",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkFreeDescriptorSets"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkDescriptorPool",
                            "name": "descriptorPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "descriptorSetCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@externsync": "true",
                            "@len": "descriptorSetCount",
                            "type": "VkDescriptorSet",
                            "name": "pDescriptorSets",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkUpdateDescriptorSets"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "descriptorWriteCount"
                        },
                        {
                            "@len": "descriptorWriteCount",
                            "@externsync": "pDescriptorWrites[].dstSet",
                            "type": "VkWriteDescriptorSet",
                            "name": "pDescriptorWrites",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "descriptorCopyCount"
                        },
                        {
                            "@len": "descriptorCopyCount",
                            "@externsync": "pDescriptorCopies[].dstSet",
                            "type": "VkCopyDescriptorSet",
                            "name": "pDescriptorCopies",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateFramebuffer"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkFramebufferCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFramebuffer",
                            "name": "pFramebuffer",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyFramebuffer"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkFramebuffer",
                            "name": "framebuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateRenderPass"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkRenderPassCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkRenderPass",
                            "name": "pRenderPass",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyRenderPass"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkRenderPass",
                            "name": "renderPass"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetRenderAreaGranularity"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkRenderPass",
                            "name": "renderPass"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "pGranularity",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateCommandPool"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkCommandPoolCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkCommandPool",
                            "name": "pCommandPool",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyCommandPool"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkCommandPool",
                            "name": "commandPool"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkResetCommandPool"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkCommandPool",
                            "name": "commandPool"
                        },
                        {
                            "@optional": "true",
                            "type": "VkCommandPoolResetFlags",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAllocateCommandBuffers"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "pAllocateInfo::commandPool",
                            "type": "VkCommandBufferAllocateInfo",
                            "name": "pAllocateInfo",
                            "#text": "const *"
                        },
                        {
                            "@len": "pAllocateInfo::commandBufferCount",
                            "type": "VkCommandBuffer",
                            "name": "pCommandBuffers",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkFreeCommandBuffers"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkCommandPool",
                            "name": "commandPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "commandBufferCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@externsync": "true",
                            "@len": "commandBufferCount",
                            "type": "VkCommandBuffer",
                            "name": "pCommandBuffers",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkBeginCommandBuffer"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCommandBufferBeginInfo",
                            "name": "pBeginInfo",
                            "#text": "const *"
                        }
                    ],
                    "implicitexternsyncparams": {
                        "param": "the sname:VkCommandPool that pname:commandBuffer was allocated from"
                    }
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkEndCommandBuffer"
                    },
                    "param": {
                        "@externsync": "true",
                        "type": "VkCommandBuffer",
                        "name": "commandBuffer"
                    },
                    "implicitexternsyncparams": {
                        "param": "the sname:VkCommandPool that pname:commandBuffer was allocated from"
                    }
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkResetCommandBuffer"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "VkCommandBufferResetFlags",
                            "name": "flags"
                        }
                    ],
                    "implicitexternsyncparams": {
                        "param": "the sname:VkCommandPool that pname:commandBuffer was allocated from"
                    }
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBindPipeline"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkPipelineBindPoint",
                            "name": "pipelineBindPoint"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetViewport"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstViewport"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewportCount"
                        },
                        {
                            "@len": "viewportCount",
                            "type": "VkViewport",
                            "name": "pViewports",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetScissor"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstScissor"
                        },
                        {
                            "type": "uint32_t",
                            "name": "scissorCount"
                        },
                        {
                            "@len": "scissorCount",
                            "type": "VkRect2D",
                            "name": "pScissors",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetLineWidth"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "float",
                            "name": "lineWidth"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetDepthBias"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "float",
                            "name": "depthBiasConstantFactor"
                        },
                        {
                            "type": "float",
                            "name": "depthBiasClamp"
                        },
                        {
                            "type": "float",
                            "name": "depthBiasSlopeFactor"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetBlendConstants"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "float",
                            "name": "blendConstants",
                            "#text": "const  [4]"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetDepthBounds"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "float",
                            "name": "minDepthBounds"
                        },
                        {
                            "type": "float",
                            "name": "maxDepthBounds"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetStencilCompareMask"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkStencilFaceFlags",
                            "name": "faceMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "compareMask"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetStencilWriteMask"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkStencilFaceFlags",
                            "name": "faceMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "writeMask"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetStencilReference"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkStencilFaceFlags",
                            "name": "faceMask"
                        },
                        {
                            "type": "uint32_t",
                            "name": "reference"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBindDescriptorSets"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkPipelineBindPoint",
                            "name": "pipelineBindPoint"
                        },
                        {
                            "type": "VkPipelineLayout",
                            "name": "layout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstSet"
                        },
                        {
                            "type": "uint32_t",
                            "name": "descriptorSetCount"
                        },
                        {
                            "@len": "descriptorSetCount",
                            "type": "VkDescriptorSet",
                            "name": "pDescriptorSets",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "dynamicOffsetCount"
                        },
                        {
                            "@len": "dynamicOffsetCount",
                            "type": "uint32_t",
                            "name": "pDynamicOffsets",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBindIndexBuffer"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        },
                        {
                            "type": "VkIndexType",
                            "name": "indexType"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBindVertexBuffers"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstBinding"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bindingCount"
                        },
                        {
                            "@len": "bindingCount",
                            "@optional": "false,true",
                            "type": "VkBuffer",
                            "name": "pBuffers",
                            "#text": "const *"
                        },
                        {
                            "@len": "bindingCount",
                            "type": "VkDeviceSize",
                            "name": "pOffsets",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDraw"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "vertexCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstVertex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstInstance"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawIndexed"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "indexCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstIndex"
                        },
                        {
                            "type": "int32_t",
                            "name": "vertexOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstInstance"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawMultiEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "drawCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "drawCount",
                            "type": "VkMultiDrawInfoEXT",
                            "name": "pVertexInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstInstance"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawMultiIndexedEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "drawCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "drawCount",
                            "type": "VkMultiDrawIndexedInfoEXT",
                            "name": "pIndexInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstInstance"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride"
                        },
                        {
                            "@optional": "true",
                            "type": "int32_t",
                            "name": "pVertexOffset",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawIndirect"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "drawCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawIndexedIndirect"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "drawCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDispatch"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupCountX"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupCountY"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupCountZ"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDispatchIndirect"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSubpassShadingHUAWEI"
                    },
                    "param": {
                        "@externsync": "true",
                        "type": "VkCommandBuffer",
                        "name": "commandBuffer"
                    }
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyBuffer"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "srcBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "dstBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkBufferCopy",
                            "name": "pRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyImage"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkImage",
                            "name": "srcImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "srcImageLayout"
                        },
                        {
                            "type": "VkImage",
                            "name": "dstImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "dstImageLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkImageCopy",
                            "name": "pRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBlitImage"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkImage",
                            "name": "srcImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "srcImageLayout"
                        },
                        {
                            "type": "VkImage",
                            "name": "dstImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "dstImageLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkImageBlit",
                            "name": "pRegions",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFilter",
                            "name": "filter"
                        }
                    ]
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyBufferToImage"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "srcBuffer"
                        },
                        {
                            "type": "VkImage",
                            "name": "dstImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "dstImageLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkBufferImageCopy",
                            "name": "pRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyImageToBuffer"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkImage",
                            "name": "srcImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "srcImageLayout"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "dstBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkBufferImageCopy",
                            "name": "pRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdUpdateBuffer"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "dstBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "dstOffset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "dataSize"
                        },
                        {
                            "@len": "dataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "@comment": "transfer support is only available when VK_KHR_maintenance1 is enabled, as documented in valid usage language in the specification",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdFillBuffer"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "dstBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "dstOffset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "size"
                        },
                        {
                            "type": "uint32_t",
                            "name": "data"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdClearColorImage"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "imageLayout"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "VkClearColorValue",
                            "name": "pColor",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "rangeCount"
                        },
                        {
                            "@len": "rangeCount",
                            "type": "VkImageSubresourceRange",
                            "name": "pRanges",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdClearDepthStencilImage"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "imageLayout"
                        },
                        {
                            "type": "VkClearDepthStencilValue",
                            "name": "pDepthStencil",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "rangeCount"
                        },
                        {
                            "@len": "rangeCount",
                            "type": "VkImageSubresourceRange",
                            "name": "pRanges",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdClearAttachments"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "attachmentCount"
                        },
                        {
                            "@len": "attachmentCount",
                            "type": "VkClearAttachment",
                            "name": "pAttachments",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "rectCount"
                        },
                        {
                            "@len": "rectCount",
                            "type": "VkClearRect",
                            "name": "pRects",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdResolveImage"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkImage",
                            "name": "srcImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "srcImageLayout"
                        },
                        {
                            "type": "VkImage",
                            "name": "dstImage"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "dstImageLayout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "regionCount"
                        },
                        {
                            "@len": "regionCount",
                            "type": "VkImageResolve",
                            "name": "pRegions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetEvent"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkEvent",
                            "name": "event"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags",
                            "name": "stageMask"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdResetEvent"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkEvent",
                            "name": "event"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags",
                            "name": "stageMask"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdWaitEvents"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "eventCount"
                        },
                        {
                            "@len": "eventCount",
                            "type": "VkEvent",
                            "name": "pEvents",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags",
                            "name": "srcStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags",
                            "name": "dstStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "memoryBarrierCount"
                        },
                        {
                            "@len": "memoryBarrierCount",
                            "type": "VkMemoryBarrier",
                            "name": "pMemoryBarriers",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "bufferMemoryBarrierCount"
                        },
                        {
                            "@len": "bufferMemoryBarrierCount",
                            "type": "VkBufferMemoryBarrier",
                            "name": "pBufferMemoryBarriers",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "imageMemoryBarrierCount"
                        },
                        {
                            "@len": "imageMemoryBarrierCount",
                            "type": "VkImageMemoryBarrier",
                            "name": "pImageMemoryBarriers",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdPipelineBarrier"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags",
                            "name": "srcStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags",
                            "name": "dstStageMask"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDependencyFlags",
                            "name": "dependencyFlags"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "memoryBarrierCount"
                        },
                        {
                            "@len": "memoryBarrierCount",
                            "type": "VkMemoryBarrier",
                            "name": "pMemoryBarriers",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "bufferMemoryBarrierCount"
                        },
                        {
                            "@len": "bufferMemoryBarrierCount",
                            "type": "VkBufferMemoryBarrier",
                            "name": "pBufferMemoryBarriers",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "imageMemoryBarrierCount"
                        },
                        {
                            "@len": "imageMemoryBarrierCount",
                            "type": "VkImageMemoryBarrier",
                            "name": "pImageMemoryBarriers",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute,decode,encode",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBeginQuery"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "query"
                        },
                        {
                            "@optional": "true",
                            "type": "VkQueryControlFlags",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute,decode,encode",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdEndQuery"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "query"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBeginConditionalRenderingEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkConditionalRenderingBeginInfoEXT",
                            "name": "pConditionalRenderingBegin",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdEndConditionalRenderingEXT"
                    },
                    "param": {
                        "@externsync": "true",
                        "type": "VkCommandBuffer",
                        "name": "commandBuffer"
                    }
                },
                {
                    "@queues": "graphics,compute,decode,encode",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdResetQueryPool"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstQuery"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queryCount"
                        }
                    ]
                },
                {
                    "@queues": "transfer,graphics,compute,decode,encode",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdWriteTimestamp"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkPipelineStageFlagBits",
                            "name": "pipelineStage"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "query"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyQueryPoolResults"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstQuery"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queryCount"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "dstBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "dstOffset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "stride"
                        },
                        {
                            "@optional": "true",
                            "type": "VkQueryResultFlags",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdPushConstants"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkPipelineLayout",
                            "name": "layout"
                        },
                        {
                            "type": "VkShaderStageFlags",
                            "name": "stageFlags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "offset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "size"
                        },
                        {
                            "@len": "size",
                            "type": "void",
                            "name": "pValues",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBeginRenderPass"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkRenderPassBeginInfo",
                            "name": "pRenderPassBegin",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSubpassContents",
                            "name": "contents"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdNextSubpass"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkSubpassContents",
                            "name": "contents"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdEndRenderPass"
                    },
                    "param": {
                        "@externsync": "true",
                        "type": "VkCommandBuffer",
                        "name": "commandBuffer"
                    }
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdExecuteCommands"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "commandBufferCount"
                        },
                        {
                            "@len": "commandBufferCount",
                            "type": "VkCommandBuffer",
                            "name": "pCommandBuffers",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateAndroidSurfaceKHR"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkAndroidSurfaceCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceDisplayPropertiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkDisplayPropertiesKHR",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceDisplayPlanePropertiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkDisplayPlanePropertiesKHR",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDisplayPlaneSupportedDisplaysKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "uint32_t",
                            "name": "planeIndex"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pDisplayCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pDisplayCount",
                            "type": "VkDisplayKHR",
                            "name": "pDisplays",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDisplayModePropertiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "display"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkDisplayModePropertiesKHR",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateDisplayModeKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkDisplayKHR",
                            "name": "display"
                        },
                        {
                            "type": "VkDisplayModeCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDisplayModeKHR",
                            "name": "pMode",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDisplayPlaneCapabilitiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkDisplayModeKHR",
                            "name": "mode"
                        },
                        {
                            "type": "uint32_t",
                            "name": "planeIndex"
                        },
                        {
                            "type": "VkDisplayPlaneCapabilitiesKHR",
                            "name": "pCapabilities",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateDisplayPlaneSurfaceKHR"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkDisplaySurfaceCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INCOMPATIBLE_DISPLAY_KHR,VK_ERROR_DEVICE_LOST,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateSharedSwapchainsKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "swapchainCount"
                        },
                        {
                            "@len": "swapchainCount",
                            "@externsync": "pCreateInfos[].surface,pCreateInfos[].oldSwapchain",
                            "type": "VkSwapchainCreateInfoKHR",
                            "name": "pCreateInfos",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "@len": "swapchainCount",
                            "type": "VkSwapchainKHR",
                            "name": "pSwapchains",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroySurfaceKHR"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkSurfaceKHR",
                            "name": "surface"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceSurfaceSupportKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "surface"
                        },
                        {
                            "type": "VkBool32",
                            "name": "pSupported",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceSurfaceCapabilitiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "surface"
                        },
                        {
                            "type": "VkSurfaceCapabilitiesKHR",
                            "name": "pSurfaceCapabilities",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceSurfaceFormatsKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSurfaceKHR",
                            "name": "surface"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pSurfaceFormatCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pSurfaceFormatCount",
                            "type": "VkSurfaceFormatKHR",
                            "name": "pSurfaceFormats",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceSurfacePresentModesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "true",
                            "type": "VkSurfaceKHR",
                            "name": "surface"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPresentModeCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPresentModeCount",
                            "type": "VkPresentModeKHR",
                            "name": "pPresentModes",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_SURFACE_LOST_KHR,VK_ERROR_NATIVE_WINDOW_IN_USE_KHR,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateSwapchainKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "pCreateInfo::surface,pCreateInfo::oldSwapchain",
                            "type": "VkSwapchainCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSwapchainKHR",
                            "name": "pSwapchain",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroySwapchainKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetSwapchainImagesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pSwapchainImageCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pSwapchainImageCount",
                            "type": "VkImage",
                            "name": "pSwapchainImages",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_TIMEOUT,VK_NOT_READY,VK_SUBOPTIMAL_KHR",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_OUT_OF_DATE_KHR,VK_ERROR_SURFACE_LOST_KHR,VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAcquireNextImageKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        },
                        {
                            "type": "uint64_t",
                            "name": "timeout"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkFence",
                            "name": "fence"
                        },
                        {
                            "type": "uint32_t",
                            "name": "pImageIndex",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_SUBOPTIMAL_KHR",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_OUT_OF_DATE_KHR,VK_ERROR_SURFACE_LOST_KHR,VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkQueuePresentKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkQueue",
                            "name": "queue"
                        },
                        {
                            "@externsync": "pPresentInfo::pWaitSemaphores[],pPresentInfo::pSwapchains[]",
                            "type": "VkPresentInfoKHR",
                            "name": "pPresentInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateViSurfaceNN"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkViSurfaceCreateInfoNN",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateWaylandSurfaceKHR"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkWaylandSurfaceCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkBool32",
                        "name": "vkGetPhysicalDeviceWaylandPresentationSupportKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "type": "wl_display",
                            "name": "display",
                            "#text": "struct *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateWin32SurfaceKHR"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkWin32SurfaceCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkBool32",
                        "name": "vkGetPhysicalDeviceWin32PresentationSupportKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateXlibSurfaceKHR"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkXlibSurfaceCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkBool32",
                        "name": "vkGetPhysicalDeviceXlibPresentationSupportKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "type": "Display",
                            "name": "dpy",
                            "#text": "*"
                        },
                        {
                            "type": "VisualID",
                            "name": "visualID"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateXcbSurfaceKHR"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkXcbSurfaceCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkBool32",
                        "name": "vkGetPhysicalDeviceXcbPresentationSupportKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "type": "xcb_connection_t",
                            "name": "connection",
                            "#text": "*"
                        },
                        {
                            "type": "xcb_visualid_t",
                            "name": "visual_id"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateDirectFBSurfaceEXT"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkDirectFBSurfaceCreateInfoEXT",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkBool32",
                        "name": "vkGetPhysicalDeviceDirectFBPresentationSupportEXT"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "type": "IDirectFB",
                            "name": "dfb",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateImagePipeSurfaceFUCHSIA"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkImagePipeSurfaceCreateInfoFUCHSIA",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateStreamDescriptorSurfaceGGP"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkStreamDescriptorSurfaceCreateInfoGGP",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateScreenSurfaceQNX"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkScreenSurfaceCreateInfoQNX",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkBool32",
                        "name": "vkGetPhysicalDeviceScreenPresentationSupportQNX"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "type": "_screen_window",
                            "name": "window",
                            "#text": "struct *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateDebugReportCallbackEXT"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkDebugReportCallbackCreateInfoEXT",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDebugReportCallbackEXT",
                            "name": "pCallback",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyDebugReportCallbackEXT"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkDebugReportCallbackEXT",
                            "name": "callback"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDebugReportMessageEXT"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkDebugReportFlagsEXT",
                            "name": "flags"
                        },
                        {
                            "type": "VkDebugReportObjectTypeEXT",
                            "name": "objectType"
                        },
                        {
                            "@objecttype": "objectType",
                            "type": "uint64_t",
                            "name": "object"
                        },
                        {
                            "type": "size_t",
                            "name": "location"
                        },
                        {
                            "type": "int32_t",
                            "name": "messageCode"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pLayerPrefix",
                            "#text": "const *"
                        },
                        {
                            "@len": "null-terminated",
                            "type": "char",
                            "name": "pMessage",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkDebugMarkerSetObjectNameEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "pNameInfo::object",
                            "type": "VkDebugMarkerObjectNameInfoEXT",
                            "name": "pNameInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkDebugMarkerSetObjectTagEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "pTagInfo::object",
                            "type": "VkDebugMarkerObjectTagInfoEXT",
                            "name": "pTagInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDebugMarkerBeginEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkDebugMarkerMarkerInfoEXT",
                            "name": "pMarkerInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDebugMarkerEndEXT"
                    },
                    "param": {
                        "@externsync": "true",
                        "type": "VkCommandBuffer",
                        "name": "commandBuffer"
                    }
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDebugMarkerInsertEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkDebugMarkerMarkerInfoEXT",
                            "name": "pMarkerInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_FORMAT_NOT_SUPPORTED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceExternalImageFormatPropertiesNV"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkImageType",
                            "name": "type"
                        },
                        {
                            "type": "VkImageTiling",
                            "name": "tiling"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "usage"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageCreateFlags",
                            "name": "flags"
                        },
                        {
                            "@optional": "true",
                            "type": "VkExternalMemoryHandleTypeFlagsNV",
                            "name": "externalHandleType"
                        },
                        {
                            "type": "VkExternalImageFormatPropertiesNV",
                            "name": "pExternalImageFormatProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetMemoryWin32HandleNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagsNV",
                            "name": "handleType"
                        },
                        {
                            "type": "HANDLE",
                            "name": "pHandle",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdExecuteGeneratedCommandsNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "isPreprocessed"
                        },
                        {
                            "type": "VkGeneratedCommandsInfoNV",
                            "name": "pGeneratedCommandsInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdPreprocessGeneratedCommandsNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkGeneratedCommandsInfoNV",
                            "name": "pGeneratedCommandsInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBindPipelineShaderGroupNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkPipelineBindPoint",
                            "name": "pipelineBindPoint"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupIndex"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetGeneratedCommandsMemoryRequirementsNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkGeneratedCommandsMemoryRequirementsInfoNV",
                            "name": "pInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkMemoryRequirements2",
                            "name": "pMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateIndirectCommandsLayoutNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkIndirectCommandsLayoutCreateInfoNV",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkIndirectCommandsLayoutNV",
                            "name": "pIndirectCommandsLayout",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyIndirectCommandsLayoutNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkIndirectCommandsLayoutNV",
                            "name": "indirectCommandsLayout"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceFeatures2"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceFeatures2",
                            "name": "pFeatures",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceFeatures2KHR",
                    "@alias": "vkGetPhysicalDeviceFeatures2"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceProperties2"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceProperties2",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceProperties2KHR",
                    "@alias": "vkGetPhysicalDeviceProperties2"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceFormatProperties2"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkFormatProperties2",
                            "name": "pFormatProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceFormatProperties2KHR",
                    "@alias": "vkGetPhysicalDeviceFormatProperties2"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_FORMAT_NOT_SUPPORTED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceImageFormatProperties2"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceImageFormatInfo2",
                            "name": "pImageFormatInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImageFormatProperties2",
                            "name": "pImageFormatProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceImageFormatProperties2KHR",
                    "@alias": "vkGetPhysicalDeviceImageFormatProperties2"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceQueueFamilyProperties2"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pQueueFamilyPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pQueueFamilyPropertyCount",
                            "type": "VkQueueFamilyProperties2",
                            "name": "pQueueFamilyProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceQueueFamilyProperties2KHR",
                    "@alias": "vkGetPhysicalDeviceQueueFamilyProperties2"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceMemoryProperties2"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceMemoryProperties2",
                            "name": "pMemoryProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceMemoryProperties2KHR",
                    "@alias": "vkGetPhysicalDeviceMemoryProperties2"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceSparseImageFormatProperties2"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceSparseImageFormatInfo2",
                            "name": "pFormatInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkSparseImageFormatProperties2",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceSparseImageFormatProperties2KHR",
                    "@alias": "vkGetPhysicalDeviceSparseImageFormatProperties2"
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdPushDescriptorSetKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkPipelineBindPoint",
                            "name": "pipelineBindPoint"
                        },
                        {
                            "type": "VkPipelineLayout",
                            "name": "layout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "set"
                        },
                        {
                            "type": "uint32_t",
                            "name": "descriptorWriteCount"
                        },
                        {
                            "@len": "descriptorWriteCount",
                            "type": "VkWriteDescriptorSet",
                            "name": "pDescriptorWrites",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkTrimCommandPool"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkCommandPool",
                            "name": "commandPool"
                        },
                        {
                            "@optional": "true",
                            "type": "VkCommandPoolTrimFlags",
                            "name": "flags"
                        }
                    ]
                },
                {
                    "@name": "vkTrimCommandPoolKHR",
                    "@alias": "vkTrimCommandPool"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceExternalBufferProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceExternalBufferInfo",
                            "name": "pExternalBufferInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkExternalBufferProperties",
                            "name": "pExternalBufferProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceExternalBufferPropertiesKHR",
                    "@alias": "vkGetPhysicalDeviceExternalBufferProperties"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetMemoryWin32HandleKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkMemoryGetWin32HandleInfoKHR",
                            "name": "pGetWin32HandleInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "HANDLE",
                            "name": "pHandle",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetMemoryWin32HandlePropertiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "type": "HANDLE",
                            "name": "handle"
                        },
                        {
                            "type": "VkMemoryWin32HandlePropertiesKHR",
                            "name": "pMemoryWin32HandleProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetMemoryFdKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkMemoryGetFdInfoKHR",
                            "name": "pGetFdInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "int",
                            "name": "pFd",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetMemoryFdPropertiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "type": "int",
                            "name": "fd"
                        },
                        {
                            "type": "VkMemoryFdPropertiesKHR",
                            "name": "pMemoryFdProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetMemoryZirconHandleFUCHSIA"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkMemoryGetZirconHandleInfoFUCHSIA",
                            "name": "pGetZirconHandleInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "zx_handle_t",
                            "name": "pZirconHandle",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_INVALID_EXTERNAL_HANDLE",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetMemoryZirconHandlePropertiesFUCHSIA"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "type": "zx_handle_t",
                            "name": "zirconHandle"
                        },
                        {
                            "type": "VkMemoryZirconHandlePropertiesFUCHSIA",
                            "name": "pMemoryZirconHandleProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_INVALID_EXTERNAL_HANDLE",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetMemoryRemoteAddressNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkMemoryGetRemoteAddressInfoNV",
                            "name": "pMemoryGetRemoteAddressInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkRemoteAddressNV",
                            "name": "pAddress",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceExternalSemaphoreProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceExternalSemaphoreInfo",
                            "name": "pExternalSemaphoreInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkExternalSemaphoreProperties",
                            "name": "pExternalSemaphoreProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR",
                    "@alias": "vkGetPhysicalDeviceExternalSemaphoreProperties"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetSemaphoreWin32HandleKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSemaphoreGetWin32HandleInfoKHR",
                            "name": "pGetWin32HandleInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "HANDLE",
                            "name": "pHandle",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkImportSemaphoreWin32HandleKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImportSemaphoreWin32HandleInfoKHR",
                            "name": "pImportSemaphoreWin32HandleInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetSemaphoreFdKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSemaphoreGetFdInfoKHR",
                            "name": "pGetFdInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "int",
                            "name": "pFd",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkImportSemaphoreFdKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImportSemaphoreFdInfoKHR",
                            "name": "pImportSemaphoreFdInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetSemaphoreZirconHandleFUCHSIA"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSemaphoreGetZirconHandleInfoFUCHSIA",
                            "name": "pGetZirconHandleInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "zx_handle_t",
                            "name": "pZirconHandle",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkImportSemaphoreZirconHandleFUCHSIA"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImportSemaphoreZirconHandleInfoFUCHSIA",
                            "name": "pImportSemaphoreZirconHandleInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceExternalFenceProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceExternalFenceInfo",
                            "name": "pExternalFenceInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkExternalFenceProperties",
                            "name": "pExternalFenceProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceExternalFencePropertiesKHR",
                    "@alias": "vkGetPhysicalDeviceExternalFenceProperties"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetFenceWin32HandleKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkFenceGetWin32HandleInfoKHR",
                            "name": "pGetWin32HandleInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "HANDLE",
                            "name": "pHandle",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkImportFenceWin32HandleKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImportFenceWin32HandleInfoKHR",
                            "name": "pImportFenceWin32HandleInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetFenceFdKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkFenceGetFdInfoKHR",
                            "name": "pGetFdInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "int",
                            "name": "pFd",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkImportFenceFdKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImportFenceFdInfoKHR",
                            "name": "pImportFenceFdInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkReleaseDisplayEXT"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "display"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAcquireXlibDisplayEXT"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "Display",
                            "name": "dpy",
                            "#text": "*"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "display"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetRandROutputDisplayEXT"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "Display",
                            "name": "dpy",
                            "#text": "*"
                        },
                        {
                            "type": "RROutput",
                            "name": "rrOutput"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "pDisplay",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAcquireWinrtDisplayNV"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "display"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetWinrtDisplayNV"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "uint32_t",
                            "name": "deviceRelativeId"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "pDisplay",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkDisplayPowerControlEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "display"
                        },
                        {
                            "type": "VkDisplayPowerInfoEXT",
                            "name": "pDisplayPowerInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkRegisterDeviceEventEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeviceEventInfoEXT",
                            "name": "pDeviceEventInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFence",
                            "name": "pFence",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkRegisterDisplayEventEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "display"
                        },
                        {
                            "type": "VkDisplayEventInfoEXT",
                            "name": "pDisplayEventInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFence",
                            "name": "pFence",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_OUT_OF_DATE_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetSwapchainCounterEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        },
                        {
                            "type": "VkSurfaceCounterFlagBitsEXT",
                            "name": "counter"
                        },
                        {
                            "type": "uint64_t",
                            "name": "pCounterValue",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceSurfaceCapabilities2EXT"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "surface"
                        },
                        {
                            "type": "VkSurfaceCapabilities2EXT",
                            "name": "pSurfaceCapabilities",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkEnumeratePhysicalDeviceGroups"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPhysicalDeviceGroupCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPhysicalDeviceGroupCount",
                            "type": "VkPhysicalDeviceGroupProperties",
                            "name": "pPhysicalDeviceGroupProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkEnumeratePhysicalDeviceGroupsKHR",
                    "@alias": "vkEnumeratePhysicalDeviceGroups"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetDeviceGroupPeerMemoryFeatures"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "heapIndex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "localDeviceIndex"
                        },
                        {
                            "type": "uint32_t",
                            "name": "remoteDeviceIndex"
                        },
                        {
                            "type": "VkPeerMemoryFeatureFlags",
                            "name": "pPeerMemoryFeatures",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetDeviceGroupPeerMemoryFeaturesKHR",
                    "@alias": "vkGetDeviceGroupPeerMemoryFeatures"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkBindBufferMemory2"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bindInfoCount"
                        },
                        {
                            "@len": "bindInfoCount",
                            "type": "VkBindBufferMemoryInfo",
                            "name": "pBindInfos",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkBindBufferMemory2KHR",
                    "@alias": "vkBindBufferMemory2"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkBindImageMemory2"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bindInfoCount"
                        },
                        {
                            "@len": "bindInfoCount",
                            "type": "VkBindImageMemoryInfo",
                            "name": "pBindInfos",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkBindImageMemory2KHR",
                    "@alias": "vkBindImageMemory2"
                },
                {
                    "@queues": "graphics,compute,transfer",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetDeviceMask"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "deviceMask"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetDeviceMaskKHR",
                    "@alias": "vkCmdSetDeviceMask"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDeviceGroupPresentCapabilitiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeviceGroupPresentCapabilitiesKHR",
                            "name": "pDeviceGroupPresentCapabilities",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDeviceGroupSurfacePresentModesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSurfaceKHR",
                            "name": "surface"
                        },
                        {
                            "@optional": "false,true",
                            "type": "VkDeviceGroupPresentModeFlagsKHR",
                            "name": "pModes",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_TIMEOUT,VK_NOT_READY,VK_SUBOPTIMAL_KHR",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_OUT_OF_DATE_KHR,VK_ERROR_SURFACE_LOST_KHR,VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAcquireNextImage2KHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkAcquireNextImageInfoKHR",
                            "name": "pAcquireInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "pImageIndex",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDispatchBase"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "baseGroupX"
                        },
                        {
                            "type": "uint32_t",
                            "name": "baseGroupY"
                        },
                        {
                            "type": "uint32_t",
                            "name": "baseGroupZ"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupCountX"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupCountY"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupCountZ"
                        }
                    ]
                },
                {
                    "@name": "vkCmdDispatchBaseKHR",
                    "@alias": "vkCmdDispatchBase"
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDevicePresentRectanglesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSurfaceKHR",
                            "name": "surface"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pRectCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pRectCount",
                            "type": "VkRect2D",
                            "name": "pRects",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateDescriptorUpdateTemplate"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDescriptorUpdateTemplateCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDescriptorUpdateTemplate",
                            "name": "pDescriptorUpdateTemplate",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkCreateDescriptorUpdateTemplateKHR",
                    "@alias": "vkCreateDescriptorUpdateTemplate"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyDescriptorUpdateTemplate"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkDescriptorUpdateTemplate",
                            "name": "descriptorUpdateTemplate"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkDestroyDescriptorUpdateTemplateKHR",
                    "@alias": "vkDestroyDescriptorUpdateTemplate"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkUpdateDescriptorSetWithTemplate"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkDescriptorSet",
                            "name": "descriptorSet"
                        },
                        {
                            "type": "VkDescriptorUpdateTemplate",
                            "name": "descriptorUpdateTemplate"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pData",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkUpdateDescriptorSetWithTemplateKHR",
                    "@alias": "vkUpdateDescriptorSetWithTemplate"
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdPushDescriptorSetWithTemplateKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkDescriptorUpdateTemplate",
                            "name": "descriptorUpdateTemplate"
                        },
                        {
                            "type": "VkPipelineLayout",
                            "name": "layout"
                        },
                        {
                            "type": "uint32_t",
                            "name": "set"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pData",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkSetHdrMetadataEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "swapchainCount"
                        },
                        {
                            "@len": "swapchainCount",
                            "type": "VkSwapchainKHR",
                            "name": "pSwapchains",
                            "#text": "const *"
                        },
                        {
                            "@len": "swapchainCount",
                            "type": "VkHdrMetadataEXT",
                            "name": "pMetadata",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_SUBOPTIMAL_KHR",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_OUT_OF_DATE_KHR,VK_ERROR_SURFACE_LOST_KHR,VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetSwapchainStatusKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetRefreshCycleDurationGOOGLE"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        },
                        {
                            "type": "VkRefreshCycleDurationGOOGLE",
                            "name": "pDisplayTimingProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_DEVICE_LOST,VK_ERROR_OUT_OF_DATE_KHR,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPastPresentationTimingGOOGLE"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPresentationTimingCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPresentationTimingCount",
                            "type": "VkPastPresentationTimingGOOGLE",
                            "name": "pPresentationTimings",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateIOSSurfaceMVK"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkIOSSurfaceCreateInfoMVK",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateMacOSSurfaceMVK"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkMacOSSurfaceCreateInfoMVK",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateMetalSurfaceEXT"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkMetalSurfaceCreateInfoEXT",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetViewportWScalingNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstViewport"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewportCount"
                        },
                        {
                            "@len": "viewportCount",
                            "type": "VkViewportWScalingNV",
                            "name": "pViewportWScalings",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetDiscardRectangleEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstDiscardRectangle"
                        },
                        {
                            "type": "uint32_t",
                            "name": "discardRectangleCount"
                        },
                        {
                            "@len": "discardRectangleCount",
                            "type": "VkRect2D",
                            "name": "pDiscardRectangles",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetSampleLocationsEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkSampleLocationsInfoEXT",
                            "name": "pSampleLocationsInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceMultisamplePropertiesEXT"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkSampleCountFlagBits",
                            "name": "samples"
                        },
                        {
                            "type": "VkMultisamplePropertiesEXT",
                            "name": "pMultisampleProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceSurfaceCapabilities2KHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceSurfaceInfo2KHR",
                            "name": "pSurfaceInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceCapabilities2KHR",
                            "name": "pSurfaceCapabilities",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceSurfaceFormats2KHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceSurfaceInfo2KHR",
                            "name": "pSurfaceInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pSurfaceFormatCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pSurfaceFormatCount",
                            "type": "VkSurfaceFormat2KHR",
                            "name": "pSurfaceFormats",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceDisplayProperties2KHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkDisplayProperties2KHR",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceDisplayPlaneProperties2KHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkDisplayPlaneProperties2KHR",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDisplayModeProperties2KHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "display"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkDisplayModeProperties2KHR",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDisplayPlaneCapabilities2KHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkDisplayPlaneInfo2KHR",
                            "name": "pDisplayPlaneInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDisplayPlaneCapabilities2KHR",
                            "name": "pCapabilities",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetBufferMemoryRequirements2"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBufferMemoryRequirementsInfo2",
                            "name": "pInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkMemoryRequirements2",
                            "name": "pMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetBufferMemoryRequirements2KHR",
                    "@alias": "vkGetBufferMemoryRequirements2"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetImageMemoryRequirements2"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImageMemoryRequirementsInfo2",
                            "name": "pInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkMemoryRequirements2",
                            "name": "pMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetImageMemoryRequirements2KHR",
                    "@alias": "vkGetImageMemoryRequirements2"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetImageSparseMemoryRequirements2"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImageSparseMemoryRequirementsInfo2",
                            "name": "pInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pSparseMemoryRequirementCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pSparseMemoryRequirementCount",
                            "type": "VkSparseImageMemoryRequirements2",
                            "name": "pSparseMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetImageSparseMemoryRequirements2KHR",
                    "@alias": "vkGetImageSparseMemoryRequirements2"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetDeviceBufferMemoryRequirements"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeviceBufferMemoryRequirements",
                            "name": "pInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkMemoryRequirements2",
                            "name": "pMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetDeviceBufferMemoryRequirementsKHR",
                    "@alias": "vkGetDeviceBufferMemoryRequirements"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetDeviceImageMemoryRequirements"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeviceImageMemoryRequirements",
                            "name": "pInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkMemoryRequirements2",
                            "name": "pMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetDeviceImageMemoryRequirementsKHR",
                    "@alias": "vkGetDeviceImageMemoryRequirements"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetDeviceImageSparseMemoryRequirements"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeviceImageMemoryRequirements",
                            "name": "pInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pSparseMemoryRequirementCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pSparseMemoryRequirementCount",
                            "type": "VkSparseImageMemoryRequirements2",
                            "name": "pSparseMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetDeviceImageSparseMemoryRequirementsKHR",
                    "@alias": "vkGetDeviceImageSparseMemoryRequirements"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateSamplerYcbcrConversion"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSamplerYcbcrConversionCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSamplerYcbcrConversion",
                            "name": "pYcbcrConversion",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkCreateSamplerYcbcrConversionKHR",
                    "@alias": "vkCreateSamplerYcbcrConversion"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroySamplerYcbcrConversion"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkSamplerYcbcrConversion",
                            "name": "ycbcrConversion"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkDestroySamplerYcbcrConversionKHR",
                    "@alias": "vkDestroySamplerYcbcrConversion"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetDeviceQueue2"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeviceQueueInfo2",
                            "name": "pQueueInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkQueue",
                            "name": "pQueue",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateValidationCacheEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkValidationCacheCreateInfoEXT",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkValidationCacheEXT",
                            "name": "pValidationCache",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyValidationCacheEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkValidationCacheEXT",
                            "name": "validationCache"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetValidationCacheDataEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkValidationCacheEXT",
                            "name": "validationCache"
                        },
                        {
                            "@optional": "false,true",
                            "type": "size_t",
                            "name": "pDataSize",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pDataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkMergeValidationCachesEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkValidationCacheEXT",
                            "name": "dstCache"
                        },
                        {
                            "type": "uint32_t",
                            "name": "srcCacheCount"
                        },
                        {
                            "@len": "srcCacheCount",
                            "type": "VkValidationCacheEXT",
                            "name": "pSrcCaches",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetDescriptorSetLayoutSupport"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDescriptorSetLayoutCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDescriptorSetLayoutSupport",
                            "name": "pSupport",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetDescriptorSetLayoutSupportKHR",
                    "@alias": "vkGetDescriptorSetLayoutSupport"
                },
                {
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetSwapchainGrallocUsageANDROID"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "imageUsage"
                        },
                        {
                            "type": "int",
                            "name": "grallocUsage",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetSwapchainGrallocUsage2ANDROID"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkFormat",
                            "name": "format"
                        },
                        {
                            "type": "VkImageUsageFlags",
                            "name": "imageUsage"
                        },
                        {
                            "type": "VkSwapchainImageUsageFlagsANDROID",
                            "name": "swapchainImageUsage"
                        },
                        {
                            "type": "uint64_t",
                            "name": "grallocConsumerUsage",
                            "#text": "*"
                        },
                        {
                            "type": "uint64_t",
                            "name": "grallocProducerUsage",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAcquireImageANDROID"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "int",
                            "name": "nativeFenceFd"
                        },
                        {
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "type": "VkFence",
                            "name": "fence"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkResult",
                        "name": "vkQueueSignalReleaseImageANDROID"
                    },
                    "param": [
                        {
                            "type": "VkQueue",
                            "name": "queue"
                        },
                        {
                            "type": "uint32_t",
                            "name": "waitSemaphoreCount"
                        },
                        {
                            "@len": "waitSemaphoreCount",
                            "type": "VkSemaphore",
                            "name": "pWaitSemaphores",
                            "#text": "const *"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "int",
                            "name": "pNativeFenceFd",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_FEATURE_NOT_PRESENT,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetShaderInfoAMD"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        },
                        {
                            "type": "VkShaderStageFlagBits",
                            "name": "shaderStage"
                        },
                        {
                            "type": "VkShaderInfoTypeAMD",
                            "name": "infoType"
                        },
                        {
                            "@optional": "false,true",
                            "type": "size_t",
                            "name": "pInfoSize",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pInfoSize",
                            "type": "void",
                            "name": "pInfo",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkSetLocalDimmingAMD"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSwapchainKHR",
                            "name": "swapChain"
                        },
                        {
                            "type": "VkBool32",
                            "name": "localDimmingEnable"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pTimeDomainCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pTimeDomainCount",
                            "type": "VkTimeDomainEXT",
                            "name": "pTimeDomains",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetCalibratedTimestampsEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "timestampCount"
                        },
                        {
                            "@len": "timestampCount",
                            "type": "VkCalibratedTimestampInfoEXT",
                            "name": "pTimestampInfos",
                            "#text": "const *"
                        },
                        {
                            "@len": "timestampCount",
                            "type": "uint64_t",
                            "name": "pTimestamps",
                            "#text": "*"
                        },
                        {
                            "type": "uint64_t",
                            "name": "pMaxDeviation",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkSetDebugUtilsObjectNameEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "pNameInfo::objectHandle",
                            "type": "VkDebugUtilsObjectNameInfoEXT",
                            "name": "pNameInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkSetDebugUtilsObjectTagEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "pTagInfo::objectHandle",
                            "type": "VkDebugUtilsObjectTagInfoEXT",
                            "name": "pTagInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkQueueBeginDebugUtilsLabelEXT"
                    },
                    "param": [
                        {
                            "type": "VkQueue",
                            "name": "queue"
                        },
                        {
                            "type": "VkDebugUtilsLabelEXT",
                            "name": "pLabelInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkQueueEndDebugUtilsLabelEXT"
                    },
                    "param": {
                        "type": "VkQueue",
                        "name": "queue"
                    }
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkQueueInsertDebugUtilsLabelEXT"
                    },
                    "param": [
                        {
                            "type": "VkQueue",
                            "name": "queue"
                        },
                        {
                            "type": "VkDebugUtilsLabelEXT",
                            "name": "pLabelInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBeginDebugUtilsLabelEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkDebugUtilsLabelEXT",
                            "name": "pLabelInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdEndDebugUtilsLabelEXT"
                    },
                    "param": {
                        "@externsync": "true",
                        "type": "VkCommandBuffer",
                        "name": "commandBuffer"
                    }
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdInsertDebugUtilsLabelEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkDebugUtilsLabelEXT",
                            "name": "pLabelInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateDebugUtilsMessengerEXT"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkDebugUtilsMessengerCreateInfoEXT",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDebugUtilsMessengerEXT",
                            "name": "pMessenger",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyDebugUtilsMessengerEXT"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkDebugUtilsMessengerEXT",
                            "name": "messenger"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkSubmitDebugUtilsMessageEXT"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkDebugUtilsMessageSeverityFlagBitsEXT",
                            "name": "messageSeverity"
                        },
                        {
                            "type": "VkDebugUtilsMessageTypeFlagsEXT",
                            "name": "messageTypes"
                        },
                        {
                            "type": "VkDebugUtilsMessengerCallbackDataEXT",
                            "name": "pCallbackData",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetMemoryHostPointerPropertiesEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkExternalMemoryHandleTypeFlagBits",
                            "name": "handleType"
                        },
                        {
                            "@optional": "false",
                            "type": "void",
                            "name": "pHostPointer",
                            "#text": "const *"
                        },
                        {
                            "type": "VkMemoryHostPointerPropertiesEXT",
                            "name": "pMemoryHostPointerProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdWriteBufferMarkerAMD"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlagBits",
                            "name": "pipelineStage"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "dstBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "dstOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "marker"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateRenderPass2"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkRenderPassCreateInfo2",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkRenderPass",
                            "name": "pRenderPass",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkCreateRenderPass2KHR",
                    "@alias": "vkCreateRenderPass2"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBeginRenderPass2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkRenderPassBeginInfo",
                            "name": "pRenderPassBegin",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSubpassBeginInfo",
                            "name": "pSubpassBeginInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdBeginRenderPass2KHR",
                    "@alias": "vkCmdBeginRenderPass2"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdNextSubpass2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkSubpassBeginInfo",
                            "name": "pSubpassBeginInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSubpassEndInfo",
                            "name": "pSubpassEndInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdNextSubpass2KHR",
                    "@alias": "vkCmdNextSubpass2"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdEndRenderPass2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkSubpassEndInfo",
                            "name": "pSubpassEndInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdEndRenderPass2KHR",
                    "@alias": "vkCmdEndRenderPass2"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetSemaphoreCounterValue"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSemaphore",
                            "name": "semaphore"
                        },
                        {
                            "type": "uint64_t",
                            "name": "pValue",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetSemaphoreCounterValueKHR",
                    "@alias": "vkGetSemaphoreCounterValue"
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_TIMEOUT",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkWaitSemaphores"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSemaphoreWaitInfo",
                            "name": "pWaitInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "uint64_t",
                            "name": "timeout"
                        }
                    ]
                },
                {
                    "@name": "vkWaitSemaphoresKHR",
                    "@alias": "vkWaitSemaphores"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkSignalSemaphore"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSemaphoreSignalInfo",
                            "name": "pSignalInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkSignalSemaphoreKHR",
                    "@alias": "vkSignalSemaphore"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetAndroidHardwareBufferPropertiesANDROID"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "AHardwareBuffer",
                            "name": "buffer",
                            "#text": "const struct *"
                        },
                        {
                            "type": "VkAndroidHardwareBufferPropertiesANDROID",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetMemoryAndroidHardwareBufferANDROID"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkMemoryGetAndroidHardwareBufferInfoANDROID",
                            "name": "pInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "AHardwareBuffer",
                            "name": "pBuffer",
                            "#text": "struct **"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawIndirectCount"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "countBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "countBufferOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxDrawCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride"
                        }
                    ]
                },
                {
                    "@name": "vkCmdDrawIndirectCountKHR",
                    "@alias": "vkCmdDrawIndirectCount"
                },
                {
                    "@name": "vkCmdDrawIndirectCountAMD",
                    "@alias": "vkCmdDrawIndirectCount"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawIndexedIndirectCount"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "countBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "countBufferOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxDrawCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride"
                        }
                    ]
                },
                {
                    "@name": "vkCmdDrawIndexedIndirectCountKHR",
                    "@alias": "vkCmdDrawIndexedIndirectCount"
                },
                {
                    "@name": "vkCmdDrawIndexedIndirectCountAMD",
                    "@alias": "vkCmdDrawIndexedIndirectCount"
                },
                {
                    "@queues": "graphics,compute,transfer",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetCheckpointNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@noautovalidity": "true",
                            "type": "void",
                            "name": "pCheckpointMarker",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetQueueCheckpointDataNV"
                    },
                    "param": [
                        {
                            "type": "VkQueue",
                            "name": "queue"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pCheckpointDataCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pCheckpointDataCount",
                            "type": "VkCheckpointDataNV",
                            "name": "pCheckpointData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBindTransformFeedbackBuffersEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstBinding"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bindingCount"
                        },
                        {
                            "@len": "bindingCount",
                            "type": "VkBuffer",
                            "name": "pBuffers",
                            "#text": "const *"
                        },
                        {
                            "@len": "bindingCount",
                            "type": "VkDeviceSize",
                            "name": "pOffsets",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@len": "bindingCount",
                            "@noautovalidity": "true",
                            "type": "VkDeviceSize",
                            "name": "pSizes",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBeginTransformFeedbackEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstCounterBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "counterBufferCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "counterBufferCount",
                            "type": "VkBuffer",
                            "name": "pCounterBuffers",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@len": "counterBufferCount",
                            "type": "VkDeviceSize",
                            "name": "pCounterBufferOffsets",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdEndTransformFeedbackEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstCounterBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "counterBufferCount"
                        },
                        {
                            "@noautovalidity": "true",
                            "@len": "counterBufferCount",
                            "type": "VkBuffer",
                            "name": "pCounterBuffers",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@len": "counterBufferCount",
                            "type": "VkDeviceSize",
                            "name": "pCounterBufferOffsets",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBeginQueryIndexedEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "query"
                        },
                        {
                            "@optional": "true",
                            "type": "VkQueryControlFlags",
                            "name": "flags"
                        },
                        {
                            "type": "uint32_t",
                            "name": "index"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdEndQueryIndexedEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "query"
                        },
                        {
                            "type": "uint32_t",
                            "name": "index"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawIndirectByteCountEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "instanceCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstInstance"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "counterBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "counterBufferOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "counterOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "vertexStride"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetExclusiveScissorNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstExclusiveScissor"
                        },
                        {
                            "type": "uint32_t",
                            "name": "exclusiveScissorCount"
                        },
                        {
                            "@len": "exclusiveScissorCount",
                            "type": "VkRect2D",
                            "name": "pExclusiveScissors",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBindShadingRateImageNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageView",
                            "name": "imageView"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "imageLayout"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetViewportShadingRatePaletteNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstViewport"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewportCount"
                        },
                        {
                            "@len": "viewportCount",
                            "type": "VkShadingRatePaletteNV",
                            "name": "pShadingRatePalettes",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetCoarseSampleOrderNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCoarseSampleOrderTypeNV",
                            "name": "sampleOrderType"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "customSampleOrderCount"
                        },
                        {
                            "@len": "customSampleOrderCount",
                            "type": "VkCoarseSampleOrderCustomNV",
                            "name": "pCustomSampleOrders",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawMeshTasksNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "taskCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstTask"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawMeshTasksIndirectNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "drawCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDrawMeshTasksIndirectCountNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "buffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "offset"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "countBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "countBufferOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "maxDrawCount"
                        },
                        {
                            "type": "uint32_t",
                            "name": "stride"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCompileDeferredNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        },
                        {
                            "type": "uint32_t",
                            "name": "shader"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateAccelerationStructureNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkAccelerationStructureCreateInfoNV",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureNV",
                            "name": "pAccelerationStructure",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBindInvocationMaskHUAWEI"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "VkImageView",
                            "name": "imageView"
                        },
                        {
                            "type": "VkImageLayout",
                            "name": "imageLayout"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyAccelerationStructureKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkAccelerationStructureKHR",
                            "name": "accelerationStructure"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyAccelerationStructureNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkAccelerationStructureNV",
                            "name": "accelerationStructure"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetAccelerationStructureMemoryRequirementsNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkAccelerationStructureMemoryRequirementsInfoNV",
                            "name": "pInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkMemoryRequirements2KHR",
                            "name": "pMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkBindAccelerationStructureMemoryNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bindInfoCount"
                        },
                        {
                            "@len": "bindInfoCount",
                            "type": "VkBindAccelerationStructureMemoryInfoNV",
                            "name": "pBindInfos",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyAccelerationStructureNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkAccelerationStructureNV",
                            "name": "dst"
                        },
                        {
                            "type": "VkAccelerationStructureNV",
                            "name": "src"
                        },
                        {
                            "type": "VkCopyAccelerationStructureModeKHR",
                            "name": "mode"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyAccelerationStructureKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCopyAccelerationStructureInfoKHR",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_OPERATION_DEFERRED_KHR,VK_OPERATION_NOT_DEFERRED_KHR",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCopyAccelerationStructureKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeferredOperationKHR",
                            "name": "deferredOperation"
                        },
                        {
                            "type": "VkCopyAccelerationStructureInfoKHR",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyAccelerationStructureToMemoryKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCopyAccelerationStructureToMemoryInfoKHR",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_OPERATION_DEFERRED_KHR,VK_OPERATION_NOT_DEFERRED_KHR",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCopyAccelerationStructureToMemoryKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeferredOperationKHR",
                            "name": "deferredOperation"
                        },
                        {
                            "type": "VkCopyAccelerationStructureToMemoryInfoKHR",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyMemoryToAccelerationStructureKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCopyMemoryToAccelerationStructureInfoKHR",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_OPERATION_DEFERRED_KHR,VK_OPERATION_NOT_DEFERRED_KHR",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCopyMemoryToAccelerationStructureKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeferredOperationKHR",
                            "name": "deferredOperation"
                        },
                        {
                            "type": "VkCopyMemoryToAccelerationStructureInfoKHR",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdWriteAccelerationStructuresPropertiesKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "accelerationStructureCount"
                        },
                        {
                            "@len": "accelerationStructureCount",
                            "type": "VkAccelerationStructureKHR",
                            "name": "pAccelerationStructures",
                            "#text": "const *"
                        },
                        {
                            "type": "VkQueryType",
                            "name": "queryType"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstQuery"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdWriteAccelerationStructuresPropertiesNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "accelerationStructureCount"
                        },
                        {
                            "@len": "accelerationStructureCount",
                            "type": "VkAccelerationStructureNV",
                            "name": "pAccelerationStructures",
                            "#text": "const *"
                        },
                        {
                            "type": "VkQueryType",
                            "name": "queryType"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstQuery"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBuildAccelerationStructureNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkAccelerationStructureInfoNV",
                            "name": "pInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "instanceData"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "instanceOffset"
                        },
                        {
                            "type": "VkBool32",
                            "name": "update"
                        },
                        {
                            "type": "VkAccelerationStructureNV",
                            "name": "dst"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAccelerationStructureNV",
                            "name": "src"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "scratch"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "scratchOffset"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkWriteAccelerationStructuresPropertiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "uint32_t",
                            "name": "accelerationStructureCount"
                        },
                        {
                            "@len": "accelerationStructureCount",
                            "type": "VkAccelerationStructureKHR",
                            "name": "pAccelerationStructures",
                            "#text": "const *"
                        },
                        {
                            "type": "VkQueryType",
                            "name": "queryType"
                        },
                        {
                            "type": "size_t",
                            "name": "dataSize"
                        },
                        {
                            "@len": "dataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "*"
                        },
                        {
                            "type": "size_t",
                            "name": "stride"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdTraceRaysKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkStridedDeviceAddressRegionKHR",
                            "name": "pRaygenShaderBindingTable",
                            "#text": "const *"
                        },
                        {
                            "type": "VkStridedDeviceAddressRegionKHR",
                            "name": "pMissShaderBindingTable",
                            "#text": "const *"
                        },
                        {
                            "type": "VkStridedDeviceAddressRegionKHR",
                            "name": "pHitShaderBindingTable",
                            "#text": "const *"
                        },
                        {
                            "type": "VkStridedDeviceAddressRegionKHR",
                            "name": "pCallableShaderBindingTable",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "width"
                        },
                        {
                            "type": "uint32_t",
                            "name": "height"
                        },
                        {
                            "type": "uint32_t",
                            "name": "depth"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdTraceRaysNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "raygenShaderBindingTableBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "raygenShaderBindingOffset"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "missShaderBindingTableBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "missShaderBindingOffset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "missShaderBindingStride"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "hitShaderBindingTableBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "hitShaderBindingOffset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "hitShaderBindingStride"
                        },
                        {
                            "@optional": "true",
                            "type": "VkBuffer",
                            "name": "callableShaderBindingTableBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "callableShaderBindingOffset"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "callableShaderBindingStride"
                        },
                        {
                            "type": "uint32_t",
                            "name": "width"
                        },
                        {
                            "type": "uint32_t",
                            "name": "height"
                        },
                        {
                            "type": "uint32_t",
                            "name": "depth"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetRayTracingShaderGroupHandlesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstGroup"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupCount"
                        },
                        {
                            "type": "size_t",
                            "name": "dataSize"
                        },
                        {
                            "@len": "dataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetRayTracingShaderGroupHandlesNV",
                    "@alias": "vkGetRayTracingShaderGroupHandlesKHR"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstGroup"
                        },
                        {
                            "type": "uint32_t",
                            "name": "groupCount"
                        },
                        {
                            "type": "size_t",
                            "name": "dataSize"
                        },
                        {
                            "@len": "dataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetAccelerationStructureHandleNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkAccelerationStructureNV",
                            "name": "accelerationStructure"
                        },
                        {
                            "type": "size_t",
                            "name": "dataSize"
                        },
                        {
                            "@len": "dataSize",
                            "type": "void",
                            "name": "pData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_PIPELINE_COMPILE_REQUIRED_EXT",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INVALID_SHADER_NV",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateRayTracingPipelinesNV"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCache",
                            "name": "pipelineCache"
                        },
                        {
                            "type": "uint32_t",
                            "name": "createInfoCount"
                        },
                        {
                            "@len": "createInfoCount",
                            "type": "VkRayTracingPipelineCreateInfoNV",
                            "name": "pCreateInfos",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "@len": "createInfoCount",
                            "type": "VkPipeline",
                            "name": "pPipelines",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_OPERATION_DEFERRED_KHR,VK_OPERATION_NOT_DEFERRED_KHR,VK_PIPELINE_COMPILE_REQUIRED_EXT",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateRayTracingPipelinesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeferredOperationKHR",
                            "name": "deferredOperation"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineCache",
                            "name": "pipelineCache"
                        },
                        {
                            "type": "uint32_t",
                            "name": "createInfoCount"
                        },
                        {
                            "@len": "createInfoCount",
                            "type": "VkRayTracingPipelineCreateInfoKHR",
                            "name": "pCreateInfos",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "@len": "createInfoCount",
                            "type": "VkPipeline",
                            "name": "pPipelines",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPropertyCount",
                            "type": "VkCooperativeMatrixPropertiesNV",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdTraceRaysIndirectKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkStridedDeviceAddressRegionKHR",
                            "name": "pRaygenShaderBindingTable",
                            "#text": "const *"
                        },
                        {
                            "type": "VkStridedDeviceAddressRegionKHR",
                            "name": "pMissShaderBindingTable",
                            "#text": "const *"
                        },
                        {
                            "type": "VkStridedDeviceAddressRegionKHR",
                            "name": "pHitShaderBindingTable",
                            "#text": "const *"
                        },
                        {
                            "type": "VkStridedDeviceAddressRegionKHR",
                            "name": "pCallableShaderBindingTable",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeviceAddress",
                            "name": "indirectDeviceAddress"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetDeviceAccelerationStructureCompatibilityKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkAccelerationStructureVersionInfoKHR",
                            "name": "pVersionInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureCompatibilityKHR",
                            "name": "pCompatibility",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkDeviceSize",
                        "name": "vkGetRayTracingShaderGroupStackSizeKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipeline",
                            "name": "pipeline"
                        },
                        {
                            "type": "uint32_t",
                            "name": "group"
                        },
                        {
                            "type": "VkShaderGroupShaderKHR",
                            "name": "groupShader"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetRayTracingPipelineStackSizeKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "pipelineStackSize"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "uint32_t",
                        "name": "vkGetImageViewHandleNVX"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImageViewHandleInfoNVX",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_UNKNOWN",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetImageViewAddressNVX"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImageView",
                            "name": "imageView"
                        },
                        {
                            "type": "VkImageViewAddressPropertiesNVX",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceSurfacePresentModes2EXT"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceSurfaceInfo2KHR",
                            "name": "pSurfaceInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pPresentModeCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pPresentModeCount",
                            "type": "VkPresentModeKHR",
                            "name": "pPresentModes",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDeviceGroupSurfacePresentModes2EXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPhysicalDeviceSurfaceInfo2KHR",
                            "name": "pSurfaceInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "VkDeviceGroupPresentModeFlagsKHR",
                            "name": "pModes",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAcquireFullScreenExclusiveModeEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_SURFACE_LOST_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkReleaseFullScreenExclusiveModeEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "uint32_t",
                            "name": "queueFamilyIndex"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pCounterCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pCounterCount",
                            "type": "VkPerformanceCounterKHR",
                            "name": "pCounters",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pCounterCount",
                            "type": "VkPerformanceCounterDescriptionKHR",
                            "name": "pCounterDescriptions",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkQueryPoolPerformanceCreateInfoKHR",
                            "name": "pPerformanceQueryCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "uint32_t",
                            "name": "pNumPasses",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_TIMEOUT",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAcquireProfilingLockKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkAcquireProfilingLockInfoKHR",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkReleaseProfilingLockKHR"
                    },
                    "param": {
                        "type": "VkDevice",
                        "name": "device"
                    }
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetImageDrmFormatModifierPropertiesEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkImage",
                            "name": "image"
                        },
                        {
                            "type": "VkImageDrmFormatModifierPropertiesEXT",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "uint64_t",
                        "name": "vkGetBufferOpaqueCaptureAddress"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBufferDeviceAddressInfo",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkGetBufferOpaqueCaptureAddressKHR",
                    "@alias": "vkGetBufferOpaqueCaptureAddress"
                },
                {
                    "proto": {
                        "type": "VkDeviceAddress",
                        "name": "vkGetBufferDeviceAddress"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBufferDeviceAddressInfo",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkGetBufferDeviceAddressKHR",
                    "@alias": "vkGetBufferDeviceAddress"
                },
                {
                    "@name": "vkGetBufferDeviceAddressEXT",
                    "@alias": "vkGetBufferDeviceAddress"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateHeadlessSurfaceEXT"
                    },
                    "param": [
                        {
                            "type": "VkInstance",
                            "name": "instance"
                        },
                        {
                            "type": "VkHeadlessSurfaceCreateInfoEXT",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkSurfaceKHR",
                            "name": "pSurface",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pCombinationCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pCombinationCount",
                            "type": "VkFramebufferMixedSamplesCombinationNV",
                            "name": "pCombinations",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkInitializePerformanceApiINTEL"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkInitializePerformanceApiInfoINTEL",
                            "name": "pInitializeInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkUninitializePerformanceApiINTEL"
                    },
                    "param": {
                        "type": "VkDevice",
                        "name": "device"
                    }
                },
                {
                    "@queues": "graphics,compute,transfer",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCmdSetPerformanceMarkerINTEL"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkPerformanceMarkerInfoINTEL",
                            "name": "pMarkerInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute,transfer",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCmdSetPerformanceStreamMarkerINTEL"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkPerformanceStreamMarkerInfoINTEL",
                            "name": "pMarkerInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute,transfer",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCmdSetPerformanceOverrideINTEL"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkPerformanceOverrideInfoINTEL",
                            "name": "pOverrideInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAcquirePerformanceConfigurationINTEL"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPerformanceConfigurationAcquireInfoINTEL",
                            "name": "pAcquireInfo",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPerformanceConfigurationINTEL",
                            "name": "pConfiguration",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkReleasePerformanceConfigurationINTEL"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkPerformanceConfigurationINTEL",
                            "name": "configuration"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkQueueSetPerformanceConfigurationINTEL"
                    },
                    "param": [
                        {
                            "type": "VkQueue",
                            "name": "queue"
                        },
                        {
                            "type": "VkPerformanceConfigurationINTEL",
                            "name": "configuration"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_TOO_MANY_OBJECTS,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPerformanceParameterINTEL"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPerformanceParameterTypeINTEL",
                            "name": "parameter"
                        },
                        {
                            "type": "VkPerformanceValueINTEL",
                            "name": "pValue",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "uint64_t",
                        "name": "vkGetDeviceMemoryOpaqueCaptureAddress"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeviceMemoryOpaqueCaptureAddressInfo",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkGetDeviceMemoryOpaqueCaptureAddressKHR",
                    "@alias": "vkGetDeviceMemoryOpaqueCaptureAddress"
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPipelineExecutablePropertiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipelineInfoKHR",
                            "name": "pPipelineInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pExecutableCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pExecutableCount",
                            "type": "VkPipelineExecutablePropertiesKHR",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPipelineExecutableStatisticsKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipelineExecutableInfoKHR",
                            "name": "pExecutableInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pStatisticCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pStatisticCount",
                            "type": "VkPipelineExecutableStatisticKHR",
                            "name": "pStatistics",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPipelineExecutableInternalRepresentationsKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPipelineExecutableInfoKHR",
                            "name": "pExecutableInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pInternalRepresentationCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pInternalRepresentationCount",
                            "type": "VkPipelineExecutableInternalRepresentationKHR",
                            "name": "pInternalRepresentations",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetLineStippleEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "lineStippleFactor"
                        },
                        {
                            "type": "uint16_t",
                            "name": "lineStipplePattern"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceToolProperties"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pToolCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pToolCount",
                            "type": "VkPhysicalDeviceToolProperties",
                            "name": "pToolProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPhysicalDeviceToolPropertiesEXT",
                    "@alias": "vkGetPhysicalDeviceToolProperties"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateAccelerationStructureKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkAccelerationStructureCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureKHR",
                            "name": "pAccelerationStructure",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBuildAccelerationStructuresKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "infoCount"
                        },
                        {
                            "@len": "infoCount",
                            "type": "VkAccelerationStructureBuildGeometryInfoKHR",
                            "name": "pInfos",
                            "#text": "const *"
                        },
                        {
                            "@len": "infoCount",
                            "type": "VkAccelerationStructureBuildRangeInfoKHR",
                            "name": "ppBuildRangeInfos",
                            "#text": "const * const*"
                        }
                    ]
                },
                {
                    "@queues": "compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBuildAccelerationStructuresIndirectKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "infoCount"
                        },
                        {
                            "@len": "infoCount",
                            "type": "VkAccelerationStructureBuildGeometryInfoKHR",
                            "name": "pInfos",
                            "#text": "const *"
                        },
                        {
                            "@len": "infoCount",
                            "type": "VkDeviceAddress",
                            "name": "pIndirectDeviceAddresses",
                            "#text": "const *"
                        },
                        {
                            "@len": "infoCount",
                            "type": "uint32_t",
                            "name": "pIndirectStrides",
                            "#text": "const *"
                        },
                        {
                            "@len": "infoCount",
                            "type": "uint32_t",
                            "name": "ppMaxPrimitiveCounts",
                            "#text": "const * const*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_OPERATION_DEFERRED_KHR,VK_OPERATION_NOT_DEFERRED_KHR",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkBuildAccelerationStructuresKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "VkDeferredOperationKHR",
                            "name": "deferredOperation"
                        },
                        {
                            "type": "uint32_t",
                            "name": "infoCount"
                        },
                        {
                            "@len": "infoCount",
                            "type": "VkAccelerationStructureBuildGeometryInfoKHR",
                            "name": "pInfos",
                            "#text": "const *"
                        },
                        {
                            "@len": "infoCount",
                            "type": "VkAccelerationStructureBuildRangeInfoKHR",
                            "name": "ppBuildRangeInfos",
                            "#text": "const * const*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "VkDeviceAddress",
                        "name": "vkGetAccelerationStructureDeviceAddressKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkAccelerationStructureDeviceAddressInfoKHR",
                            "name": "pInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateDeferredOperationKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkDeferredOperationKHR",
                            "name": "pDeferredOperation",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyDeferredOperationKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkDeferredOperationKHR",
                            "name": "operation"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "uint32_t",
                        "name": "vkGetDeferredOperationMaxConcurrencyKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeferredOperationKHR",
                            "name": "operation"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_NOT_READY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDeferredOperationResultKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeferredOperationKHR",
                            "name": "operation"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_THREAD_DONE_KHR,VK_THREAD_IDLE_KHR",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkDeferredOperationJoinKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeferredOperationKHR",
                            "name": "operation"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetCullMode"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "VkCullModeFlags",
                            "name": "cullMode"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetCullModeEXT",
                    "@alias": "vkCmdSetCullMode"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetFrontFace"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkFrontFace",
                            "name": "frontFace"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetFrontFaceEXT",
                    "@alias": "vkCmdSetFrontFace"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetPrimitiveTopology"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkPrimitiveTopology",
                            "name": "primitiveTopology"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetPrimitiveTopologyEXT",
                    "@alias": "vkCmdSetPrimitiveTopology"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetViewportWithCount"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "viewportCount"
                        },
                        {
                            "@len": "viewportCount",
                            "type": "VkViewport",
                            "name": "pViewports",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetViewportWithCountEXT",
                    "@alias": "vkCmdSetViewportWithCount"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetScissorWithCount"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "scissorCount"
                        },
                        {
                            "@len": "scissorCount",
                            "type": "VkRect2D",
                            "name": "pScissors",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetScissorWithCountEXT",
                    "@alias": "vkCmdSetScissorWithCount"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBindVertexBuffers2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "firstBinding"
                        },
                        {
                            "type": "uint32_t",
                            "name": "bindingCount"
                        },
                        {
                            "@len": "bindingCount",
                            "@optional": "false,true",
                            "type": "VkBuffer",
                            "name": "pBuffers",
                            "#text": "const *"
                        },
                        {
                            "@len": "bindingCount",
                            "type": "VkDeviceSize",
                            "name": "pOffsets",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@len": "bindingCount",
                            "type": "VkDeviceSize",
                            "name": "pSizes",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@len": "bindingCount",
                            "type": "VkDeviceSize",
                            "name": "pStrides",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdBindVertexBuffers2EXT",
                    "@alias": "vkCmdBindVertexBuffers2"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetDepthTestEnable"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthTestEnable"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetDepthTestEnableEXT",
                    "@alias": "vkCmdSetDepthTestEnable"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetDepthWriteEnable"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthWriteEnable"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetDepthWriteEnableEXT",
                    "@alias": "vkCmdSetDepthWriteEnable"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetDepthCompareOp"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCompareOp",
                            "name": "depthCompareOp"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetDepthCompareOpEXT",
                    "@alias": "vkCmdSetDepthCompareOp"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetDepthBoundsTestEnable"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthBoundsTestEnable"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetDepthBoundsTestEnableEXT",
                    "@alias": "vkCmdSetDepthBoundsTestEnable"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetStencilTestEnable"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "stencilTestEnable"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetStencilTestEnableEXT",
                    "@alias": "vkCmdSetStencilTestEnable"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetStencilOp"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkStencilFaceFlags",
                            "name": "faceMask"
                        },
                        {
                            "type": "VkStencilOp",
                            "name": "failOp"
                        },
                        {
                            "type": "VkStencilOp",
                            "name": "passOp"
                        },
                        {
                            "type": "VkStencilOp",
                            "name": "depthFailOp"
                        },
                        {
                            "type": "VkCompareOp",
                            "name": "compareOp"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetStencilOpEXT",
                    "@alias": "vkCmdSetStencilOp"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetPatchControlPointsEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "patchControlPoints"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetRasterizerDiscardEnable"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "rasterizerDiscardEnable"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetRasterizerDiscardEnableEXT",
                    "@alias": "vkCmdSetRasterizerDiscardEnable"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetDepthBiasEnable"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "depthBiasEnable"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetDepthBiasEnableEXT",
                    "@alias": "vkCmdSetDepthBiasEnable"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetLogicOpEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkLogicOp",
                            "name": "logicOp"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetPrimitiveRestartEnable"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBool32",
                            "name": "primitiveRestartEnable"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetPrimitiveRestartEnableEXT",
                    "@alias": "vkCmdSetPrimitiveRestartEnable"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreatePrivateDataSlot"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkPrivateDataSlotCreateInfo",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkPrivateDataSlot",
                            "name": "pPrivateDataSlot",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkCreatePrivateDataSlotEXT",
                    "@alias": "vkCreatePrivateDataSlot"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyPrivateDataSlot"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkPrivateDataSlot",
                            "name": "privateDataSlot"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkDestroyPrivateDataSlotEXT",
                    "@alias": "vkDestroyPrivateDataSlot"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkSetPrivateData"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkObjectType",
                            "name": "objectType"
                        },
                        {
                            "@objecttype": "objectType",
                            "type": "uint64_t",
                            "name": "objectHandle"
                        },
                        {
                            "type": "VkPrivateDataSlot",
                            "name": "privateDataSlot"
                        },
                        {
                            "type": "uint64_t",
                            "name": "data"
                        }
                    ]
                },
                {
                    "@name": "vkSetPrivateDataEXT",
                    "@alias": "vkSetPrivateData"
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetPrivateData"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkObjectType",
                            "name": "objectType"
                        },
                        {
                            "@objecttype": "objectType",
                            "type": "uint64_t",
                            "name": "objectHandle"
                        },
                        {
                            "type": "VkPrivateDataSlot",
                            "name": "privateDataSlot"
                        },
                        {
                            "type": "uint64_t",
                            "name": "pData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@name": "vkGetPrivateDataEXT",
                    "@alias": "vkGetPrivateData"
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyBuffer2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCopyBufferInfo2",
                            "name": "pCopyBufferInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdCopyBuffer2KHR",
                    "@alias": "vkCmdCopyBuffer2"
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyImage2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCopyImageInfo2",
                            "name": "pCopyImageInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdCopyImage2KHR",
                    "@alias": "vkCmdCopyImage2"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBlitImage2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkBlitImageInfo2",
                            "name": "pBlitImageInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdBlitImage2KHR",
                    "@alias": "vkCmdBlitImage2"
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyBufferToImage2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCopyBufferToImageInfo2",
                            "name": "pCopyBufferToImageInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdCopyBufferToImage2KHR",
                    "@alias": "vkCmdCopyBufferToImage2"
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCopyImageToBuffer2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCopyImageToBufferInfo2",
                            "name": "pCopyImageToBufferInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdCopyImageToBuffer2KHR",
                    "@alias": "vkCmdCopyImageToBuffer2"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdResolveImage2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkResolveImageInfo2",
                            "name": "pResolveImageInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdResolveImage2KHR",
                    "@alias": "vkCmdResolveImage2"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetFragmentShadingRateKHR"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkExtent2D",
                            "name": "pFragmentSize",
                            "#text": "const *"
                        },
                        {
                            "type": "VkFragmentShadingRateCombinerOpKHR",
                            "name": "combinerOps",
                            "#text": "const     [2]"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceFragmentShadingRatesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pFragmentShadingRateCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pFragmentShadingRateCount",
                            "type": "VkPhysicalDeviceFragmentShadingRateKHR",
                            "name": "pFragmentShadingRates",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetFragmentShadingRateEnumNV"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkFragmentShadingRateNV",
                            "name": "shadingRate"
                        },
                        {
                            "type": "VkFragmentShadingRateCombinerOpKHR",
                            "name": "combinerOps",
                            "#text": "const     [2]"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetAccelerationStructureBuildSizesKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkAccelerationStructureBuildTypeKHR",
                            "name": "buildType"
                        },
                        {
                            "type": "VkAccelerationStructureBuildGeometryInfoKHR",
                            "name": "pBuildInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@len": "pBuildInfo::geometryCount",
                            "type": "uint32_t",
                            "name": "pMaxPrimitiveCounts",
                            "#text": "const *"
                        },
                        {
                            "type": "VkAccelerationStructureBuildSizesInfoKHR",
                            "name": "pSizeInfo",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetVertexInputEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "vertexBindingDescriptionCount"
                        },
                        {
                            "@len": "vertexBindingDescriptionCount",
                            "type": "VkVertexInputBindingDescription2EXT",
                            "name": "pVertexBindingDescriptions",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "vertexAttributeDescriptionCount"
                        },
                        {
                            "@len": "vertexAttributeDescriptionCount",
                            "type": "VkVertexInputAttributeDescription2EXT",
                            "name": "pVertexAttributeDescriptions",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetColorWriteEnableEXT"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "attachmentCount"
                        },
                        {
                            "@len": "attachmentCount",
                            "type": "VkBool32",
                            "name": "pColorWriteEnables",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdSetEvent2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkEvent",
                            "name": "event"
                        },
                        {
                            "type": "VkDependencyInfo",
                            "name": "pDependencyInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdSetEvent2KHR",
                    "@alias": "vkCmdSetEvent2"
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdResetEvent2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkEvent",
                            "name": "event"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags2",
                            "name": "stageMask"
                        }
                    ]
                },
                {
                    "@name": "vkCmdResetEvent2KHR",
                    "@alias": "vkCmdResetEvent2"
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdWaitEvents2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "uint32_t",
                            "name": "eventCount"
                        },
                        {
                            "@len": "eventCount",
                            "type": "VkEvent",
                            "name": "pEvents",
                            "#text": "const *"
                        },
                        {
                            "@len": "eventCount",
                            "type": "VkDependencyInfo",
                            "name": "pDependencyInfos",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdWaitEvents2KHR",
                    "@alias": "vkCmdWaitEvents2"
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdPipelineBarrier2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkDependencyInfo",
                            "name": "pDependencyInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdPipelineBarrier2KHR",
                    "@alias": "vkCmdPipelineBarrier2"
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkQueueSubmit2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkQueue",
                            "name": "queue"
                        },
                        {
                            "@optional": "true",
                            "type": "uint32_t",
                            "name": "submitCount"
                        },
                        {
                            "@len": "submitCount",
                            "type": "VkSubmitInfo2",
                            "name": "pSubmits",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "@externsync": "true",
                            "type": "VkFence",
                            "name": "fence"
                        }
                    ]
                },
                {
                    "@name": "vkQueueSubmit2KHR",
                    "@alias": "vkQueueSubmit2"
                },
                {
                    "@queues": "transfer,graphics,compute,decode,encode",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdWriteTimestamp2"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags2",
                            "name": "stage"
                        },
                        {
                            "type": "VkQueryPool",
                            "name": "queryPool"
                        },
                        {
                            "type": "uint32_t",
                            "name": "query"
                        }
                    ]
                },
                {
                    "@name": "vkCmdWriteTimestamp2KHR",
                    "@alias": "vkCmdWriteTimestamp2"
                },
                {
                    "@queues": "transfer,graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdWriteBufferMarker2AMD"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "@optional": "true",
                            "type": "VkPipelineStageFlags2",
                            "name": "stage"
                        },
                        {
                            "type": "VkBuffer",
                            "name": "dstBuffer"
                        },
                        {
                            "type": "VkDeviceSize",
                            "name": "dstOffset"
                        },
                        {
                            "type": "uint32_t",
                            "name": "marker"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkGetQueueCheckpointData2NV"
                    },
                    "param": [
                        {
                            "type": "VkQueue",
                            "name": "queue"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pCheckpointDataCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pCheckpointDataCount",
                            "type": "VkCheckpointData2NV",
                            "name": "pCheckpointData",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_EXTENSION_NOT_PRESENT,VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_FEATURE_NOT_PRESENT,VK_ERROR_FORMAT_NOT_SUPPORTED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceVideoCapabilitiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkVideoProfileKHR",
                            "name": "pVideoProfile",
                            "#text": "const *"
                        },
                        {
                            "type": "VkVideoCapabilitiesKHR",
                            "name": "pCapabilities",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_EXTENSION_NOT_PRESENT,VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_FORMAT_NOT_SUPPORTED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetPhysicalDeviceVideoFormatPropertiesKHR"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "VkPhysicalDeviceVideoFormatInfoKHR",
                            "name": "pVideoFormatInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pVideoFormatPropertyCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pVideoFormatPropertyCount",
                            "type": "VkVideoFormatPropertiesKHR",
                            "name": "pVideoFormatProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_INCOMPATIBLE_DRIVER,VK_ERROR_FEATURE_NOT_PRESENT",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateVideoSessionKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkVideoSessionCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkVideoSessionKHR",
                            "name": "pVideoSession",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyVideoSessionKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkVideoSessionKHR",
                            "name": "videoSession"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_TOO_MANY_OBJECTS",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateVideoSessionParametersKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkVideoSessionParametersCreateInfoKHR",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkVideoSessionParametersKHR",
                            "name": "pVideoSessionParameters",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_TOO_MANY_OBJECTS",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkUpdateVideoSessionParametersKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkVideoSessionParametersKHR",
                            "name": "videoSessionParameters"
                        },
                        {
                            "type": "VkVideoSessionParametersUpdateInfoKHR",
                            "name": "pUpdateInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyVideoSessionParametersKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkVideoSessionParametersKHR",
                            "name": "videoSessionParameters"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_INCOMPLETE",
                    "@errorcodes": "VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetVideoSessionMemoryRequirementsKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkVideoSessionKHR",
                            "name": "videoSession"
                        },
                        {
                            "@optional": "false,true",
                            "type": "uint32_t",
                            "name": "pVideoSessionMemoryRequirementsCount",
                            "#text": "*"
                        },
                        {
                            "@optional": "true",
                            "@len": "pVideoSessionMemoryRequirementsCount",
                            "type": "VkVideoGetMemoryPropertiesKHR",
                            "name": "pVideoSessionMemoryRequirements",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkBindVideoSessionMemoryKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkVideoSessionKHR",
                            "name": "videoSession"
                        },
                        {
                            "type": "uint32_t",
                            "name": "videoSessionBindMemoryCount"
                        },
                        {
                            "@len": "videoSessionBindMemoryCount",
                            "type": "VkVideoBindMemoryKHR",
                            "name": "pVideoSessionBindMemories",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "decode",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdDecodeVideoKHR"
                    },
                    "param": [
                        {
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkVideoDecodeInfoKHR",
                            "name": "pFrameInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "decode,encode",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBeginVideoCodingKHR"
                    },
                    "param": [
                        {
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkVideoBeginCodingInfoKHR",
                            "name": "pBeginInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "decode,encode",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdControlVideoCodingKHR"
                    },
                    "param": [
                        {
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkVideoCodingControlInfoKHR",
                            "name": "pCodingControlInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "decode,encode",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdEndVideoCodingKHR"
                    },
                    "param": [
                        {
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkVideoEndCodingInfoKHR",
                            "name": "pEndCodingInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "encode",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdEncodeVideoKHR"
                    },
                    "param": [
                        {
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkVideoEncodeInfoKHR",
                            "name": "pEncodeInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateCuModuleNVX"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkCuModuleCreateInfoNVX",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkCuModuleNVX",
                            "name": "pModule",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateCuFunctionNVX"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkCuFunctionCreateInfoNVX",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkCuFunctionNVX",
                            "name": "pFunction",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyCuModuleNVX"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkCuModuleNVX",
                            "name": "module"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyCuFunctionNVX"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkCuFunctionNVX",
                            "name": "function"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@queues": "graphics,compute",
                    "@renderpass": "both",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdCuLaunchKernelNVX"
                    },
                    "param": [
                        {
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkCuLaunchInfoNVX",
                            "name": "pLaunchInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkSetDeviceMemoryPriorityEXT"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkDeviceMemory",
                            "name": "memory"
                        },
                        {
                            "type": "float",
                            "name": "priority"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkAcquireDrmDisplayEXT"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "int32_t",
                            "name": "drmFd"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "display"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_OUT_OF_HOST_MEMORY",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetDrmDisplayEXT"
                    },
                    "param": [
                        {
                            "type": "VkPhysicalDevice",
                            "name": "physicalDevice"
                        },
                        {
                            "type": "int32_t",
                            "name": "drmFd"
                        },
                        {
                            "type": "uint32_t",
                            "name": "connectorId"
                        },
                        {
                            "type": "VkDisplayKHR",
                            "name": "display",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS,VK_TIMEOUT",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_OUT_OF_DEVICE_MEMORY,VK_ERROR_DEVICE_LOST",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkWaitForPresentKHR"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "@externsync": "true",
                            "type": "VkSwapchainKHR",
                            "name": "swapchain"
                        },
                        {
                            "type": "uint64_t",
                            "name": "presentId"
                        },
                        {
                            "type": "uint64_t",
                            "name": "timeout"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INVALID_EXTERNAL_HANDLE,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkCreateBufferCollectionFUCHSIA"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBufferCollectionCreateInfoFUCHSIA",
                            "name": "pCreateInfo",
                            "#text": "const *"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        },
                        {
                            "type": "VkBufferCollectionFUCHSIA",
                            "name": "pCollection",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_FORMAT_NOT_SUPPORTED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkSetBufferCollectionBufferConstraintsFUCHSIA"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBufferCollectionFUCHSIA",
                            "name": "collection"
                        },
                        {
                            "type": "VkBufferConstraintsInfoFUCHSIA",
                            "name": "pBufferConstraintsInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_INITIALIZATION_FAILED,VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_FORMAT_NOT_SUPPORTED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkSetBufferCollectionImageConstraintsFUCHSIA"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBufferCollectionFUCHSIA",
                            "name": "collection"
                        },
                        {
                            "type": "VkImageConstraintsInfoFUCHSIA",
                            "name": "pImageConstraintsInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "proto": {
                        "type": "void",
                        "name": "vkDestroyBufferCollectionFUCHSIA"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBufferCollectionFUCHSIA",
                            "name": "collection"
                        },
                        {
                            "@optional": "true",
                            "type": "VkAllocationCallbacks",
                            "name": "pAllocator",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@successcodes": "VK_SUCCESS",
                    "@errorcodes": "VK_ERROR_OUT_OF_HOST_MEMORY,VK_ERROR_INITIALIZATION_FAILED",
                    "proto": {
                        "type": "VkResult",
                        "name": "vkGetBufferCollectionPropertiesFUCHSIA"
                    },
                    "param": [
                        {
                            "type": "VkDevice",
                            "name": "device"
                        },
                        {
                            "type": "VkBufferCollectionFUCHSIA",
                            "name": "collection"
                        },
                        {
                            "type": "VkBufferCollectionPropertiesFUCHSIA",
                            "name": "pProperties",
                            "#text": "*"
                        }
                    ]
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "outside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdBeginRendering"
                    },
                    "param": [
                        {
                            "@externsync": "true",
                            "type": "VkCommandBuffer",
                            "name": "commandBuffer"
                        },
                        {
                            "type": "VkRenderingInfo",
                            "name": "pRenderingInfo",
                            "#text": "const *"
                        }
                    ]
                },
                {
                    "@name": "vkCmdBeginRenderingKHR",
                    "@alias": "vkCmdBeginRendering"
                },
                {
                    "@queues": "graphics",
                    "@renderpass": "inside",
                    "@cmdbufferlevel": "primary,secondary",
                    "proto": {
                        "type": "void",
                        "name": "vkCmdEndRendering"
                    },
                    "param": {
                        "@externsync": "true",
                        "type": "VkCommandBuffer",
                        "name": "commandBuffer"
                    }
                },
                {
                    "@name": "vkCmdEndRenderingKHR",
                    "@alias": "vkCmdEndRendering"
                }
            ]
        },
        "feature": [
            {
                "@api": "vulkan",
                "@name": "VK_VERSION_1_0",
                "@number": "1.0",
                "@comment": "Vulkan core API interface definitions",
                "require": [
                    {
                        "@comment": "Header boilerplate",
                        "type": [
                            {
                                "@name": "vk_platform"
                            },
                            {
                                "@name": "VK_DEFINE_HANDLE"
                            },
                            {
                                "@name": "VK_USE_64_BIT_PTR_DEFINES"
                            },
                            {
                                "@name": "VK_DEFINE_NON_DISPATCHABLE_HANDLE"
                            },
                            {
                                "@name": "VK_NULL_HANDLE"
                            }
                        ]
                    },
                    {
                        "@comment": "Fundamental types used by many commands and structures",
                        "type": [
                            {
                                "@name": "VkBool32"
                            },
                            {
                                "@name": "VkDeviceAddress"
                            },
                            {
                                "@name": "VkDeviceSize"
                            },
                            {
                                "@name": "VkExtent2D"
                            },
                            {
                                "@name": "VkExtent3D"
                            },
                            {
                                "@name": "VkFlags"
                            },
                            {
                                "@name": "VkOffset2D"
                            },
                            {
                                "@name": "VkOffset3D"
                            },
                            {
                                "@name": "VkRect2D"
                            },
                            {
                                "@name": "VkResult"
                            },
                            {
                                "@name": "VkStructureType"
                            }
                        ]
                    },
                    {
                        "@comment": "These types are part of the API, though not directly used in API commands or data structures",
                        "type": [
                            {
                                "@name": "VkBaseInStructure"
                            },
                            {
                                "@name": "VkBaseOutStructure"
                            },
                            {
                                "@name": "VkBufferMemoryBarrier"
                            },
                            {
                                "@name": "VkDispatchIndirectCommand"
                            },
                            {
                                "@name": "VkDrawIndexedIndirectCommand"
                            },
                            {
                                "@name": "VkDrawIndirectCommand"
                            },
                            {
                                "@name": "VkImageMemoryBarrier"
                            },
                            {
                                "@name": "VkMemoryBarrier"
                            },
                            {
                                "@name": "VkObjectType"
                            },
                            {
                                "@name": "VkPipelineCacheHeaderVersionOne"
                            },
                            {
                                "@name": "VkVendorId"
                            }
                        ]
                    },
                    {
                        "@comment": "API version macros",
                        "type": [
                            {
                                "@name": "VK_API_VERSION"
                            },
                            {
                                "@name": "VK_API_VERSION_1_0"
                            },
                            {
                                "@name": "VK_HEADER_VERSION"
                            },
                            {
                                "@name": "VK_HEADER_VERSION_COMPLETE"
                            },
                            {
                                "@name": "VK_MAKE_VERSION"
                            },
                            {
                                "@name": "VK_VERSION_MAJOR"
                            },
                            {
                                "@name": "VK_VERSION_MINOR"
                            },
                            {
                                "@name": "VK_VERSION_PATCH"
                            },
                            {
                                "@name": "VK_MAKE_API_VERSION"
                            },
                            {
                                "@name": "VK_API_VERSION_VARIANT"
                            },
                            {
                                "@name": "VK_API_VERSION_MAJOR"
                            },
                            {
                                "@name": "VK_API_VERSION_MINOR"
                            },
                            {
                                "@name": "VK_API_VERSION_PATCH"
                            }
                        ]
                    },
                    {
                        "@comment": "API constants",
                        "enum": [
                            {
                                "@name": "VK_ATTACHMENT_UNUSED"
                            },
                            {
                                "@name": "VK_FALSE"
                            },
                            {
                                "@name": "VK_LOD_CLAMP_NONE"
                            },
                            {
                                "@name": "VK_QUEUE_FAMILY_IGNORED"
                            },
                            {
                                "@name": "VK_REMAINING_ARRAY_LAYERS"
                            },
                            {
                                "@name": "VK_REMAINING_MIP_LEVELS"
                            },
                            {
                                "@name": "VK_SUBPASS_EXTERNAL"
                            },
                            {
                                "@name": "VK_TRUE"
                            },
                            {
                                "@name": "VK_WHOLE_SIZE"
                            }
                        ],
                        "type": {
                            "@name": "VkPipelineCacheHeaderVersion"
                        }
                    },
                    {
                        "@comment": "Device initialization",
                        "type": [
                            {
                                "@name": "PFN_vkAllocationFunction"
                            },
                            {
                                "@name": "PFN_vkFreeFunction"
                            },
                            {
                                "@name": "PFN_vkInternalAllocationNotification"
                            },
                            {
                                "@name": "PFN_vkInternalFreeNotification"
                            },
                            {
                                "@name": "PFN_vkReallocationFunction"
                            },
                            {
                                "@name": "PFN_vkVoidFunction"
                            },
                            {
                                "@name": "VkAllocationCallbacks"
                            },
                            {
                                "@name": "VkApplicationInfo"
                            },
                            {
                                "@name": "VkFormat"
                            },
                            {
                                "@name": "VkFormatFeatureFlagBits"
                            },
                            {
                                "@name": "VkFormatFeatureFlags"
                            },
                            {
                                "@name": "VkFormatProperties"
                            },
                            {
                                "@name": "VkImageCreateFlagBits"
                            },
                            {
                                "@name": "VkImageCreateFlags"
                            },
                            {
                                "@name": "VkImageFormatProperties"
                            },
                            {
                                "@name": "VkImageTiling"
                            },
                            {
                                "@name": "VkImageType"
                            },
                            {
                                "@name": "VkImageUsageFlagBits"
                            },
                            {
                                "@name": "VkImageUsageFlags"
                            },
                            {
                                "@name": "VkInstance"
                            },
                            {
                                "@name": "VkInstanceCreateFlags",
                                "@comment": "Will add VkInstanceCreateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkInstanceCreateInfo"
                            },
                            {
                                "@name": "VkInternalAllocationType"
                            },
                            {
                                "@name": "VkMemoryHeap"
                            },
                            {
                                "@name": "VkMemoryHeapFlagBits"
                            },
                            {
                                "@name": "VkMemoryHeapFlags"
                            },
                            {
                                "@name": "VkMemoryPropertyFlagBits"
                            },
                            {
                                "@name": "VkMemoryPropertyFlags"
                            },
                            {
                                "@name": "VkMemoryType"
                            },
                            {
                                "@name": "VkPhysicalDevice"
                            },
                            {
                                "@name": "VkPhysicalDeviceFeatures"
                            },
                            {
                                "@name": "VkPhysicalDeviceLimits"
                            },
                            {
                                "@name": "VkPhysicalDeviceMemoryProperties"
                            },
                            {
                                "@name": "VkPhysicalDeviceProperties"
                            },
                            {
                                "@name": "VkPhysicalDeviceSparseProperties"
                            },
                            {
                                "@name": "VkPhysicalDeviceType"
                            },
                            {
                                "@name": "VkQueueFamilyProperties"
                            },
                            {
                                "@name": "VkQueueFlagBits"
                            },
                            {
                                "@name": "VkQueueFlags"
                            },
                            {
                                "@name": "VkSampleCountFlagBits"
                            },
                            {
                                "@name": "VkSampleCountFlags"
                            },
                            {
                                "@name": "VkSystemAllocationScope"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateInstance"
                            },
                            {
                                "@name": "vkDestroyInstance"
                            },
                            {
                                "@name": "vkEnumeratePhysicalDevices"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceFeatures"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceFormatProperties"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceImageFormatProperties"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceProperties"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceQueueFamilyProperties"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceMemoryProperties"
                            },
                            {
                                "@name": "vkGetInstanceProcAddr"
                            },
                            {
                                "@name": "vkGetDeviceProcAddr"
                            }
                        ]
                    },
                    {
                        "@comment": "Device commands",
                        "type": [
                            {
                                "@name": "VkDevice"
                            },
                            {
                                "@name": "VkDeviceCreateFlags",
                                "@comment": "Will add VkDeviceCreateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkDeviceCreateInfo"
                            },
                            {
                                "@name": "VkDeviceQueueCreateFlags",
                                "@comment": "VkDeviceQueueCreateFlagBits was added later"
                            },
                            {
                                "@name": "VkDeviceQueueCreateInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateDevice"
                            },
                            {
                                "@name": "vkDestroyDevice"
                            }
                        ]
                    },
                    {
                        "@comment": "Extension discovery commands",
                        "type": {
                            "@name": "VkExtensionProperties"
                        },
                        "command": [
                            {
                                "@name": "vkEnumerateInstanceExtensionProperties"
                            },
                            {
                                "@name": "vkEnumerateDeviceExtensionProperties"
                            }
                        ]
                    },
                    {
                        "@comment": "Layer discovery commands",
                        "type": {
                            "@name": "VkLayerProperties"
                        },
                        "command": [
                            {
                                "@name": "vkEnumerateInstanceLayerProperties"
                            },
                            {
                                "@name": "vkEnumerateDeviceLayerProperties"
                            }
                        ]
                    },
                    {
                        "@comment": "Queue commands",
                        "type": [
                            {
                                "@name": "VkPipelineStageFlagBits"
                            },
                            {
                                "@name": "VkPipelineStageFlags"
                            },
                            {
                                "@name": "VkQueue"
                            },
                            {
                                "@name": "VkSubmitInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetDeviceQueue"
                            },
                            {
                                "@name": "vkQueueSubmit"
                            },
                            {
                                "@name": "vkQueueWaitIdle"
                            },
                            {
                                "@name": "vkDeviceWaitIdle"
                            }
                        ]
                    },
                    {
                        "@comment": "Memory commands",
                        "type": [
                            {
                                "@name": "VkMappedMemoryRange"
                            },
                            {
                                "@name": "VkMemoryAllocateInfo"
                            },
                            {
                                "@name": "VkMemoryMapFlags"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkAllocateMemory"
                            },
                            {
                                "@name": "vkFreeMemory"
                            },
                            {
                                "@name": "vkMapMemory"
                            },
                            {
                                "@name": "vkUnmapMemory"
                            },
                            {
                                "@name": "vkFlushMappedMemoryRanges"
                            },
                            {
                                "@name": "vkInvalidateMappedMemoryRanges"
                            },
                            {
                                "@name": "vkGetDeviceMemoryCommitment"
                            }
                        ]
                    },
                    {
                        "@comment": "Memory management API commands",
                        "type": [
                            {
                                "@name": "VkDeviceMemory"
                            },
                            {
                                "@name": "VkMemoryRequirements"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkBindBufferMemory"
                            },
                            {
                                "@name": "vkBindImageMemory"
                            },
                            {
                                "@name": "vkGetBufferMemoryRequirements"
                            },
                            {
                                "@name": "vkGetImageMemoryRequirements"
                            }
                        ]
                    },
                    {
                        "@comment": "Sparse resource memory management API commands",
                        "type": [
                            {
                                "@name": "VkBindSparseInfo"
                            },
                            {
                                "@name": "VkImageAspectFlagBits"
                            },
                            {
                                "@name": "VkImageAspectFlags"
                            },
                            {
                                "@name": "VkImageSubresource"
                            },
                            {
                                "@name": "VkSparseBufferMemoryBindInfo"
                            },
                            {
                                "@name": "VkSparseImageFormatFlagBits"
                            },
                            {
                                "@name": "VkSparseImageFormatFlags"
                            },
                            {
                                "@name": "VkSparseImageFormatProperties"
                            },
                            {
                                "@name": "VkSparseImageMemoryBind"
                            },
                            {
                                "@name": "VkSparseImageMemoryBindInfo"
                            },
                            {
                                "@name": "VkSparseImageMemoryRequirements"
                            },
                            {
                                "@name": "VkSparseImageOpaqueMemoryBindInfo"
                            },
                            {
                                "@name": "VkSparseMemoryBind"
                            },
                            {
                                "@name": "VkSparseMemoryBindFlagBits"
                            },
                            {
                                "@name": "VkSparseMemoryBindFlags"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetImageSparseMemoryRequirements"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceSparseImageFormatProperties"
                            },
                            {
                                "@name": "vkQueueBindSparse"
                            }
                        ]
                    },
                    {
                        "@comment": "Fence commands",
                        "type": [
                            {
                                "@name": "VkFence"
                            },
                            {
                                "@name": "VkFenceCreateFlagBits"
                            },
                            {
                                "@name": "VkFenceCreateFlags"
                            },
                            {
                                "@name": "VkFenceCreateInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateFence"
                            },
                            {
                                "@name": "vkDestroyFence"
                            },
                            {
                                "@name": "vkResetFences"
                            },
                            {
                                "@name": "vkGetFenceStatus"
                            },
                            {
                                "@name": "vkWaitForFences"
                            }
                        ]
                    },
                    {
                        "@comment": "Queue semaphore commands",
                        "type": [
                            {
                                "@name": "VkSemaphore"
                            },
                            {
                                "@name": "VkSemaphoreCreateFlags",
                                "@comment": "Will add VkSemaphoreCreateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkSemaphoreCreateInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateSemaphore"
                            },
                            {
                                "@name": "vkDestroySemaphore"
                            }
                        ]
                    },
                    {
                        "@comment": "Event commands",
                        "type": [
                            {
                                "@name": "VkEvent"
                            },
                            {
                                "@name": "VkEventCreateFlags"
                            },
                            {
                                "@name": "VkEventCreateFlagBits"
                            },
                            {
                                "@name": "VkEventCreateInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateEvent"
                            },
                            {
                                "@name": "vkDestroyEvent"
                            },
                            {
                                "@name": "vkGetEventStatus"
                            },
                            {
                                "@name": "vkSetEvent"
                            },
                            {
                                "@name": "vkResetEvent"
                            }
                        ]
                    },
                    {
                        "@comment": "Query commands",
                        "type": [
                            {
                                "@name": "VkQueryPipelineStatisticFlagBits"
                            },
                            {
                                "@name": "VkQueryPipelineStatisticFlags"
                            },
                            {
                                "@name": "VkQueryPool"
                            },
                            {
                                "@name": "VkQueryPoolCreateFlags",
                                "@comment": "Will add VkQueryPoolCreateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkQueryPoolCreateInfo"
                            },
                            {
                                "@name": "VkQueryResultFlagBits"
                            },
                            {
                                "@name": "VkQueryResultFlags"
                            },
                            {
                                "@name": "VkQueryType"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateQueryPool"
                            },
                            {
                                "@name": "vkDestroyQueryPool"
                            },
                            {
                                "@name": "vkGetQueryPoolResults"
                            }
                        ]
                    },
                    {
                        "@comment": "Buffer commands",
                        "type": [
                            {
                                "@name": "VkBuffer"
                            },
                            {
                                "@name": "VkBufferCreateFlagBits"
                            },
                            {
                                "@name": "VkBufferCreateFlags"
                            },
                            {
                                "@name": "VkBufferCreateInfo"
                            },
                            {
                                "@name": "VkBufferUsageFlagBits"
                            },
                            {
                                "@name": "VkBufferUsageFlags"
                            },
                            {
                                "@name": "VkSharingMode"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateBuffer"
                            },
                            {
                                "@name": "vkDestroyBuffer"
                            }
                        ]
                    },
                    {
                        "@comment": "Buffer view commands",
                        "type": [
                            {
                                "@name": "VkBufferView"
                            },
                            {
                                "@name": "VkBufferViewCreateFlags",
                                "@comment": "Will add VkBufferViewFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkBufferViewCreateInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateBufferView"
                            },
                            {
                                "@name": "vkDestroyBufferView"
                            }
                        ]
                    },
                    {
                        "@comment": "Image commands",
                        "type": [
                            {
                                "@name": "VkImage"
                            },
                            {
                                "@name": "VkImageCreateInfo"
                            },
                            {
                                "@name": "VkImageLayout"
                            },
                            {
                                "@name": "VkSubresourceLayout"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateImage"
                            },
                            {
                                "@name": "vkDestroyImage"
                            },
                            {
                                "@name": "vkGetImageSubresourceLayout"
                            }
                        ]
                    },
                    {
                        "@comment": "Image view commands",
                        "type": [
                            {
                                "@name": "VkComponentMapping"
                            },
                            {
                                "@name": "VkComponentSwizzle"
                            },
                            {
                                "@name": "VkImageSubresourceRange"
                            },
                            {
                                "@name": "VkImageView"
                            },
                            {
                                "@name": "VkImageViewCreateFlagBits"
                            },
                            {
                                "@name": "VkImageViewCreateFlags"
                            },
                            {
                                "@name": "VkImageViewCreateInfo"
                            },
                            {
                                "@name": "VkImageViewType"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateImageView"
                            },
                            {
                                "@name": "vkDestroyImageView"
                            }
                        ]
                    },
                    {
                        "@comment": "Shader commands",
                        "type": [
                            {
                                "@name": "VkShaderModule"
                            },
                            {
                                "@name": "VkShaderModuleCreateFlags"
                            },
                            {
                                "@name": "VkShaderModuleCreateInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateShaderModule"
                            },
                            {
                                "@name": "vkDestroyShaderModule"
                            }
                        ]
                    },
                    {
                        "@comment": "Pipeline Cache commands",
                        "type": [
                            {
                                "@name": "VkPipelineCache"
                            },
                            {
                                "@name": "VkPipelineCacheCreateFlags",
                                "@comment": "VkPipelineCacheCreateFlagBits was added later"
                            },
                            {
                                "@name": "VkPipelineCacheCreateInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreatePipelineCache"
                            },
                            {
                                "@name": "vkDestroyPipelineCache"
                            },
                            {
                                "@name": "vkGetPipelineCacheData"
                            },
                            {
                                "@name": "vkMergePipelineCaches"
                            }
                        ]
                    },
                    {
                        "@comment": "Pipeline commands",
                        "type": [
                            {
                                "@name": "VkBlendFactor"
                            },
                            {
                                "@name": "VkBlendOp"
                            },
                            {
                                "@name": "VkColorComponentFlagBits"
                            },
                            {
                                "@name": "VkColorComponentFlags"
                            },
                            {
                                "@name": "VkCompareOp"
                            },
                            {
                                "@name": "VkComputePipelineCreateInfo"
                            },
                            {
                                "@name": "VkCullModeFlagBits"
                            },
                            {
                                "@name": "VkCullModeFlags"
                            },
                            {
                                "@name": "VkDynamicState"
                            },
                            {
                                "@name": "VkFrontFace"
                            },
                            {
                                "@name": "VkGraphicsPipelineCreateInfo"
                            },
                            {
                                "@name": "VkLogicOp"
                            },
                            {
                                "@name": "VkPipeline"
                            },
                            {
                                "@name": "VkPipelineColorBlendAttachmentState"
                            },
                            {
                                "@name": "VkPipelineColorBlendStateCreateFlags",
                                "@comment": "Will add VkPipeline*StateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkPipelineColorBlendStateCreateInfo"
                            },
                            {
                                "@name": "VkPipelineCreateFlagBits"
                            },
                            {
                                "@name": "VkPipelineCreateFlags"
                            },
                            {
                                "@name": "VkPipelineDepthStencilStateCreateFlags",
                                "@comment": "Will add VkPipeline*StateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkPipelineDepthStencilStateCreateInfo"
                            },
                            {
                                "@name": "VkPipelineDynamicStateCreateFlags",
                                "@comment": "Will add VkPipeline*StateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkPipelineDynamicStateCreateInfo"
                            },
                            {
                                "@name": "VkPipelineInputAssemblyStateCreateFlags",
                                "@comment": "Will add VkPipeline*StateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkPipelineInputAssemblyStateCreateInfo"
                            },
                            {
                                "@name": "VkPipelineLayoutCreateFlags",
                                "@comment": "Will add VkPipelineLayoutCreateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkPipelineMultisampleStateCreateFlags",
                                "@comment": "Will add VkPipelineMultisampleStateCreateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkPipelineMultisampleStateCreateInfo"
                            },
                            {
                                "@name": "VkPipelineRasterizationStateCreateFlags",
                                "@comment": "Will add VkPipelineRasterizationStateCreateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkPipelineRasterizationStateCreateInfo"
                            },
                            {
                                "@name": "VkPipelineShaderStageCreateFlagBits"
                            },
                            {
                                "@name": "VkPipelineShaderStageCreateFlags"
                            },
                            {
                                "@name": "VkPipelineShaderStageCreateInfo"
                            },
                            {
                                "@name": "VkPipelineTessellationStateCreateFlags",
                                "@comment": "Will add VkPipelineTessellationStateCreateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkPipelineTessellationStateCreateInfo"
                            },
                            {
                                "@name": "VkPipelineVertexInputStateCreateFlags",
                                "@comment": "Will add VkPipelineVertexInputStateCreateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkPipelineVertexInputStateCreateInfo"
                            },
                            {
                                "@name": "VkPipelineViewportStateCreateFlags",
                                "@comment": "Will add VkPipelineViewportStateCreateFlagBits when bits are defined in the future"
                            },
                            {
                                "@name": "VkPipelineViewportStateCreateInfo"
                            },
                            {
                                "@name": "VkPolygonMode"
                            },
                            {
                                "@name": "VkPrimitiveTopology"
                            },
                            {
                                "@name": "VkSampleMask"
                            },
                            {
                                "@name": "VkShaderStageFlagBits"
                            },
                            {
                                "@name": "VkShaderStageFlags"
                            },
                            {
                                "@name": "VkSpecializationInfo"
                            },
                            {
                                "@name": "VkSpecializationMapEntry"
                            },
                            {
                                "@name": "VkStencilOp"
                            },
                            {
                                "@name": "VkStencilOpState"
                            },
                            {
                                "@name": "VkVertexInputAttributeDescription"
                            },
                            {
                                "@name": "VkVertexInputBindingDescription"
                            },
                            {
                                "@name": "VkVertexInputRate"
                            },
                            {
                                "@name": "VkViewport"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateGraphicsPipelines"
                            },
                            {
                                "@name": "vkCreateComputePipelines"
                            },
                            {
                                "@name": "vkDestroyPipeline"
                            }
                        ]
                    },
                    {
                        "@comment": "Pipeline layout commands",
                        "type": [
                            {
                                "@name": "VkPipelineLayout"
                            },
                            {
                                "@name": "VkPipelineLayoutCreateInfo"
                            },
                            {
                                "@name": "VkPushConstantRange"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreatePipelineLayout"
                            },
                            {
                                "@name": "vkDestroyPipelineLayout"
                            }
                        ]
                    },
                    {
                        "@comment": "Sampler commands",
                        "type": [
                            {
                                "@name": "VkBorderColor"
                            },
                            {
                                "@name": "VkFilter"
                            },
                            {
                                "@name": "VkSampler"
                            },
                            {
                                "@name": "VkSamplerAddressMode"
                            },
                            {
                                "@name": "VkSamplerCreateFlagBits"
                            },
                            {
                                "@name": "VkSamplerCreateFlags"
                            },
                            {
                                "@name": "VkSamplerCreateInfo"
                            },
                            {
                                "@name": "VkSamplerMipmapMode"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateSampler"
                            },
                            {
                                "@name": "vkDestroySampler"
                            }
                        ]
                    },
                    {
                        "@comment": "Descriptor set commands",
                        "type": [
                            {
                                "@name": "VkCopyDescriptorSet"
                            },
                            {
                                "@name": "VkDescriptorBufferInfo"
                            },
                            {
                                "@name": "VkDescriptorImageInfo"
                            },
                            {
                                "@name": "VkDescriptorPool"
                            },
                            {
                                "@name": "VkDescriptorPoolCreateFlagBits"
                            },
                            {
                                "@name": "VkDescriptorPoolCreateFlags"
                            },
                            {
                                "@name": "VkDescriptorPoolCreateInfo"
                            },
                            {
                                "@name": "VkDescriptorPoolResetFlags"
                            },
                            {
                                "@name": "VkDescriptorPoolSize"
                            },
                            {
                                "@name": "VkDescriptorSet"
                            },
                            {
                                "@name": "VkDescriptorSetAllocateInfo"
                            },
                            {
                                "@name": "VkDescriptorSetLayout"
                            },
                            {
                                "@name": "VkDescriptorSetLayoutBinding"
                            },
                            {
                                "@name": "VkDescriptorSetLayoutCreateFlagBits"
                            },
                            {
                                "@name": "VkDescriptorSetLayoutCreateFlags"
                            },
                            {
                                "@name": "VkDescriptorSetLayoutCreateInfo"
                            },
                            {
                                "@name": "VkDescriptorType"
                            },
                            {
                                "@name": "VkWriteDescriptorSet"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateDescriptorSetLayout"
                            },
                            {
                                "@name": "vkDestroyDescriptorSetLayout"
                            },
                            {
                                "@name": "vkCreateDescriptorPool"
                            },
                            {
                                "@name": "vkDestroyDescriptorPool"
                            },
                            {
                                "@name": "vkResetDescriptorPool"
                            },
                            {
                                "@name": "vkAllocateDescriptorSets"
                            },
                            {
                                "@name": "vkFreeDescriptorSets"
                            },
                            {
                                "@name": "vkUpdateDescriptorSets"
                            }
                        ]
                    },
                    {
                        "@comment": "Pass commands",
                        "type": [
                            {
                                "@name": "VkAccessFlagBits"
                            },
                            {
                                "@name": "VkAccessFlags"
                            },
                            {
                                "@name": "VkAttachmentDescription"
                            },
                            {
                                "@name": "VkAttachmentDescriptionFlagBits"
                            },
                            {
                                "@name": "VkAttachmentDescriptionFlags"
                            },
                            {
                                "@name": "VkAttachmentLoadOp"
                            },
                            {
                                "@name": "VkAttachmentReference"
                            },
                            {
                                "@name": "VkAttachmentStoreOp"
                            },
                            {
                                "@name": "VkDependencyFlagBits"
                            },
                            {
                                "@name": "VkDependencyFlags"
                            },
                            {
                                "@name": "VkFramebuffer"
                            },
                            {
                                "@name": "VkFramebufferCreateFlagBits"
                            },
                            {
                                "@name": "VkFramebufferCreateFlags"
                            },
                            {
                                "@name": "VkFramebufferCreateInfo"
                            },
                            {
                                "@name": "VkPipelineBindPoint"
                            },
                            {
                                "@name": "VkRenderPass"
                            },
                            {
                                "@name": "VkRenderPassCreateFlagBits"
                            },
                            {
                                "@name": "VkRenderPassCreateFlags"
                            },
                            {
                                "@name": "VkRenderPassCreateInfo"
                            },
                            {
                                "@name": "VkSubpassDependency"
                            },
                            {
                                "@name": "VkSubpassDescription"
                            },
                            {
                                "@name": "VkSubpassDescriptionFlagBits"
                            },
                            {
                                "@name": "VkSubpassDescriptionFlags"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateFramebuffer"
                            },
                            {
                                "@name": "vkDestroyFramebuffer"
                            },
                            {
                                "@name": "vkCreateRenderPass"
                            },
                            {
                                "@name": "vkDestroyRenderPass"
                            },
                            {
                                "@name": "vkGetRenderAreaGranularity"
                            }
                        ]
                    },
                    {
                        "@comment": "Command pool commands",
                        "type": [
                            {
                                "@name": "VkCommandPool"
                            },
                            {
                                "@name": "VkCommandPoolCreateFlagBits"
                            },
                            {
                                "@name": "VkCommandPoolCreateFlags"
                            },
                            {
                                "@name": "VkCommandPoolCreateInfo"
                            },
                            {
                                "@name": "VkCommandPoolResetFlagBits"
                            },
                            {
                                "@name": "VkCommandPoolResetFlags"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateCommandPool"
                            },
                            {
                                "@name": "vkDestroyCommandPool"
                            },
                            {
                                "@name": "vkResetCommandPool"
                            }
                        ]
                    },
                    {
                        "@comment": "Command buffer commands",
                        "type": [
                            {
                                "@name": "VkCommandBuffer"
                            },
                            {
                                "@name": "VkCommandBufferAllocateInfo"
                            },
                            {
                                "@name": "VkCommandBufferBeginInfo"
                            },
                            {
                                "@name": "VkCommandBufferInheritanceInfo"
                            },
                            {
                                "@name": "VkCommandBufferLevel"
                            },
                            {
                                "@name": "VkCommandBufferResetFlagBits"
                            },
                            {
                                "@name": "VkCommandBufferResetFlags"
                            },
                            {
                                "@name": "VkCommandBufferUsageFlagBits"
                            },
                            {
                                "@name": "VkCommandBufferUsageFlags"
                            },
                            {
                                "@name": "VkQueryControlFlagBits"
                            },
                            {
                                "@name": "VkQueryControlFlags"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkAllocateCommandBuffers"
                            },
                            {
                                "@name": "vkFreeCommandBuffers"
                            },
                            {
                                "@name": "vkBeginCommandBuffer"
                            },
                            {
                                "@name": "vkEndCommandBuffer"
                            },
                            {
                                "@name": "vkResetCommandBuffer"
                            }
                        ]
                    },
                    {
                        "@comment": "Command buffer building commands",
                        "type": [
                            {
                                "@name": "VkBufferCopy"
                            },
                            {
                                "@name": "VkBufferImageCopy"
                            },
                            {
                                "@name": "VkClearAttachment"
                            },
                            {
                                "@name": "VkClearColorValue"
                            },
                            {
                                "@name": "VkClearDepthStencilValue"
                            },
                            {
                                "@name": "VkClearRect"
                            },
                            {
                                "@name": "VkClearValue"
                            },
                            {
                                "@name": "VkImageBlit"
                            },
                            {
                                "@name": "VkImageCopy"
                            },
                            {
                                "@name": "VkImageResolve"
                            },
                            {
                                "@name": "VkImageSubresourceLayers"
                            },
                            {
                                "@name": "VkIndexType"
                            },
                            {
                                "@name": "VkRenderPassBeginInfo"
                            },
                            {
                                "@name": "VkStencilFaceFlagBits"
                            },
                            {
                                "@name": "VkStencilFaceFlags"
                            },
                            {
                                "@name": "VkSubpassContents"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdBindPipeline"
                            },
                            {
                                "@name": "vkCmdSetViewport"
                            },
                            {
                                "@name": "vkCmdSetScissor"
                            },
                            {
                                "@name": "vkCmdSetLineWidth"
                            },
                            {
                                "@name": "vkCmdSetDepthBias"
                            },
                            {
                                "@name": "vkCmdSetBlendConstants"
                            },
                            {
                                "@name": "vkCmdSetDepthBounds"
                            },
                            {
                                "@name": "vkCmdSetStencilCompareMask"
                            },
                            {
                                "@name": "vkCmdSetStencilWriteMask"
                            },
                            {
                                "@name": "vkCmdSetStencilReference"
                            },
                            {
                                "@name": "vkCmdBindDescriptorSets"
                            },
                            {
                                "@name": "vkCmdBindIndexBuffer"
                            },
                            {
                                "@name": "vkCmdBindVertexBuffers"
                            },
                            {
                                "@name": "vkCmdDraw"
                            },
                            {
                                "@name": "vkCmdDrawIndexed"
                            },
                            {
                                "@name": "vkCmdDrawIndirect"
                            },
                            {
                                "@name": "vkCmdDrawIndexedIndirect"
                            },
                            {
                                "@name": "vkCmdDispatch"
                            },
                            {
                                "@name": "vkCmdDispatchIndirect"
                            },
                            {
                                "@name": "vkCmdCopyBuffer"
                            },
                            {
                                "@name": "vkCmdCopyImage"
                            },
                            {
                                "@name": "vkCmdBlitImage"
                            },
                            {
                                "@name": "vkCmdCopyBufferToImage"
                            },
                            {
                                "@name": "vkCmdCopyImageToBuffer"
                            },
                            {
                                "@name": "vkCmdUpdateBuffer"
                            },
                            {
                                "@name": "vkCmdFillBuffer"
                            },
                            {
                                "@name": "vkCmdClearColorImage"
                            },
                            {
                                "@name": "vkCmdClearDepthStencilImage"
                            },
                            {
                                "@name": "vkCmdClearAttachments"
                            },
                            {
                                "@name": "vkCmdResolveImage"
                            },
                            {
                                "@name": "vkCmdSetEvent"
                            },
                            {
                                "@name": "vkCmdResetEvent"
                            },
                            {
                                "@name": "vkCmdWaitEvents"
                            },
                            {
                                "@name": "vkCmdPipelineBarrier"
                            },
                            {
                                "@name": "vkCmdBeginQuery"
                            },
                            {
                                "@name": "vkCmdEndQuery"
                            },
                            {
                                "@name": "vkCmdResetQueryPool"
                            },
                            {
                                "@name": "vkCmdWriteTimestamp"
                            },
                            {
                                "@name": "vkCmdCopyQueryPoolResults"
                            },
                            {
                                "@name": "vkCmdPushConstants"
                            },
                            {
                                "@name": "vkCmdBeginRenderPass"
                            },
                            {
                                "@name": "vkCmdNextSubpass"
                            },
                            {
                                "@name": "vkCmdEndRenderPass"
                            },
                            {
                                "@name": "vkCmdExecuteCommands"
                            }
                        ]
                    }
                ]
            },
            {
                "@api": "vulkan",
                "@name": "VK_VERSION_1_1",
                "@number": "1.1",
                "@comment": "Vulkan 1.1 core API interface definitions.",
                "require": [
                    {
                        "type": {
                            "@name": "VK_API_VERSION_1_1"
                        }
                    },
                    {
                        "@comment": "Device Initialization",
                        "command": [
                            {
                                "@name": "vkEnumerateInstanceVersion"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_relaxed_block_layout, which has no API"
                    },
                    {
                        "@comment": "Promoted from VK_KHR_storage_buffer_storage_class, which has no API"
                    },
                    {
                        "@comment": "Originally based on VK_KHR_subgroup (extension 94), but the actual enum block used was, incorrectly, that of extension 95",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "95",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceSubgroupProperties"
                            },
                            {
                                "@name": "VkSubgroupFeatureFlags"
                            },
                            {
                                "@name": "VkSubgroupFeatureFlagBits"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_bind_memory2",
                        "command": [
                            {
                                "@name": "vkBindBufferMemory2"
                            },
                            {
                                "@name": "vkBindImageMemory2"
                            }
                        ],
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "158",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "158",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO"
                            },
                            {
                                "@bitpos": "10",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_ALIAS_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkBindBufferMemoryInfo"
                            },
                            {
                                "@name": "VkBindImageMemoryInfo"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_16bit_storage",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "84",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDevice16BitStorageFeatures"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_dedicated_allocation",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "128",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "128",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkMemoryDedicatedRequirements"
                            },
                            {
                                "@name": "VkMemoryDedicatedAllocateInfo"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_device_group",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "61",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "61",
                                "@offset": "3",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "61",
                                "@offset": "4",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "61",
                                "@offset": "5",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "61",
                                "@offset": "6",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO"
                            },
                            {
                                "@bitpos": "3",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT"
                            },
                            {
                                "@bitpos": "4",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_DISPATCH_BASE_BIT"
                            },
                            {
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_DISPATCH_BASE",
                                "@alias": "VK_PIPELINE_CREATE_DISPATCH_BASE_BIT"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkDependencyFlagBits",
                                "@name": "VK_DEPENDENCY_DEVICE_GROUP_BIT",
                                "@comment": "Dependency is across devices"
                            }
                        ],
                        "comment": [
                            "offset 1 reserved for the old VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHX enum",
                            "offset 2 reserved for the old VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHX enum"
                        ],
                        "type": [
                            {
                                "@name": "VkPeerMemoryFeatureFlags"
                            },
                            {
                                "@name": "VkPeerMemoryFeatureFlagBits"
                            },
                            {
                                "@name": "VkMemoryAllocateFlags"
                            },
                            {
                                "@name": "VkMemoryAllocateFlagBits"
                            },
                            {
                                "@name": "VkMemoryAllocateFlagsInfo"
                            },
                            {
                                "@name": "VkDeviceGroupRenderPassBeginInfo"
                            },
                            {
                                "@name": "VkDeviceGroupCommandBufferBeginInfo"
                            },
                            {
                                "@name": "VkDeviceGroupSubmitInfo"
                            },
                            {
                                "@name": "VkDeviceGroupBindSparseInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetDeviceGroupPeerMemoryFeatures"
                            },
                            {
                                "@name": "vkCmdSetDeviceMask"
                            },
                            {
                                "@name": "vkCmdDispatchBase"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_device_group + VK_KHR_bind_memory2",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "61",
                                "@offset": "13",
                                "@name": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "61",
                                "@offset": "14",
                                "@name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO"
                            },
                            {
                                "@bitpos": "6",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT",
                                "@comment": "Allows using VkBindImageMemoryDeviceGroupInfo::pSplitInstanceBindRegions when binding memory to the image"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkBindBufferMemoryDeviceGroupInfo"
                            },
                            {
                                "@name": "VkBindImageMemoryDeviceGroupInfo"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_device_group_creation",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "71",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "71",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO"
                            },
                            {
                                "@name": "VK_MAX_DEVICE_GROUP_SIZE"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkMemoryHeapFlagBits",
                                "@name": "VK_MEMORY_HEAP_MULTI_INSTANCE_BIT",
                                "@comment": "If set, heap allocations allocate multiple instances by default"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceGroupProperties"
                            },
                            {
                                "@name": "VkDeviceGroupDeviceCreateInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkEnumeratePhysicalDeviceGroups"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_get_memory_requirements2",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "147",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "147",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "147",
                                "@offset": "2",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "147",
                                "@offset": "3",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "147",
                                "@offset": "4",
                                "@name": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkBufferMemoryRequirementsInfo2"
                            },
                            {
                                "@name": "VkImageMemoryRequirementsInfo2"
                            },
                            {
                                "@name": "VkImageSparseMemoryRequirementsInfo2"
                            },
                            {
                                "@name": "VkMemoryRequirements2"
                            },
                            {
                                "@name": "VkSparseImageMemoryRequirements2"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetImageMemoryRequirements2"
                            },
                            {
                                "@name": "vkGetBufferMemoryRequirements2"
                            },
                            {
                                "@name": "vkGetImageSparseMemoryRequirements2"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_get_physical_device_properties2",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "60",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "60",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "60",
                                "@offset": "2",
                                "@name": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "60",
                                "@offset": "3",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "60",
                                "@offset": "4",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "60",
                                "@offset": "5",
                                "@name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "60",
                                "@offset": "6",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "60",
                                "@offset": "7",
                                "@name": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "60",
                                "@offset": "8",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceFeatures2"
                            },
                            {
                                "@name": "VkPhysicalDeviceProperties2"
                            },
                            {
                                "@name": "VkFormatProperties2"
                            },
                            {
                                "@name": "VkImageFormatProperties2"
                            },
                            {
                                "@name": "VkPhysicalDeviceImageFormatInfo2"
                            },
                            {
                                "@name": "VkQueueFamilyProperties2"
                            },
                            {
                                "@name": "VkPhysicalDeviceMemoryProperties2"
                            },
                            {
                                "@name": "VkSparseImageFormatProperties2"
                            },
                            {
                                "@name": "VkPhysicalDeviceSparseImageFormatInfo2"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceFeatures2"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceProperties2"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceFormatProperties2"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceImageFormatProperties2"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceQueueFamilyProperties2"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceMemoryProperties2"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceSparseImageFormatProperties2"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_maintenance1",
                        "enum": [
                            {
                                "@extends": "VkResult",
                                "@extnumber": "70",
                                "@offset": "0",
                                "@dir": "-",
                                "@name": "VK_ERROR_OUT_OF_POOL_MEMORY"
                            },
                            {
                                "@bitpos": "14",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_TRANSFER_SRC_BIT",
                                "@comment": "Format can be used as the source image of image transfer commands"
                            },
                            {
                                "@bitpos": "15",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_TRANSFER_DST_BIT",
                                "@comment": "Format can be used as the destination image of image transfer commands"
                            },
                            {
                                "@bitpos": "5",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT",
                                "@comment": "The 3D image can be viewed as a 2D or 2D array image"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkTrimCommandPool"
                            }
                        ],
                        "comment": "Additional dependent types / tokens extending enumerants, not explicitly mentioned",
                        "type": {
                            "@name": "VkCommandPoolTrimFlags"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_maintenance2",
                        "enum": [
                            {
                                "@bitpos": "7",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT"
                            },
                            {
                                "@bitpos": "8",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_EXTENDED_USAGE_BIT"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "118",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "118",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "118",
                                "@offset": "2",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "118",
                                "@offset": "3",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkImageLayout",
                                "@extnumber": "118",
                                "@offset": "0",
                                "@name": "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL"
                            },
                            {
                                "@extends": "VkImageLayout",
                                "@extnumber": "118",
                                "@offset": "1",
                                "@name": "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDevicePointClippingProperties"
                            },
                            {
                                "@name": "VkPointClippingBehavior"
                            },
                            {
                                "@name": "VkRenderPassInputAttachmentAspectCreateInfo"
                            },
                            {
                                "@name": "VkInputAttachmentAspectReference"
                            },
                            {
                                "@name": "VkImageViewUsageCreateInfo"
                            },
                            {
                                "@name": "VkTessellationDomainOrigin"
                            },
                            {
                                "@name": "VkPipelineTessellationDomainOriginStateCreateInfo"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_multiview",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "54",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "54",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "54",
                                "@offset": "2",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkDependencyFlagBits",
                                "@name": "VK_DEPENDENCY_VIEW_LOCAL_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRenderPassMultiviewCreateInfo"
                            },
                            {
                                "@name": "VkPhysicalDeviceMultiviewFeatures"
                            },
                            {
                                "@name": "VkPhysicalDeviceMultiviewProperties"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_variable_pointers",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "121",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceVariablePointerFeatures"
                            },
                            {
                                "@name": "VkPhysicalDeviceVariablePointersFeatures"
                            }
                        ]
                    },
                    {
                        "@comment": "Originally based on VK_KHR_protected_memory (extension 146), which was never published; thus the mystifying large value= numbers below. These are not aliased since they were not actually promoted from an extension.",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "146",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "146",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "146",
                                "@offset": "2",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "146",
                                "@offset": "3",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2"
                            },
                            {
                                "@bitpos": "4",
                                "@extends": "VkQueueFlagBits",
                                "@name": "VK_QUEUE_PROTECTED_BIT",
                                "@comment": "Queues may support protected operations"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkDeviceQueueCreateFlagBits",
                                "@name": "VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT",
                                "@comment": "Queue is a protected-capable device queue"
                            },
                            {
                                "@bitpos": "5",
                                "@extends": "VkMemoryPropertyFlagBits",
                                "@name": "VK_MEMORY_PROPERTY_PROTECTED_BIT",
                                "@comment": "Memory is protected"
                            },
                            {
                                "@bitpos": "3",
                                "@extends": "VkBufferCreateFlagBits",
                                "@name": "VK_BUFFER_CREATE_PROTECTED_BIT",
                                "@comment": "Buffer requires protected memory"
                            },
                            {
                                "@bitpos": "11",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_PROTECTED_BIT",
                                "@comment": "Image requires protected memory"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkCommandPoolCreateFlagBits",
                                "@name": "VK_COMMAND_POOL_CREATE_PROTECTED_BIT",
                                "@comment": "Command buffers allocated from pool are protected command buffers"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDeviceQueueCreateFlagBits",
                                "@comment": "This is a temporary workaround for processors not recognizing that VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT above also requires this type"
                            },
                            {
                                "@name": "VkPhysicalDeviceProtectedMemoryFeatures"
                            },
                            {
                                "@name": "VkPhysicalDeviceProtectedMemoryProperties"
                            },
                            {
                                "@name": "VkDeviceQueueInfo2"
                            },
                            {
                                "@name": "VkProtectedSubmitInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetDeviceQueue2"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_sampler_ycbcr_conversion",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "157",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "157",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "157",
                                "@offset": "2",
                                "@name": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "157",
                                "@offset": "3",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "157",
                                "@offset": "4",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "157",
                                "@offset": "5",
                                "@name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES"
                            },
                            {
                                "@extends": "VkObjectType",
                                "@extnumber": "157",
                                "@offset": "0",
                                "@name": "VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "0",
                                "@name": "VK_FORMAT_G8B8G8R8_422_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "1",
                                "@name": "VK_FORMAT_B8G8R8G8_422_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "2",
                                "@name": "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "3",
                                "@name": "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "4",
                                "@name": "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "5",
                                "@name": "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "6",
                                "@name": "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "7",
                                "@name": "VK_FORMAT_R10X6_UNORM_PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "8",
                                "@name": "VK_FORMAT_R10X6G10X6_UNORM_2PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "9",
                                "@name": "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "10",
                                "@name": "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "11",
                                "@name": "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "12",
                                "@name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "13",
                                "@name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "14",
                                "@name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "15",
                                "@name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "16",
                                "@name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "17",
                                "@name": "VK_FORMAT_R12X4_UNORM_PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "18",
                                "@name": "VK_FORMAT_R12X4G12X4_UNORM_2PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "19",
                                "@name": "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "20",
                                "@name": "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "21",
                                "@name": "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "22",
                                "@name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "23",
                                "@name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "24",
                                "@name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "25",
                                "@name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "26",
                                "@name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "27",
                                "@name": "VK_FORMAT_G16B16G16R16_422_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "28",
                                "@name": "VK_FORMAT_B16G16R16G16_422_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "29",
                                "@name": "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "30",
                                "@name": "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "31",
                                "@name": "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "32",
                                "@name": "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "157",
                                "@offset": "33",
                                "@name": "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM"
                            },
                            {
                                "@bitpos": "4",
                                "@extends": "VkImageAspectFlagBits",
                                "@name": "VK_IMAGE_ASPECT_PLANE_0_BIT"
                            },
                            {
                                "@bitpos": "5",
                                "@extends": "VkImageAspectFlagBits",
                                "@name": "VK_IMAGE_ASPECT_PLANE_1_BIT"
                            },
                            {
                                "@bitpos": "6",
                                "@extends": "VkImageAspectFlagBits",
                                "@name": "VK_IMAGE_ASPECT_PLANE_2_BIT"
                            },
                            {
                                "@bitpos": "9",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_DISJOINT_BIT"
                            },
                            {
                                "@bitpos": "17",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT",
                                "@comment": "Format can have midpoint rather than cosited chroma samples"
                            },
                            {
                                "@bitpos": "18",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT",
                                "@comment": "Format can be used with linear filtering whilst color conversion is enabled"
                            },
                            {
                                "@bitpos": "19",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT",
                                "@comment": "Format can have different chroma, min and mag filters"
                            },
                            {
                                "@bitpos": "20",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"
                            },
                            {
                                "@bitpos": "21",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"
                            },
                            {
                                "@bitpos": "22",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_DISJOINT_BIT",
                                "@comment": "Format supports disjoint planes"
                            },
                            {
                                "@bitpos": "23",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT",
                                "@comment": "Format can have cosited rather than midpoint chroma samples"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSamplerYcbcrConversionCreateInfo"
                            },
                            {
                                "@name": "VkSamplerYcbcrConversionInfo"
                            },
                            {
                                "@name": "VkBindImagePlaneMemoryInfo"
                            },
                            {
                                "@name": "VkImagePlaneMemoryRequirementsInfo"
                            },
                            {
                                "@name": "VkPhysicalDeviceSamplerYcbcrConversionFeatures"
                            },
                            {
                                "@name": "VkSamplerYcbcrConversionImageFormatProperties"
                            },
                            {
                                "@name": "VkSamplerYcbcrConversion"
                            },
                            {
                                "@name": "VkSamplerYcbcrModelConversion"
                            },
                            {
                                "@name": "VkSamplerYcbcrRange"
                            },
                            {
                                "@name": "VkChromaLocation"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateSamplerYcbcrConversion"
                            },
                            {
                                "@name": "vkDestroySamplerYcbcrConversion"
                            }
                        ],
                        "comment": "Additional dependent types / tokens extending enumerants, not explicitly mentioned"
                    },
                    {
                        "@comment": "Promoted from VK_KHR_descriptor_update_template",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "86",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkObjectType",
                                "@extnumber": "86",
                                "@offset": "0",
                                "@name": "VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateDescriptorUpdateTemplate"
                            },
                            {
                                "@name": "vkDestroyDescriptorUpdateTemplate"
                            },
                            {
                                "@name": "vkUpdateDescriptorSetWithTemplate"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDescriptorUpdateTemplate"
                            },
                            {
                                "@name": "VkDescriptorUpdateTemplateCreateFlags"
                            },
                            {
                                "@name": "VkDescriptorUpdateTemplateType"
                            },
                            {
                                "@name": "VkDescriptorUpdateTemplateEntry"
                            },
                            {
                                "@name": "VkDescriptorUpdateTemplateCreateInfo"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_external_memory_capabilities",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "72",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "72",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "72",
                                "@offset": "2",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "72",
                                "@offset": "3",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "72",
                                "@offset": "4",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES"
                            },
                            {
                                "@name": "VK_LUID_SIZE"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkExternalMemoryHandleTypeFlags"
                            },
                            {
                                "@name": "VkExternalMemoryHandleTypeFlagBits"
                            },
                            {
                                "@name": "VkExternalMemoryFeatureFlags"
                            },
                            {
                                "@name": "VkExternalMemoryFeatureFlagBits"
                            },
                            {
                                "@name": "VkExternalMemoryProperties"
                            },
                            {
                                "@name": "VkPhysicalDeviceExternalImageFormatInfo"
                            },
                            {
                                "@name": "VkExternalImageFormatProperties"
                            },
                            {
                                "@name": "VkPhysicalDeviceExternalBufferInfo"
                            },
                            {
                                "@name": "VkExternalBufferProperties"
                            },
                            {
                                "@name": "VkPhysicalDeviceIDProperties"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceExternalBufferProperties"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_external_memory",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "73",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "73",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "73",
                                "@offset": "2",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO"
                            },
                            {
                                "@extends": "VkResult",
                                "@extnumber": "73",
                                "@offset": "3",
                                "@dir": "-",
                                "@name": "VK_ERROR_INVALID_EXTERNAL_HANDLE"
                            },
                            {
                                "@name": "VK_QUEUE_FAMILY_EXTERNAL"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkExternalMemoryImageCreateInfo"
                            },
                            {
                                "@name": "VkExternalMemoryBufferCreateInfo"
                            },
                            {
                                "@name": "VkExportMemoryAllocateInfo"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_external_fence_capabilities",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "113",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "113",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkExternalFenceHandleTypeFlags"
                            },
                            {
                                "@name": "VkExternalFenceHandleTypeFlagBits"
                            },
                            {
                                "@name": "VkExternalFenceFeatureFlags"
                            },
                            {
                                "@name": "VkExternalFenceFeatureFlagBits"
                            },
                            {
                                "@name": "VkPhysicalDeviceExternalFenceInfo"
                            },
                            {
                                "@name": "VkExternalFenceProperties"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceExternalFenceProperties"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_external_fence",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "114",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkFenceImportFlags"
                            },
                            {
                                "@name": "VkFenceImportFlagBits"
                            },
                            {
                                "@name": "VkExportFenceCreateInfo"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_external_semaphore",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "78",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSemaphoreImportFlags"
                            },
                            {
                                "@name": "VkSemaphoreImportFlagBits"
                            },
                            {
                                "@name": "VkExportSemaphoreCreateInfo"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_external_semaphore_capabilities",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "77",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "77",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkExternalSemaphoreHandleTypeFlags"
                            },
                            {
                                "@name": "VkExternalSemaphoreHandleTypeFlagBits"
                            },
                            {
                                "@name": "VkExternalSemaphoreFeatureFlags"
                            },
                            {
                                "@name": "VkExternalSemaphoreFeatureFlagBits"
                            },
                            {
                                "@name": "VkPhysicalDeviceExternalSemaphoreInfo"
                            },
                            {
                                "@name": "VkExternalSemaphoreProperties"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceExternalSemaphoreProperties"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_maintenance3",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "169",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "169",
                                "@offset": "1",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceMaintenance3Properties"
                            },
                            {
                                "@name": "VkDescriptorSetLayoutSupport"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetDescriptorSetLayoutSupport"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_shader_draw_parameters, with a feature support query added",
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@extnumber": "64",
                                "@offset": "0",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceShaderDrawParameterFeatures"
                            },
                            {
                                "@name": "VkPhysicalDeviceShaderDrawParametersFeatures"
                            }
                        ]
                    }
                ]
            },
            {
                "@api": "vulkan",
                "@name": "VK_VERSION_1_2",
                "@number": "1.2",
                "@comment": "Vulkan 1.2 core API interface definitions.",
                "require": [
                    {
                        "type": {
                            "@name": "VK_API_VERSION_1_2"
                        }
                    },
                    {
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@value": "49",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@value": "50",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@value": "51",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@value": "52",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceVulkan11Features"
                            },
                            {
                                "@name": "VkPhysicalDeviceVulkan11Properties"
                            },
                            {
                                "@name": "VkPhysicalDeviceVulkan12Features"
                            },
                            {
                                "@name": "VkPhysicalDeviceVulkan12Properties"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_image_format_list (extension 148)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "148",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO"
                            }
                        ],
                        "type": {
                            "@name": "VkImageFormatListCreateInfo"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_sampler_mirror_clamp_to_edge (extension 15)",
                        "enum": [
                            {
                                "@value": "4",
                                "@extends": "VkSamplerAddressMode",
                                "@name": "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE",
                                "@comment": "No need to add an extnumber attribute, since this uses a core enum value"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_draw_indirect_count (extension 170)",
                        "command": [
                            {
                                "@name": "vkCmdDrawIndirectCount"
                            },
                            {
                                "@name": "vkCmdDrawIndexedIndirectCount"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_create_renderpass2 (extension 110)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "110",
                                "@name": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "110",
                                "@name": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "110",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@extnumber": "110",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@extnumber": "110",
                                "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@extnumber": "110",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@extnumber": "110",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_END_INFO"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateRenderPass2"
                            },
                            {
                                "@name": "vkCmdBeginRenderPass2"
                            },
                            {
                                "@name": "vkCmdNextSubpass2"
                            },
                            {
                                "@name": "vkCmdEndRenderPass2"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRenderPassCreateInfo2"
                            },
                            {
                                "@name": "VkAttachmentDescription2"
                            },
                            {
                                "@name": "VkAttachmentReference2"
                            },
                            {
                                "@name": "VkSubpassDescription2"
                            },
                            {
                                "@name": "VkSubpassDependency2"
                            },
                            {
                                "@name": "VkSubpassBeginInfo"
                            },
                            {
                                "@name": "VkSubpassEndInfo"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_8bit_storage (extension 178)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "178",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDevice8BitStorageFeatures"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_driver_properties (extension 197)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "197",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES"
                            },
                            {
                                "@name": "VK_MAX_DRIVER_NAME_SIZE"
                            },
                            {
                                "@name": "VK_MAX_DRIVER_INFO_SIZE"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDriverId"
                            },
                            {
                                "@name": "VkConformanceVersion"
                            },
                            {
                                "@name": "VkPhysicalDeviceDriverProperties"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_shader_atomic_int64 (extension 181)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "181",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderAtomicInt64Features"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_shader_float16_int8 (extension 83)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "83",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderFloat16Int8Features"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_shader_float_controls (extension 198)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "198",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceFloatControlsProperties"
                            },
                            {
                                "@name": "VkShaderFloatControlsIndependence"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_descriptor_indexing (extension 162)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "162",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "162",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "162",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@extnumber": "162",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@extnumber": "162",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkDescriptorPoolCreateFlagBits",
                                "@name": "VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkDescriptorSetLayoutCreateFlagBits",
                                "@name": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT"
                            },
                            {
                                "@offset": "0",
                                "@dir": "-",
                                "@extends": "VkResult",
                                "@extnumber": "162",
                                "@name": "VK_ERROR_FRAGMENTATION"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDescriptorSetLayoutBindingFlagsCreateInfo"
                            },
                            {
                                "@name": "VkPhysicalDeviceDescriptorIndexingFeatures"
                            },
                            {
                                "@name": "VkPhysicalDeviceDescriptorIndexingProperties"
                            },
                            {
                                "@name": "VkDescriptorSetVariableDescriptorCountAllocateInfo"
                            },
                            {
                                "@name": "VkDescriptorSetVariableDescriptorCountLayoutSupport"
                            },
                            {
                                "@name": "VkDescriptorBindingFlagBits"
                            },
                            {
                                "@name": "VkDescriptorBindingFlags"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_depth_stencil_resolve (extension 200)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "200",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "200",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSubpassDescriptionDepthStencilResolve"
                            },
                            {
                                "@name": "VkPhysicalDeviceDepthStencilResolveProperties"
                            },
                            {
                                "@name": "VkResolveModeFlagBits"
                            },
                            {
                                "@name": "VkResolveModeFlags"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_scalar_block_layout (extension 222))",
                        "type": {
                            "@name": "VkPhysicalDeviceScalarBlockLayoutFeatures"
                        },
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "222",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_shader_viewport_index_layer, which has no API (extension 163)"
                    },
                    {
                        "@comment": "Promoted from VK_EXT_separate_stencil_usage (extension 247)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "247",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO"
                            }
                        ],
                        "type": {
                            "@name": "VkImageStencilUsageCreateInfo"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_EXT_sampler_filter_minmax (extension 131)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "131",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "131",
                                "@name": "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO"
                            },
                            {
                                "@bitpos": "16",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT",
                                "@comment": "Format can be used with min/max reduction filtering"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSamplerReductionMode"
                            },
                            {
                                "@name": "VkSamplerReductionModeCreateInfo"
                            },
                            {
                                "@name": "VkPhysicalDeviceSamplerFilterMinmaxProperties"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_vulkan_memory_model (extension 212)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "212",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceVulkanMemoryModelFeatures"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_imageless_framebuffer (extension 109)",
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceImagelessFramebufferFeatures"
                            },
                            {
                                "@name": "VkFramebufferAttachmentsCreateInfo"
                            },
                            {
                                "@name": "VkFramebufferAttachmentImageInfo"
                            },
                            {
                                "@name": "VkRenderPassAttachmentBeginInfo"
                            }
                        ],
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "109",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "109",
                                "@name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "109",
                                "@name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@extnumber": "109",
                                "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkFramebufferCreateFlagBits",
                                "@name": "VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_uniform_buffer_standard_layout (extension 254)",
                        "type": {
                            "@name": "VkPhysicalDeviceUniformBufferStandardLayoutFeatures"
                        },
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "254",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_shader_subgroup_extended_types (extension 176)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "176",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_spirv_1_4 (extension 237)"
                    },
                    {
                        "@comment": "Promoted from VK_KHR_separate_depth_stencil_layouts (extension 242)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "242",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "242",
                                "@name": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "242",
                                "@name": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkImageLayout",
                                "@extnumber": "242",
                                "@name": "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkImageLayout",
                                "@extnumber": "242",
                                "@name": "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkImageLayout",
                                "@extnumber": "242",
                                "@name": "VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkImageLayout",
                                "@extnumber": "242",
                                "@name": "VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures"
                            },
                            {
                                "@name": "VkAttachmentReferenceStencilLayout"
                            },
                            {
                                "@name": "VkAttachmentDescriptionStencilLayout"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_host_query_reset (extension 262)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "262",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceHostQueryResetFeatures"
                        },
                        "command": [
                            {
                                "@name": "vkResetQueryPool"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_timeline_semaphore (extension 208)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "208",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "208",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "208",
                                "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@extnumber": "208",
                                "@name": "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@extnumber": "208",
                                "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@extnumber": "208",
                                "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSemaphoreType"
                            },
                            {
                                "@name": "VkPhysicalDeviceTimelineSemaphoreFeatures"
                            },
                            {
                                "@name": "VkPhysicalDeviceTimelineSemaphoreProperties"
                            },
                            {
                                "@name": "VkSemaphoreTypeCreateInfo"
                            },
                            {
                                "@name": "VkTimelineSemaphoreSubmitInfo"
                            },
                            {
                                "@name": "VkSemaphoreWaitFlagBits"
                            },
                            {
                                "@name": "VkSemaphoreWaitFlags"
                            },
                            {
                                "@name": "VkSemaphoreWaitInfo"
                            },
                            {
                                "@name": "VkSemaphoreSignalInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetSemaphoreCounterValue"
                            },
                            {
                                "@name": "vkWaitSemaphores"
                            },
                            {
                                "@name": "vkSignalSemaphore"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_buffer_device_address (extension 258)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "258",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "245",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "258",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@extnumber": "258",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@extnumber": "258",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO"
                            },
                            {
                                "@bitpos": "17",
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT"
                            },
                            {
                                "@bitpos": "4",
                                "@extends": "VkBufferCreateFlagBits",
                                "@name": "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkMemoryAllocateFlagBits",
                                "@name": "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkMemoryAllocateFlagBits",
                                "@name": "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT"
                            },
                            {
                                "@offset": "0",
                                "@dir": "-",
                                "@extends": "VkResult",
                                "@extnumber": "258",
                                "@name": "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceBufferDeviceAddressFeatures"
                            },
                            {
                                "@name": "VkBufferDeviceAddressInfo"
                            },
                            {
                                "@name": "VkBufferOpaqueCaptureAddressCreateInfo"
                            },
                            {
                                "@name": "VkMemoryOpaqueCaptureAddressAllocateInfo"
                            },
                            {
                                "@name": "VkDeviceMemoryOpaqueCaptureAddressInfo"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetBufferDeviceAddress"
                            },
                            {
                                "@name": "vkGetBufferOpaqueCaptureAddress"
                            },
                            {
                                "@name": "vkGetDeviceMemoryOpaqueCaptureAddress"
                            }
                        ]
                    }
                ]
            },
            {
                "@api": "vulkan",
                "@name": "VK_VERSION_1_3",
                "@number": "1.3",
                "@comment": "Vulkan 1.3 core API interface definitions.",
                "require": [
                    {
                        "type": {
                            "@name": "VK_API_VERSION_1_3"
                        }
                    },
                    {
                        "enum": [
                            {
                                "@extends": "VkStructureType",
                                "@value": "53",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@value": "54",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceVulkan13Features"
                            },
                            {
                                "@name": "VkPhysicalDeviceVulkan13Properties"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_pipeline_creation_feedback (extension 193)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "193",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPipelineCreationFeedbackFlagBits"
                            },
                            {
                                "@name": "VkPipelineCreationFeedbackFlags"
                            },
                            {
                                "@name": "VkPipelineCreationFeedbackCreateInfo"
                            },
                            {
                                "@name": "VkPipelineCreationFeedback"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_shader_terminate_invocation (extension 216)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "216",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderTerminateInvocationFeatures"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_EXT_tooling_info (extension 246)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "246",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkToolPurposeFlagBits"
                            },
                            {
                                "@name": "VkToolPurposeFlags"
                            },
                            {
                                "@name": "VkPhysicalDeviceToolProperties"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceToolProperties"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_shader_demote_to_helper_invocation (extension 277)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "277",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_shader_non_semantic_info (extension 294)"
                    },
                    {
                        "@comment": "Promoted from VK_EXT_private_data (extension 296)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "296",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "296",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "296",
                                "@name": "VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@extnumber": "296",
                                "@name": "VK_OBJECT_TYPE_PRIVATE_DATA_SLOT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDevicePrivateDataFeatures"
                            },
                            {
                                "@name": "VkDevicePrivateDataCreateInfo"
                            },
                            {
                                "@name": "VkPrivateDataSlotCreateInfo"
                            },
                            {
                                "@name": "VkPrivateDataSlot"
                            },
                            {
                                "@name": "VkPrivateDataSlotCreateFlags"
                            },
                            {
                                "@name": "VkPrivateDataSlotCreateFlagBits"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreatePrivateDataSlot"
                            },
                            {
                                "@name": "vkDestroyPrivateDataSlot"
                            },
                            {
                                "@name": "vkSetPrivateData"
                            },
                            {
                                "@name": "vkGetPrivateData"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_pipeline_creation_cache_control (extension 298)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "298",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES"
                            },
                            {
                                "@bitpos": "8",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT"
                            },
                            {
                                "@bitpos": "9",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkResult",
                                "@extnumber": "298",
                                "@name": "VK_PIPELINE_COMPILE_REQUIRED"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkPipelineCacheCreateFlagBits",
                                "@name": "VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDevicePipelineCreationCacheControlFeatures"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_synchronization2 (extension 315)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "315",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_BARRIER_2"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "315",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "315",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@extnumber": "315",
                                "@name": "VK_STRUCTURE_TYPE_DEPENDENCY_INFO"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@extnumber": "315",
                                "@name": "VK_STRUCTURE_TYPE_SUBMIT_INFO_2"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@extnumber": "315",
                                "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@extnumber": "315",
                                "@name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkStructureType",
                                "@extnumber": "315",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkEventCreateFlagBits",
                                "@name": "VK_EVENT_CREATE_DEVICE_ONLY_BIT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkImageLayout",
                                "@extnumber": "315",
                                "@name": "VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkImageLayout",
                                "@extnumber": "315",
                                "@name": "VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL"
                            },
                            {
                                "@value": "0",
                                "@extends": "VkPipelineStageFlagBits",
                                "@name": "VK_PIPELINE_STAGE_NONE"
                            },
                            {
                                "@value": "0",
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_NONE"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPipelineStageFlags2"
                            },
                            {
                                "@name": "VkPipelineStageFlagBits2"
                            },
                            {
                                "@name": "VkAccessFlags2"
                            },
                            {
                                "@name": "VkAccessFlagBits2"
                            },
                            {
                                "@name": "VkMemoryBarrier2"
                            },
                            {
                                "@name": "VkBufferMemoryBarrier2"
                            },
                            {
                                "@name": "VkImageMemoryBarrier2"
                            },
                            {
                                "@name": "VkDependencyInfo"
                            },
                            {
                                "@name": "VkSubmitInfo2"
                            },
                            {
                                "@name": "VkSemaphoreSubmitInfo"
                            },
                            {
                                "@name": "VkCommandBufferSubmitInfo"
                            },
                            {
                                "@name": "VkSubmitFlagBits"
                            },
                            {
                                "@name": "VkSubmitFlags"
                            },
                            {
                                "@name": "VkPhysicalDeviceSynchronization2Features"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetEvent2"
                            },
                            {
                                "@name": "vkCmdResetEvent2"
                            },
                            {
                                "@name": "vkCmdWaitEvents2"
                            },
                            {
                                "@name": "vkCmdPipelineBarrier2"
                            },
                            {
                                "@name": "vkCmdWriteTimestamp2"
                            },
                            {
                                "@name": "vkQueueSubmit2"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_zero_initialize_workgroup_memory (extension 326)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "326",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_EXT_image_robustness (extension 336)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "336",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceImageRobustnessFeatures"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_copy_commands2 (extension 338)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_COPY_2"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_COPY_2"
                            },
                            {
                                "@offset": "8",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_BLIT_2"
                            },
                            {
                                "@offset": "9",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2"
                            },
                            {
                                "@offset": "10",
                                "@extends": "VkStructureType",
                                "@extnumber": "338",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkCopyBufferInfo2"
                            },
                            {
                                "@name": "VkCopyImageInfo2"
                            },
                            {
                                "@name": "VkCopyBufferToImageInfo2"
                            },
                            {
                                "@name": "VkCopyImageToBufferInfo2"
                            },
                            {
                                "@name": "VkBlitImageInfo2"
                            },
                            {
                                "@name": "VkResolveImageInfo2"
                            },
                            {
                                "@name": "VkBufferCopy2"
                            },
                            {
                                "@name": "VkImageCopy2"
                            },
                            {
                                "@name": "VkImageBlit2"
                            },
                            {
                                "@name": "VkBufferImageCopy2"
                            },
                            {
                                "@name": "VkImageResolve2"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdCopyBuffer2"
                            },
                            {
                                "@name": "vkCmdCopyImage2"
                            },
                            {
                                "@name": "vkCmdCopyBufferToImage2"
                            },
                            {
                                "@name": "vkCmdCopyImageToBuffer2"
                            },
                            {
                                "@name": "vkCmdBlitImage2"
                            },
                            {
                                "@name": "vkCmdResolveImage2"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_subgroup_size_control (STDPROMOTE/PROPLIMCHANGE) (extension 226)",
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceSubgroupSizeControlFeatures"
                            },
                            {
                                "@name": "VkPhysicalDeviceSubgroupSizeControlProperties"
                            },
                            {
                                "@name": "VkPipelineShaderStageRequiredSubgroupSizeCreateInfo"
                            }
                        ],
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "226",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "226",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "226",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkPipelineShaderStageCreateFlagBits",
                                "@name": "VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkPipelineShaderStageCreateFlagBits",
                                "@name": "VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_inline_uniform_block (STDPROMOTE/PROPLIMCHANGE) (extension 139)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkDescriptorType",
                                "@extnumber": "139",
                                "@name": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "139",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "139",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "139",
                                "@name": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@extnumber": "139",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceInlineUniformBlockFeatures"
                            },
                            {
                                "@name": "VkPhysicalDeviceInlineUniformBlockProperties"
                            },
                            {
                                "@name": "VkWriteDescriptorSetInlineUniformBlock"
                            },
                            {
                                "@name": "VkDescriptorPoolInlineUniformBlockCreateInfo"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_ycbcr_2plane_444_formats (does not promote the Feature struct, just the formats) (extension 331)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkFormat",
                                "@extnumber": "331",
                                "@name": "VK_FORMAT_G8_B8R8_2PLANE_444_UNORM"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkFormat",
                                "@extnumber": "331",
                                "@name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkFormat",
                                "@extnumber": "331",
                                "@name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkFormat",
                                "@extnumber": "331",
                                "@name": "VK_FORMAT_G16_B16R16_2PLANE_444_UNORM"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_4444_formats (does not promote the Feature struct, just the formats) (extension 341)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkFormat",
                                "@extnumber": "341",
                                "@name": "VK_FORMAT_A4R4G4B4_UNORM_PACK16"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkFormat",
                                "@extnumber": "341",
                                "@name": "VK_FORMAT_A4B4G4R4_UNORM_PACK16"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_texture_compression_astc_hdr (Feature struct is promoted, but becomes optional) (extension 67)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "67",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "8",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "9",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "10",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "11",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "12",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK"
                            },
                            {
                                "@offset": "13",
                                "@extends": "VkFormat",
                                "@extnumber": "67",
                                "@name": "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceTextureCompressionASTCHDRFeatures"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_dynamic_rendering (extension 45)",
                        "command": [
                            {
                                "@name": "vkCmdBeginRendering"
                            },
                            {
                                "@name": "vkCmdEndRendering"
                            }
                        ],
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "45",
                                "@name": "VK_STRUCTURE_TYPE_RENDERING_INFO"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "45",
                                "@name": "VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "45",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@extnumber": "45",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@extnumber": "45",
                                "@name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkAttachmentStoreOp",
                                "@extnumber": "302",
                                "@name": "VK_ATTACHMENT_STORE_OP_NONE"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRenderingInfo"
                            },
                            {
                                "@name": "VkRenderingAttachmentInfo"
                            },
                            {
                                "@name": "VkPipelineRenderingCreateInfo"
                            },
                            {
                                "@name": "VkPhysicalDeviceDynamicRenderingFeatures"
                            },
                            {
                                "@name": "VkCommandBufferInheritanceRenderingInfo"
                            },
                            {
                                "@name": "VkRenderingFlags"
                            },
                            {
                                "@name": "VkRenderingFlagBits"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_extended_dynamic_state (Feature struct is not promoted) (extension 268)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_CULL_MODE"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_FRONT_FACE"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE"
                            },
                            {
                                "@offset": "8",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_DEPTH_COMPARE_OP"
                            },
                            {
                                "@offset": "9",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE"
                            },
                            {
                                "@offset": "10",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE"
                            },
                            {
                                "@offset": "11",
                                "@extends": "VkDynamicState",
                                "@extnumber": "268",
                                "@name": "VK_DYNAMIC_STATE_STENCIL_OP"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetCullMode"
                            },
                            {
                                "@name": "vkCmdSetFrontFace"
                            },
                            {
                                "@name": "vkCmdSetPrimitiveTopology"
                            },
                            {
                                "@name": "vkCmdSetViewportWithCount"
                            },
                            {
                                "@name": "vkCmdSetScissorWithCount"
                            },
                            {
                                "@name": "vkCmdBindVertexBuffers2"
                            },
                            {
                                "@name": "vkCmdSetDepthTestEnable"
                            },
                            {
                                "@name": "vkCmdSetDepthWriteEnable"
                            },
                            {
                                "@name": "vkCmdSetDepthCompareOp"
                            },
                            {
                                "@name": "vkCmdSetDepthBoundsTestEnable"
                            },
                            {
                                "@name": "vkCmdSetStencilTestEnable"
                            },
                            {
                                "@name": "vkCmdSetStencilOp"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_shader_integer_dot_product (extension 281)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "281",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "281",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceShaderIntegerDotProductFeatures"
                            },
                            {
                                "@name": "VkPhysicalDeviceShaderIntegerDotProductProperties"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_texel_buffer_alignment (extension 282)",
                        "enum": [
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "282",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceTexelBufferAlignmentProperties"
                        }
                    },
                    {
                        "@comment": "Promoted from VK_KHR_format_feature_flags2 (extension 361)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "361",
                                "@name": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkFormatFeatureFlags2"
                            },
                            {
                                "@name": "VkFormatFeatureFlagBits2"
                            },
                            {
                                "@name": "VkFormatProperties3"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_EXT_extended_dynamic_state2 (Feature struct and optional state are not promoted) (extension 378)",
                        "enum": [
                            {
                                "@offset": "1",
                                "@extends": "VkDynamicState",
                                "@extnumber": "378",
                                "@name": "VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkDynamicState",
                                "@extnumber": "378",
                                "@name": "VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkDynamicState",
                                "@extnumber": "378",
                                "@name": "VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetRasterizerDiscardEnable"
                            },
                            {
                                "@name": "vkCmdSetDepthBiasEnable"
                            },
                            {
                                "@name": "vkCmdSetPrimitiveRestartEnable"
                            }
                        ]
                    },
                    {
                        "@comment": "Promoted from VK_KHR_maintenance4 (extension 414)",
                        "enum": [
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "414",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "414",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@extnumber": "414",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@extnumber": "414",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceMaintenance4Features"
                            },
                            {
                                "@name": "VkPhysicalDeviceMaintenance4Properties"
                            },
                            {
                                "@name": "VkDeviceBufferMemoryRequirements"
                            },
                            {
                                "@name": "VkDeviceImageMemoryRequirements"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetDeviceBufferMemoryRequirements"
                            },
                            {
                                "@name": "vkGetDeviceImageMemoryRequirements"
                            },
                            {
                                "@name": "vkGetDeviceImageSparseMemoryRequirements"
                            }
                        ]
                    }
                ]
            }
        ],
        "extensions": {
            "@comment": "Vulkan extension interface definitions",
            "extension": [
                {
                    "@name": "VK_KHR_surface",
                    "@number": "1",
                    "@type": "instance",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo,Ian Elliott @ianelliottus",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "25",
                                "@name": "VK_KHR_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_surface\"",
                                "@name": "VK_KHR_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkResult",
                                "@dir": "-",
                                "@name": "VK_ERROR_SURFACE_LOST_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkResult",
                                "@dir": "-",
                                "@name": "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_SURFACE_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSurfaceKHR"
                            },
                            {
                                "@name": "VkSurfaceTransformFlagBitsKHR"
                            },
                            {
                                "@name": "VkPresentModeKHR"
                            },
                            {
                                "@name": "VkColorSpaceKHR"
                            },
                            {
                                "@name": "VkCompositeAlphaFlagBitsKHR"
                            },
                            {
                                "@name": "VkCompositeAlphaFlagsKHR"
                            },
                            {
                                "@name": "VkSurfaceCapabilitiesKHR"
                            },
                            {
                                "@name": "VkSurfaceFormatKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkDestroySurfaceKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceSurfaceSupportKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceSurfaceCapabilitiesKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceSurfaceFormatsKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceSurfacePresentModesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_swapchain",
                    "@number": "2",
                    "@type": "device",
                    "@requires": "VK_KHR_surface",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo,Ian Elliott @ianelliottus",
                    "@supported": "vulkan",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "70",
                                    "@name": "VK_KHR_SWAPCHAIN_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_swapchain\"",
                                    "@name": "VK_KHR_SWAPCHAIN_EXTENSION_NAME"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR"
                                },
                                {
                                    "@offset": "1",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PRESENT_INFO_KHR"
                                },
                                {
                                    "@offset": "2",
                                    "@extends": "VkImageLayout",
                                    "@name": "VK_IMAGE_LAYOUT_PRESENT_SRC_KHR"
                                },
                                {
                                    "@offset": "3",
                                    "@extends": "VkResult",
                                    "@name": "VK_SUBOPTIMAL_KHR"
                                },
                                {
                                    "@offset": "4",
                                    "@extends": "VkResult",
                                    "@dir": "-",
                                    "@name": "VK_ERROR_OUT_OF_DATE_KHR"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkObjectType",
                                    "@name": "VK_OBJECT_TYPE_SWAPCHAIN_KHR"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkSwapchainCreateFlagBitsKHR"
                                },
                                {
                                    "@name": "VkSwapchainCreateFlagsKHR"
                                },
                                {
                                    "@name": "VkSwapchainCreateInfoKHR"
                                },
                                {
                                    "@name": "VkSwapchainKHR"
                                },
                                {
                                    "@name": "VkPresentInfoKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkCreateSwapchainKHR"
                                },
                                {
                                    "@name": "vkDestroySwapchainKHR"
                                },
                                {
                                    "@name": "vkGetSwapchainImagesKHR"
                                },
                                {
                                    "@name": "vkAcquireNextImageKHR"
                                },
                                {
                                    "@name": "vkQueuePresentKHR"
                                }
                            ]
                        },
                        {
                            "@feature": "VK_VERSION_1_1",
                            "comment": "This duplicates definitions in VK_KHR_device_group below",
                            "enum": [
                                {
                                    "@extends": "VkStructureType",
                                    "@extnumber": "61",
                                    "@offset": "7",
                                    "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@extnumber": "61",
                                    "@offset": "8",
                                    "@name": "VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@extnumber": "61",
                                    "@offset": "9",
                                    "@name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@extnumber": "61",
                                    "@offset": "10",
                                    "@name": "VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@extnumber": "61",
                                    "@offset": "11",
                                    "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@extnumber": "61",
                                    "@offset": "12",
                                    "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR"
                                },
                                {
                                    "@bitpos": "0",
                                    "@extends": "VkSwapchainCreateFlagBitsKHR",
                                    "@name": "VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR",
                                    "@comment": "Allow images with VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT"
                                },
                                {
                                    "@bitpos": "1",
                                    "@extends": "VkSwapchainCreateFlagBitsKHR",
                                    "@name": "VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR",
                                    "@comment": "Swapchain is protected"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkImageSwapchainCreateInfoKHR"
                                },
                                {
                                    "@name": "VkBindImageMemorySwapchainInfoKHR"
                                },
                                {
                                    "@name": "VkAcquireNextImageInfoKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupPresentModeFlagBitsKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupPresentModeFlagsKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupPresentCapabilitiesKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupPresentInfoKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupSwapchainCreateInfoKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkGetDeviceGroupPresentCapabilitiesKHR"
                                },
                                {
                                    "@name": "vkGetDeviceGroupSurfacePresentModesKHR"
                                },
                                {
                                    "@name": "vkGetPhysicalDevicePresentRectanglesKHR"
                                },
                                {
                                    "@name": "vkAcquireNextImage2KHR"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_KHR_display",
                    "@number": "3",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo,Norbert Nopper @FslNopper",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "23",
                                "@name": "VK_KHR_DISPLAY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_display\"",
                                "@name": "VK_KHR_DISPLAY_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_DISPLAY_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_DISPLAY_MODE_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDisplayKHR"
                            },
                            {
                                "@name": "VkDisplayModeCreateFlagsKHR"
                            },
                            {
                                "@name": "VkDisplayModeCreateInfoKHR"
                            },
                            {
                                "@name": "VkDisplayModeKHR"
                            },
                            {
                                "@name": "VkDisplayModeParametersKHR"
                            },
                            {
                                "@name": "VkDisplayModePropertiesKHR"
                            },
                            {
                                "@name": "VkDisplayPlaneAlphaFlagBitsKHR"
                            },
                            {
                                "@name": "VkDisplayPlaneAlphaFlagsKHR"
                            },
                            {
                                "@name": "VkDisplayPlaneCapabilitiesKHR"
                            },
                            {
                                "@name": "VkDisplayPlanePropertiesKHR"
                            },
                            {
                                "@name": "VkDisplayPropertiesKHR"
                            },
                            {
                                "@name": "VkDisplaySurfaceCreateFlagsKHR"
                            },
                            {
                                "@name": "VkDisplaySurfaceCreateInfoKHR"
                            },
                            {
                                "@name": "VkSurfaceTransformFlagsKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceDisplayPropertiesKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceDisplayPlanePropertiesKHR"
                            },
                            {
                                "@name": "vkGetDisplayPlaneSupportedDisplaysKHR"
                            },
                            {
                                "@name": "vkGetDisplayModePropertiesKHR"
                            },
                            {
                                "@name": "vkCreateDisplayModeKHR"
                            },
                            {
                                "@name": "vkGetDisplayPlaneCapabilitiesKHR"
                            },
                            {
                                "@name": "vkCreateDisplayPlaneSurfaceKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_display_swapchain",
                    "@number": "4",
                    "@type": "device",
                    "@requires": "VK_KHR_swapchain,VK_KHR_display",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "10",
                                "@name": "VK_KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_display_swapchain\"",
                                "@name": "VK_KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkResult",
                                "@dir": "-",
                                "@name": "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR"
                            }
                        ],
                        "type": {
                            "@name": "VkDisplayPresentInfoKHR"
                        },
                        "command": [
                            {
                                "@name": "vkCreateSharedSwapchainsKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_xlib_surface",
                    "@number": "5",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "xlib",
                    "@author": "KHR",
                    "@contact": "Jesse Hall @critsec,Ian Elliott @ianelliottus",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "6",
                                "@name": "VK_KHR_XLIB_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_xlib_surface\"",
                                "@name": "VK_KHR_XLIB_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkXlibSurfaceCreateFlagsKHR"
                            },
                            {
                                "@name": "VkXlibSurfaceCreateInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateXlibSurfaceKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceXlibPresentationSupportKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_xcb_surface",
                    "@number": "6",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "xcb",
                    "@author": "KHR",
                    "@contact": "Jesse Hall @critsec,Ian Elliott @ianelliottus",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "6",
                                "@name": "VK_KHR_XCB_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_xcb_surface\"",
                                "@name": "VK_KHR_XCB_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkXcbSurfaceCreateFlagsKHR"
                            },
                            {
                                "@name": "VkXcbSurfaceCreateInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateXcbSurfaceKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceXcbPresentationSupportKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_wayland_surface",
                    "@number": "7",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "wayland",
                    "@author": "KHR",
                    "@contact": "Jesse Hall @critsec,Ian Elliott @ianelliottus",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "6",
                                "@name": "VK_KHR_WAYLAND_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_wayland_surface\"",
                                "@name": "VK_KHR_WAYLAND_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkWaylandSurfaceCreateFlagsKHR"
                            },
                            {
                                "@name": "VkWaylandSurfaceCreateInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateWaylandSurfaceKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceWaylandPresentationSupportKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_mir_surface",
                    "@number": "8",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@author": "KHR",
                    "@supported": "disabled",
                    "@comment": "Extension permanently disabled. Extension number should not be reused",
                    "require": {
                        "enum": [
                            {
                                "@value": "4",
                                "@name": "VK_KHR_MIR_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_mir_surface\"",
                                "@name": "VK_KHR_MIR_SURFACE_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_android_surface",
                    "@number": "9",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "android",
                    "@author": "KHR",
                    "@contact": "Jesse Hall @critsec",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "6",
                                "@name": "VK_KHR_ANDROID_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_android_surface\"",
                                "@name": "VK_KHR_ANDROID_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "ANativeWindow"
                            },
                            {
                                "@name": "VkAndroidSurfaceCreateFlagsKHR"
                            },
                            {
                                "@name": "VkAndroidSurfaceCreateInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateAndroidSurfaceKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_win32_surface",
                    "@number": "10",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "win32",
                    "@author": "KHR",
                    "@contact": "Jesse Hall @critsec,Ian Elliott @ianelliottus",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "6",
                                "@name": "VK_KHR_WIN32_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_win32_surface\"",
                                "@name": "VK_KHR_WIN32_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkWin32SurfaceCreateFlagsKHR"
                            },
                            {
                                "@name": "VkWin32SurfaceCreateInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateWin32SurfaceKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceWin32PresentationSupportKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_ANDROID_native_buffer",
                    "@number": "11",
                    "@type": "device",
                    "@author": "ANDROID",
                    "@platform": "android",
                    "@contact": "Jesse Hall @critsec",
                    "@supported": "disabled",
                    "require": {
                        "comment": "VK_ANDROID_native_buffer is used between the Android Vulkan loader and drivers to implement the WSI extensions. It is not exposed to applications and uses types that are not part of Android's stable public API, so it is left disabled to keep it out of the standard Vulkan headers.",
                        "enum": [
                            {
                                "@value": "8",
                                "@name": "VK_ANDROID_NATIVE_BUFFER_SPEC_VERSION"
                            },
                            {
                                "@value": "11",
                                "@name": "VK_ANDROID_NATIVE_BUFFER_NUMBER"
                            },
                            {
                                "@value": "\"VK_ANDROID_native_buffer\"",
                                "@name": "VK_ANDROID_NATIVE_BUFFER_EXTENSION_NAME"
                            },
                            {
                                "@name": "VK_ANDROID_NATIVE_BUFFER_NAME",
                                "@alias": "VK_ANDROID_NATIVE_BUFFER_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_NATIVE_BUFFER_ANDROID"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkNativeBufferANDROID"
                            },
                            {
                                "@name": "VkSwapchainImageCreateInfoANDROID"
                            },
                            {
                                "@name": "VkPhysicalDevicePresentationPropertiesANDROID"
                            },
                            {
                                "@name": "VkNativeBufferUsage2ANDROID"
                            },
                            {
                                "@name": "VkSwapchainImageUsageFlagBitsANDROID"
                            },
                            {
                                "@name": "VkSwapchainImageUsageFlagsANDROID"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetSwapchainGrallocUsageANDROID"
                            },
                            {
                                "@name": "vkAcquireImageANDROID"
                            },
                            {
                                "@name": "vkQueueSignalReleaseImageANDROID"
                            },
                            {
                                "@name": "vkGetSwapchainGrallocUsage2ANDROID"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_debug_report",
                    "@number": "12",
                    "@type": "instance",
                    "@author": "GOOGLE",
                    "@contact": "Courtney Goeltzenleuchter @courtney-g",
                    "@specialuse": "debugging",
                    "@supported": "vulkan",
                    "@deprecatedby": "VK_EXT_debug_utils",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "10",
                                    "@name": "VK_EXT_DEBUG_REPORT_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_EXT_debug_report\"",
                                    "@name": "VK_EXT_DEBUG_REPORT_EXTENSION_NAME"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT"
                                },
                                {
                                    "@alias": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT",
                                    "@comment": "Backwards-compatible alias containing a typo"
                                },
                                {
                                    "@offset": "1",
                                    "@extends": "VkResult",
                                    "@dir": "-",
                                    "@name": "VK_ERROR_VALIDATION_FAILED_EXT"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkObjectType",
                                    "@name": "VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkDebugReportCallbackEXT"
                                },
                                {
                                    "@name": "PFN_vkDebugReportCallbackEXT"
                                },
                                {
                                    "@name": "VkDebugReportFlagBitsEXT"
                                },
                                {
                                    "@name": "VkDebugReportFlagsEXT"
                                },
                                {
                                    "@name": "VkDebugReportObjectTypeEXT"
                                },
                                {
                                    "@name": "VkDebugReportCallbackCreateInfoEXT"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkCreateDebugReportCallbackEXT"
                                },
                                {
                                    "@name": "vkDestroyDebugReportCallbackEXT"
                                },
                                {
                                    "@name": "vkDebugReportMessageEXT"
                                }
                            ]
                        },
                        {
                            "@feature": "VK_VERSION_1_1",
                            "comment": "This duplicates definitions in other extensions, below",
                            "enum": [
                                {
                                    "@extends": "VkDebugReportObjectTypeEXT",
                                    "@extnumber": "157",
                                    "@offset": "0",
                                    "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT"
                                },
                                {
                                    "@extends": "VkDebugReportObjectTypeEXT",
                                    "@extnumber": "86",
                                    "@offset": "0",
                                    "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_NV_glsl_shader",
                    "@number": "13",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "@deprecatedby": "",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_GLSL_SHADER_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_glsl_shader\"",
                                "@name": "VK_NV_GLSL_SHADER_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkResult",
                                "@dir": "-",
                                "@name": "VK_ERROR_INVALID_SHADER_NV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_depth_range_unrestricted",
                    "@type": "device",
                    "@number": "14",
                    "@author": "NV",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_DEPTH_RANGE_UNRESTRICTED_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_depth_range_unrestricted\"",
                                "@name": "VK_EXT_DEPTH_RANGE_UNRESTRICTED_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_sampler_mirror_clamp_to_edge",
                    "@type": "device",
                    "@number": "15",
                    "@author": "KHR",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_sampler_mirror_clamp_to_edge\"",
                                "@name": "VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME"
                            },
                            {
                                "@value": "4",
                                "@extends": "VkSamplerAddressMode",
                                "@name": "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE",
                                "@comment": "Note that this defines what was previously a core enum, and so uses the 'value' attribute rather than 'offset', and does not have a suffix. This is a special case, and should not be repeated"
                            },
                            {
                                "@extends": "VkSamplerAddressMode",
                                "@name": "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR",
                                "@alias": "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE",
                                "@comment": "Alias introduced for consistency with extension suffixing rules"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_IMG_filter_cubic",
                    "@number": "16",
                    "@type": "device",
                    "@author": "IMG",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_IMG_FILTER_CUBIC_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_IMG_filter_cubic\"",
                                "@name": "VK_IMG_FILTER_CUBIC_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkFilter",
                                "@name": "VK_FILTER_CUBIC_IMG"
                            },
                            {
                                "@bitpos": "13",
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG",
                                "@comment": "Format can be filtered with VK_FILTER_CUBIC_IMG when being sampled"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_17",
                    "@number": "17",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_17_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_17\"",
                                "@name": "VK_AMD_EXTENSION_17_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_18",
                    "@number": "18",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_18_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_18\"",
                                "@name": "VK_AMD_EXTENSION_18_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_rasterization_order",
                    "@number": "19",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_RASTERIZATION_ORDER_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_rasterization_order\"",
                                "@name": "VK_AMD_RASTERIZATION_ORDER_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRasterizationOrderAMD"
                            },
                            {
                                "@name": "VkPipelineRasterizationStateRasterizationOrderAMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_20",
                    "@number": "20",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_20_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_20\"",
                                "@name": "VK_AMD_EXTENSION_20_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_shader_trinary_minmax",
                    "@number": "21",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Qun Lin @linqun",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_shader_trinary_minmax\"",
                                "@name": "VK_AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_shader_explicit_vertex_parameter",
                    "@number": "22",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Qun Lin @linqun",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_shader_explicit_vertex_parameter\"",
                                "@name": "VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_debug_marker",
                    "@number": "23",
                    "@type": "device",
                    "@requires": "VK_EXT_debug_report",
                    "@author": "Baldur Karlsson",
                    "@contact": "Baldur Karlsson @baldurk",
                    "@specialuse": "debugging",
                    "@supported": "vulkan",
                    "@promotedto": "VK_EXT_debug_utils",
                    "require": {
                        "enum": [
                            {
                                "@value": "4",
                                "@name": "VK_EXT_DEBUG_MARKER_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_debug_marker\"",
                                "@name": "VK_EXT_DEBUG_MARKER_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDebugReportObjectTypeEXT"
                            },
                            {
                                "@name": "VkDebugMarkerObjectNameInfoEXT"
                            },
                            {
                                "@name": "VkDebugMarkerObjectTagInfoEXT"
                            },
                            {
                                "@name": "VkDebugMarkerMarkerInfoEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkDebugMarkerSetObjectTagEXT"
                            },
                            {
                                "@name": "vkDebugMarkerSetObjectNameEXT"
                            },
                            {
                                "@name": "vkCmdDebugMarkerBeginEXT"
                            },
                            {
                                "@name": "vkCmdDebugMarkerEndEXT"
                            },
                            {
                                "@name": "vkCmdDebugMarkerInsertEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_video_queue",
                    "@number": "24",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_KHR_sampler_ycbcr_conversion",
                    "@author": "KHR",
                    "@contact": "Tony Zlatinski @tzlatinski",
                    "@provisional": "true",
                    "@platform": "provisional",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_KHR_VIDEO_QUEUE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_video_queue\"",
                                "@name": "VK_KHR_VIDEO_QUEUE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_PROFILE_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_GET_MEMORY_PROPERTIES_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_BIND_MEMORY_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "8",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "9",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "10",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "11",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "12",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_QUEUE_FAMILY_PROPERTIES_2_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "13",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_PROFILES_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "14",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "15",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "16",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_2_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_VIDEO_SESSION_KHR",
                                "@comment": "VkVideoSessionKHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR",
                                "@comment": "VkVideoSessionParametersKHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkQueryType",
                                "@name": "VK_QUERY_TYPE_RESULT_STATUS_ONLY_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@bitpos": "4",
                                "@extends": "VkQueryResultFlagBits",
                                "@name": "VK_QUERY_RESULT_WITH_STATUS_BIT_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkVideoSessionKHR"
                            },
                            {
                                "@name": "VkVideoSessionParametersKHR"
                            },
                            {
                                "@name": "VkVideoCodecOperationFlagBitsKHR"
                            },
                            {
                                "@name": "VkVideoCodecOperationFlagsKHR"
                            },
                            {
                                "@name": "VkVideoChromaSubsamplingFlagBitsKHR"
                            },
                            {
                                "@name": "VkVideoChromaSubsamplingFlagsKHR"
                            },
                            {
                                "@name": "VkVideoComponentBitDepthFlagBitsKHR"
                            },
                            {
                                "@name": "VkVideoComponentBitDepthFlagsKHR"
                            },
                            {
                                "@name": "VkVideoCapabilityFlagBitsKHR"
                            },
                            {
                                "@name": "VkVideoCapabilityFlagsKHR"
                            },
                            {
                                "@name": "VkVideoSessionCreateFlagBitsKHR"
                            },
                            {
                                "@name": "VkVideoSessionCreateFlagsKHR"
                            },
                            {
                                "@name": "VkVideoBeginCodingFlagsKHR"
                            },
                            {
                                "@name": "VkVideoEndCodingFlagsKHR"
                            },
                            {
                                "@name": "VkVideoCodingControlFlagBitsKHR"
                            },
                            {
                                "@name": "VkVideoCodingControlFlagsKHR"
                            },
                            {
                                "@name": "VkVideoCodingQualityPresetFlagBitsKHR"
                            },
                            {
                                "@name": "VkVideoCodingQualityPresetFlagsKHR"
                            },
                            {
                                "@name": "VkQueueFamilyQueryResultStatusProperties2KHR"
                            },
                            {
                                "@name": "VkQueryResultStatusKHR"
                            },
                            {
                                "@name": "VkVideoQueueFamilyProperties2KHR"
                            },
                            {
                                "@name": "VkVideoProfileKHR"
                            },
                            {
                                "@name": "VkVideoProfilesKHR"
                            },
                            {
                                "@name": "VkVideoCapabilitiesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceVideoFormatInfoKHR"
                            },
                            {
                                "@name": "VkVideoFormatPropertiesKHR"
                            },
                            {
                                "@name": "VkVideoPictureResourceKHR"
                            },
                            {
                                "@name": "VkVideoReferenceSlotKHR"
                            },
                            {
                                "@name": "VkVideoGetMemoryPropertiesKHR"
                            },
                            {
                                "@name": "VkVideoBindMemoryKHR"
                            },
                            {
                                "@name": "VkVideoSessionCreateInfoKHR"
                            },
                            {
                                "@name": "VkVideoSessionParametersCreateInfoKHR"
                            },
                            {
                                "@name": "VkVideoSessionParametersUpdateInfoKHR"
                            },
                            {
                                "@name": "VkVideoBeginCodingInfoKHR"
                            },
                            {
                                "@name": "VkVideoEndCodingInfoKHR"
                            },
                            {
                                "@name": "VkVideoCodingControlInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceVideoCapabilitiesKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceVideoFormatPropertiesKHR"
                            },
                            {
                                "@name": "vkCreateVideoSessionKHR"
                            },
                            {
                                "@name": "vkDestroyVideoSessionKHR"
                            },
                            {
                                "@name": "vkGetVideoSessionMemoryRequirementsKHR"
                            },
                            {
                                "@name": "vkBindVideoSessionMemoryKHR"
                            },
                            {
                                "@name": "vkCreateVideoSessionParametersKHR"
                            },
                            {
                                "@name": "vkUpdateVideoSessionParametersKHR"
                            },
                            {
                                "@name": "vkDestroyVideoSessionParametersKHR"
                            },
                            {
                                "@name": "vkCmdBeginVideoCodingKHR"
                            },
                            {
                                "@name": "vkCmdEndVideoCodingKHR"
                            },
                            {
                                "@name": "vkCmdControlVideoCodingKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_video_decode_queue",
                    "@number": "25",
                    "@type": "device",
                    "@requires": "VK_KHR_video_queue,VK_KHR_synchronization2",
                    "@author": "KHR",
                    "@contact": "jake.beju@amd.com",
                    "@provisional": "true",
                    "@platform": "provisional",
                    "@supported": "vulkan",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "2",
                                    "@name": "VK_KHR_VIDEO_DECODE_QUEUE_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_video_decode_queue\"",
                                    "@name": "VK_KHR_VIDEO_DECODE_QUEUE_EXTENSION_NAME"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "5",
                                    "@extends": "VkQueueFlagBits",
                                    "@name": "VK_QUEUE_VIDEO_DECODE_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "26",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "35",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_VIDEO_DECODE_READ_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "36",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_VIDEO_DECODE_WRITE_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "13",
                                    "@extends": "VkBufferUsageFlagBits",
                                    "@name": "VK_BUFFER_USAGE_VIDEO_DECODE_SRC_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "14",
                                    "@extends": "VkBufferUsageFlagBits",
                                    "@name": "VK_BUFFER_USAGE_VIDEO_DECODE_DST_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "10",
                                    "@extends": "VkImageUsageFlagBits",
                                    "@name": "VK_IMAGE_USAGE_VIDEO_DECODE_DST_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "11",
                                    "@extends": "VkImageUsageFlagBits",
                                    "@name": "VK_IMAGE_USAGE_VIDEO_DECODE_SRC_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "12",
                                    "@extends": "VkImageUsageFlagBits",
                                    "@name": "VK_IMAGE_USAGE_VIDEO_DECODE_DPB_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "25",
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_VIDEO_DECODE_OUTPUT_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "26",
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkImageLayout",
                                    "@name": "VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@offset": "1",
                                    "@extends": "VkImageLayout",
                                    "@name": "VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@offset": "2",
                                    "@extends": "VkImageLayout",
                                    "@name": "VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkVideoDecodeFlagBitsKHR"
                                },
                                {
                                    "@name": "VkVideoDecodeFlagsKHR"
                                },
                                {
                                    "@name": "VkVideoDecodeInfoKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkCmdDecodeVideoKHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_format_feature_flags2",
                            "enum": [
                                {
                                    "@bitpos": "25",
                                    "@extends": "VkFormatFeatureFlagBits2",
                                    "@name": "VK_FORMAT_FEATURE_2_VIDEO_DECODE_OUTPUT_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "26",
                                    "@extends": "VkFormatFeatureFlagBits2",
                                    "@name": "VK_FORMAT_FEATURE_2_VIDEO_DECODE_DPB_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_AMD_gcn_shader",
                    "@number": "26",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Dominik Witczak @dominikwitczakamd",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_GCN_SHADER_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_gcn_shader\"",
                                "@name": "VK_AMD_GCN_SHADER_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_dedicated_allocation",
                    "@number": "27",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@deprecatedby": "VK_KHR_dedicated_allocation",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_DEDICATED_ALLOCATION_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_dedicated_allocation\"",
                                "@name": "VK_NV_DEDICATED_ALLOCATION_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDedicatedAllocationImageCreateInfoNV"
                            },
                            {
                                "@name": "VkDedicatedAllocationBufferCreateInfoNV"
                            },
                            {
                                "@name": "VkDedicatedAllocationMemoryAllocateInfoNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_28",
                    "@number": "28",
                    "@author": "NV",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_28_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_28\"",
                                "@name": "VK_EXT_EXTENSION_28_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_transform_feedback",
                    "@number": "29",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@specialuse": "glemulation,d3demulation,devtools",
                    "@supported": "vulkan",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_TRANSFORM_FEEDBACK_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_transform_feedback\"",
                                "@name": "VK_EXT_TRANSFORM_FEEDBACK_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkQueryType",
                                "@name": "VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT"
                            },
                            {
                                "@bitpos": "11",
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT"
                            },
                            {
                                "@bitpos": "12",
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT"
                            },
                            {
                                "@bitpos": "25",
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT"
                            },
                            {
                                "@bitpos": "26",
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT"
                            },
                            {
                                "@bitpos": "27",
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT"
                            },
                            {
                                "@bitpos": "24",
                                "@extends": "VkPipelineStageFlagBits",
                                "@name": "VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdBindTransformFeedbackBuffersEXT"
                            },
                            {
                                "@name": "vkCmdBeginTransformFeedbackEXT"
                            },
                            {
                                "@name": "vkCmdEndTransformFeedbackEXT"
                            },
                            {
                                "@name": "vkCmdBeginQueryIndexedEXT"
                            },
                            {
                                "@name": "vkCmdEndQueryIndexedEXT"
                            },
                            {
                                "@name": "vkCmdDrawIndirectByteCountEXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceTransformFeedbackFeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceTransformFeedbackPropertiesEXT"
                            },
                            {
                                "@name": "VkPipelineRasterizationStateStreamCreateInfoEXT"
                            },
                            {
                                "@name": "VkPipelineRasterizationStateStreamCreateFlagsEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NVX_binary_import",
                    "@number": "30",
                    "@type": "device",
                    "@author": "NVX",
                    "@contact": "Eric Werness @ewerness-nv,Liam Middlebrook @liam-middlebrook",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NVX_BINARY_IMPORT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NVX_binary_import\"",
                                "@name": "VK_NVX_BINARY_IMPORT_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_CU_MODULE_NVX"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_CU_FUNCTION_NVX"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDebugReportObjectTypeEXT",
                                "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkDebugReportObjectTypeEXT",
                                "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkCuModuleNVX"
                            },
                            {
                                "@name": "VkCuFunctionNVX"
                            },
                            {
                                "@name": "VkCuModuleCreateInfoNVX"
                            },
                            {
                                "@name": "VkCuFunctionCreateInfoNVX"
                            },
                            {
                                "@name": "VkCuLaunchInfoNVX"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateCuModuleNVX"
                            },
                            {
                                "@name": "vkCreateCuFunctionNVX"
                            },
                            {
                                "@name": "vkDestroyCuModuleNVX"
                            },
                            {
                                "@name": "vkDestroyCuFunctionNVX"
                            },
                            {
                                "@name": "vkCmdCuLaunchKernelNVX"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NVX_image_view_handle",
                    "@number": "31",
                    "@type": "device",
                    "@author": "NVX",
                    "@contact": "Eric Werness @ewerness-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_NVX_IMAGE_VIEW_HANDLE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NVX_image_view_handle\"",
                                "@name": "VK_NVX_IMAGE_VIEW_HANDLE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImageViewHandleInfoNVX"
                            },
                            {
                                "@name": "VkImageViewAddressPropertiesNVX"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetImageViewHandleNVX"
                            },
                            {
                                "@name": "vkGetImageViewAddressNVX"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_32",
                    "@number": "32",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_32_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_32\"",
                                "@name": "VK_AMD_EXTENSION_32_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_33",
                    "@number": "33",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_33_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_33\"",
                                "@name": "VK_AMD_EXTENSION_33_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_draw_indirect_count",
                    "@number": "34",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "vulkan",
                    "@promotedto": "VK_KHR_draw_indirect_count",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_AMD_DRAW_INDIRECT_COUNT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_draw_indirect_count\"",
                                "@name": "VK_AMD_DRAW_INDIRECT_COUNT_EXTENSION_NAME"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdDrawIndirectCountAMD"
                            },
                            {
                                "@name": "vkCmdDrawIndexedIndirectCountAMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_35",
                    "@number": "35",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_35_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_35\"",
                                "@name": "VK_AMD_EXTENSION_35_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_negative_viewport_height",
                    "@number": "36",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Matthaeus G. Chajdas @anteru",
                    "@supported": "vulkan",
                    "@obsoletedby": "VK_KHR_maintenance1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_negative_viewport_height\"",
                                "@name": "VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_gpu_shader_half_float",
                    "@number": "37",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Dominik Witczak @dominikwitczakamd",
                    "@supported": "vulkan",
                    "@deprecatedby": "VK_KHR_shader_float16_int8",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_AMD_GPU_SHADER_HALF_FLOAT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_gpu_shader_half_float\"",
                                "@name": "VK_AMD_GPU_SHADER_HALF_FLOAT_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_shader_ballot",
                    "@number": "38",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Dominik Witczak @dominikwitczakamd",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_SHADER_BALLOT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_shader_ballot\"",
                                "@name": "VK_AMD_SHADER_BALLOT_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_video_encode_h264",
                    "@number": "39",
                    "@type": "device",
                    "@requires": "VK_KHR_video_encode_queue",
                    "@author": "KHR",
                    "@contact": "Ahmed Abdelkhalek @aabdelkh",
                    "@provisional": "true",
                    "@platform": "provisional",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_EXT_VIDEO_ENCODE_H264_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_video_encode_h264\"",
                                "@name": "VK_EXT_VIDEO_ENCODE_H264_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_CREATE_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_VCL_FRAME_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_EMIT_PICTURE_PARAMETERS_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "8",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "9",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "10",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@bitpos": "16",
                                "@extends": "VkVideoCodecOperationFlagBitsKHR",
                                "@name": "VK_VIDEO_CODEC_OPERATION_ENCODE_H264_BIT_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkVideoEncodeH264CapabilityFlagBitsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264CapabilityFlagsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264InputModeFlagBitsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264InputModeFlagsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264OutputModeFlagBitsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264OutputModeFlagsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264CreateFlagBitsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264CreateFlagsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264CapabilitiesEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264SessionCreateInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264SessionParametersCreateInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264SessionParametersAddInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264VclFrameInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264EmitPictureParametersEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264DpbSlotInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264NaluSliceEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264ProfileEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264RateControlInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264RateControlStructureFlagBitsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264RateControlStructureFlagsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264RateControlLayerInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264QpEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH264FrameSizeEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_video_encode_h265",
                    "@number": "40",
                    "@type": "device",
                    "@requires": "VK_KHR_video_encode_queue",
                    "@author": "KHR",
                    "@contact": "Ahmed Abdelkhalek @aabdelkh",
                    "@provisional": "true",
                    "@platform": "provisional",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_EXT_VIDEO_ENCODE_H265_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_video_encode_h265\"",
                                "@name": "VK_EXT_VIDEO_ENCODE_H265_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_CREATE_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_VCL_FRAME_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_EMIT_PICTURE_PARAMETERS_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "8",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "9",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_REFERENCE_LISTS_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "10",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "11",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@bitpos": "17",
                                "@extends": "VkVideoCodecOperationFlagBitsKHR",
                                "@name": "VK_VIDEO_CODEC_OPERATION_ENCODE_H265_BIT_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkVideoEncodeH265CapabilityFlagsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265InputModeFlagBitsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265InputModeFlagsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265OutputModeFlagBitsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265OutputModeFlagsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265CreateFlagsEXT",
                                "@comment": "Will add VkVideoEncodeH265CreateFlagBitsEXT when bits are defined in the future"
                            },
                            {
                                "@name": "VkVideoEncodeH265CtbSizeFlagBitsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265CtbSizeFlagsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265CapabilitiesEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265SessionCreateInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265SessionParametersCreateInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265SessionParametersAddInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265VclFrameInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265EmitPictureParametersEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265DpbSlotInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265NaluSliceEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265ProfileEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265ReferenceListsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265RateControlInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265RateControlStructureFlagBitsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265RateControlStructureFlagsEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265RateControlLayerInfoEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265QpEXT"
                            },
                            {
                                "@name": "VkVideoEncodeH265FrameSizeEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_video_decode_h264",
                    "@number": "41",
                    "@type": "device",
                    "@requires": "VK_KHR_video_decode_queue",
                    "@author": "KHR",
                    "@contact": "peter.fang@amd.com",
                    "@provisional": "true",
                    "@platform": "provisional",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_EXT_VIDEO_DECODE_H264_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_video_decode_h264\"",
                                "@name": "VK_EXT_VIDEO_DECODE_H264_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_CREATE_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_MVC_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkVideoCodecOperationFlagBitsKHR",
                                "@name": "VK_VIDEO_CODEC_OPERATION_DECODE_H264_BIT_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkVideoDecodeH264PictureLayoutFlagBitsEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH264PictureLayoutFlagsEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH264CreateFlagsEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH264ProfileEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH264CapabilitiesEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH264SessionCreateInfoEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH264SessionParametersCreateInfoEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH264SessionParametersAddInfoEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH264PictureInfoEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH264MvcEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH264DpbSlotInfoEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_texture_gather_bias_lod",
                    "@number": "42",
                    "@author": "AMD",
                    "@contact": "Rex Xu @amdrexu",
                    "@supported": "vulkan",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_TEXTURE_GATHER_BIAS_LOD_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_texture_gather_bias_lod\"",
                                "@name": "VK_AMD_TEXTURE_GATHER_BIAS_LOD_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD"
                            }
                        ],
                        "type": {
                            "@name": "VkTextureLODGatherFormatPropertiesAMD"
                        }
                    }
                },
                {
                    "@name": "VK_AMD_shader_info",
                    "@number": "43",
                    "@author": "AMD",
                    "@contact": "Jaakko Konttinen @jaakkoamd",
                    "@supported": "vulkan",
                    "@specialuse": "devtools",
                    "@type": "device",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_SHADER_INFO_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_shader_info\"",
                                "@name": "VK_AMD_SHADER_INFO_EXTENSION_NAME"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkShaderInfoTypeAMD"
                            },
                            {
                                "@name": "VkShaderResourceUsageAMD"
                            },
                            {
                                "@name": "VkShaderStatisticsInfoAMD"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetShaderInfoAMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_44",
                    "@number": "44",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_44_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_44\"",
                                "@name": "VK_AMD_EXTENSION_44_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_dynamic_rendering",
                    "@number": "45",
                    "@author": "KHR",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "1",
                                    "@name": "VK_KHR_DYNAMIC_RENDERING_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_dynamic_rendering\"",
                                    "@name": "VK_KHR_DYNAMIC_RENDERING_EXTENSION_NAME"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_RENDERING_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_RENDERING_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO"
                                },
                                {
                                    "@extends": "VkAttachmentStoreOp",
                                    "@name": "VK_ATTACHMENT_STORE_OP_NONE_KHR",
                                    "@alias": "VK_ATTACHMENT_STORE_OP_NONE"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkCmdBeginRenderingKHR"
                                },
                                {
                                    "@name": "vkCmdEndRenderingKHR"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkRenderingInfoKHR"
                                },
                                {
                                    "@name": "VkRenderingAttachmentInfoKHR"
                                },
                                {
                                    "@name": "VkPipelineRenderingCreateInfoKHR"
                                },
                                {
                                    "@name": "VkPhysicalDeviceDynamicRenderingFeaturesKHR"
                                },
                                {
                                    "@name": "VkCommandBufferInheritanceRenderingInfoKHR"
                                },
                                {
                                    "@name": "VkRenderingFlagsKHR"
                                },
                                {
                                    "@name": "VkRenderingFlagBitsKHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_fragment_shading_rate",
                            "enum": [
                                {
                                    "@bitpos": "21",
                                    "@extends": "VkPipelineCreateFlagBits",
                                    "@name": "VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"
                                },
                                {
                                    "@alias": "VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
                                    "@extends": "VkPipelineCreateFlagBits",
                                    "@name": "VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
                                    "@comment": "Backwards-compatible alias containing a typo"
                                },
                                {
                                    "@offset": "6",
                                    "@extends": "VkStructureType",
                                    "@extnumber": "45",
                                    "@name": "VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR"
                                }
                            ],
                            "type": {
                                "@name": "VkRenderingFragmentShadingRateAttachmentInfoKHR"
                            }
                        },
                        {
                            "@extension": "VK_EXT_fragment_density_map",
                            "enum": [
                                {
                                    "@bitpos": "22",
                                    "@extends": "VkPipelineCreateFlagBits",
                                    "@name": "VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT"
                                },
                                {
                                    "@alias": "VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT",
                                    "@extends": "VkPipelineCreateFlagBits",
                                    "@name": "VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT",
                                    "@comment": "Backwards-compatible alias containing a typo"
                                },
                                {
                                    "@offset": "7",
                                    "@extends": "VkStructureType",
                                    "@extnumber": "45",
                                    "@name": "VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT"
                                }
                            ],
                            "type": {
                                "@name": "VkRenderingFragmentDensityMapAttachmentInfoEXT"
                            }
                        },
                        {
                            "@extension": "VK_AMD_mixed_attachment_samples",
                            "enum": [
                                {
                                    "@offset": "8",
                                    "@extends": "VkStructureType",
                                    "@extnumber": "45",
                                    "@name": "VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD"
                                }
                            ],
                            "type": {
                                "@name": "VkAttachmentSampleCountInfoAMD"
                            }
                        },
                        {
                            "@extension": "VK_NV_framebuffer_mixed_samples",
                            "enum": [
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV",
                                    "@alias": "VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD"
                                }
                            ],
                            "type": {
                                "@name": "VkAttachmentSampleCountInfoNV"
                            }
                        },
                        {
                            "@extension": "VK_NVX_multiview_per_view_attributes",
                            "enum": [
                                {
                                    "@offset": "9",
                                    "@extends": "VkStructureType",
                                    "@extnumber": "45",
                                    "@name": "VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX"
                                }
                            ],
                            "type": {
                                "@name": "VkMultiviewPerViewAttributesInfoNVX"
                            }
                        }
                    ]
                },
                {
                    "@name": "VK_AMD_extension_46",
                    "@number": "46",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_46_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_46\"",
                                "@name": "VK_AMD_EXTENSION_46_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_shader_image_load_store_lod",
                    "@number": "47",
                    "@author": "AMD",
                    "@contact": "Dominik Witczak @dominikwitczakamd",
                    "@supported": "vulkan",
                    "@type": "device",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_shader_image_load_store_lod\"",
                                "@name": "VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NVX_extension_48",
                    "@number": "48",
                    "@author": "NVX",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NVX_EXTENSION_48_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NVX_extension_48\"",
                                "@name": "VK_NVX_EXTENSION_48_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GOOGLE_extension_49",
                    "@number": "49",
                    "@author": "GOOGLE",
                    "@contact": "Jean-Francois Roy @jfroy",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GOOGLE_EXTENSION_49_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_extension_49\"",
                                "@name": "VK_GOOGLE_EXTENSION_49_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GGP_stream_descriptor_surface",
                    "@number": "50",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "ggp",
                    "@author": "GGP",
                    "@contact": "Jean-Francois Roy @jfroy",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_GGP_STREAM_DESCRIPTOR_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GGP_stream_descriptor_surface\"",
                                "@name": "VK_GGP_STREAM_DESCRIPTOR_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkStreamDescriptorSurfaceCreateFlagsGGP"
                            },
                            {
                                "@name": "VkStreamDescriptorSurfaceCreateInfoGGP"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateStreamDescriptorSurfaceGGP"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_corner_sampled_image",
                    "@number": "51",
                    "@author": "NV",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_NV_CORNER_SAMPLED_IMAGE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_corner_sampled_image\"",
                                "@name": "VK_NV_CORNER_SAMPLED_IMAGE_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "13",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceCornerSampledImageFeaturesNV"
                        }
                    }
                },
                {
                    "@name": "VK_NV_extension_52",
                    "@number": "52",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_52_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_52\"",
                                "@name": "VK_NV_EXTENSION_52_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkShaderModuleCreateFlagBits",
                                "@name": "VK_SHADER_MODULE_CREATE_RESERVED_0_BIT_NV"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkPipelineShaderStageCreateFlagBits",
                                "@name": "VK_PIPELINE_SHADER_STAGE_CREATE_RESERVED_2_BIT_NV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_53",
                    "@number": "53",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_53_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_53\"",
                                "@name": "VK_NV_EXTENSION_53_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_multiview",
                    "@number": "54",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_MULTIVIEW_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_multiview\"",
                                "@name": "VK_KHR_MULTIVIEW_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES"
                            },
                            {
                                "@extends": "VkDependencyFlagBits",
                                "@name": "VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR",
                                "@alias": "VK_DEPENDENCY_VIEW_LOCAL_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRenderPassMultiviewCreateInfoKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceMultiviewFeaturesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceMultiviewPropertiesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_IMG_format_pvrtc",
                    "@number": "55",
                    "@type": "device",
                    "@author": "IMG",
                    "@contact": "Stuart Smith",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_IMG_FORMAT_PVRTC_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_IMG_format_pvrtc\"",
                                "@name": "VK_IMG_FORMAT_PVRTC_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_external_memory_capabilities",
                    "@number": "56",
                    "@type": "instance",
                    "@author": "NV",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "@deprecatedby": "VK_KHR_external_memory_capabilities",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_external_memory_capabilities\"",
                                "@name": "VK_NV_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkExternalMemoryHandleTypeFlagsNV"
                            },
                            {
                                "@name": "VkExternalMemoryHandleTypeFlagBitsNV"
                            },
                            {
                                "@name": "VkExternalMemoryFeatureFlagsNV"
                            },
                            {
                                "@name": "VkExternalMemoryFeatureFlagBitsNV"
                            },
                            {
                                "@name": "VkExternalImageFormatPropertiesNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceExternalImageFormatPropertiesNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_external_memory",
                    "@number": "57",
                    "@type": "device",
                    "@requires": "VK_NV_external_memory_capabilities",
                    "@author": "NV",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "@deprecatedby": "VK_KHR_external_memory",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_EXTERNAL_MEMORY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_external_memory\"",
                                "@name": "VK_NV_EXTERNAL_MEMORY_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkExternalMemoryImageCreateInfoNV"
                            },
                            {
                                "@name": "VkExportMemoryAllocateInfoNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_external_memory_win32",
                    "@number": "58",
                    "@type": "device",
                    "@requires": "VK_NV_external_memory",
                    "@author": "NV",
                    "@contact": "James Jones @cubanismo",
                    "@platform": "win32",
                    "@supported": "vulkan",
                    "@deprecatedby": "VK_KHR_external_memory_win32",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_EXTERNAL_MEMORY_WIN32_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_external_memory_win32\"",
                                "@name": "VK_NV_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImportMemoryWin32HandleInfoNV"
                            },
                            {
                                "@name": "VkExportMemoryWin32HandleInfoNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetMemoryWin32HandleNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_win32_keyed_mutex",
                    "@number": "59",
                    "@type": "device",
                    "@requires": "VK_NV_external_memory_win32",
                    "@author": "NV",
                    "@contact": "Carsten Rohde @crohde",
                    "@platform": "win32",
                    "@supported": "vulkan",
                    "@promotedto": "VK_KHR_win32_keyed_mutex",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_NV_WIN32_KEYED_MUTEX_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_win32_keyed_mutex\"",
                                "@name": "VK_NV_WIN32_KEYED_MUTEX_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV"
                            }
                        ],
                        "type": {
                            "@name": "VkWin32KeyedMutexAcquireReleaseInfoNV"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_get_physical_device_properties2",
                    "@number": "60",
                    "@type": "instance",
                    "@author": "KHR",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_get_physical_device_properties2\"",
                                "@name": "VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceFeatures2KHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceProperties2KHR"
                            },
                            {
                                "@name": "VkFormatProperties2KHR"
                            },
                            {
                                "@name": "VkImageFormatProperties2KHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceImageFormatInfo2KHR"
                            },
                            {
                                "@name": "VkQueueFamilyProperties2KHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceMemoryProperties2KHR"
                            },
                            {
                                "@name": "VkSparseImageFormatProperties2KHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceSparseImageFormatInfo2KHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceFeatures2KHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceProperties2KHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceFormatProperties2KHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceImageFormatProperties2KHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceQueueFamilyProperties2KHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceMemoryProperties2KHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceSparseImageFormatProperties2KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_device_group",
                    "@number": "61",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_device_group_creation",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "4",
                                    "@name": "VK_KHR_DEVICE_GROUP_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_device_group\"",
                                    "@name": "VK_KHR_DEVICE_GROUP_EXTENSION_NAME"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO"
                                },
                                {
                                    "@extends": "VkPeerMemoryFeatureFlagBits",
                                    "@name": "VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR",
                                    "@alias": "VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT"
                                },
                                {
                                    "@extends": "VkPeerMemoryFeatureFlagBits",
                                    "@name": "VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR",
                                    "@alias": "VK_PEER_MEMORY_FEATURE_COPY_DST_BIT"
                                },
                                {
                                    "@extends": "VkPeerMemoryFeatureFlagBits",
                                    "@name": "VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR",
                                    "@alias": "VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT"
                                },
                                {
                                    "@extends": "VkPeerMemoryFeatureFlagBits",
                                    "@name": "VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR",
                                    "@alias": "VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT"
                                },
                                {
                                    "@extends": "VkMemoryAllocateFlagBits",
                                    "@name": "VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR",
                                    "@alias": "VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT"
                                },
                                {
                                    "@extends": "VkPipelineCreateFlagBits",
                                    "@name": "VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR",
                                    "@alias": "VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT"
                                },
                                {
                                    "@extends": "VkPipelineCreateFlagBits",
                                    "@name": "VK_PIPELINE_CREATE_DISPATCH_BASE_KHR",
                                    "@alias": "VK_PIPELINE_CREATE_DISPATCH_BASE"
                                },
                                {
                                    "@extends": "VkDependencyFlagBits",
                                    "@name": "VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR",
                                    "@alias": "VK_DEPENDENCY_DEVICE_GROUP_BIT"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkPeerMemoryFeatureFlagsKHR"
                                },
                                {
                                    "@name": "VkPeerMemoryFeatureFlagBitsKHR"
                                },
                                {
                                    "@name": "VkMemoryAllocateFlagsKHR"
                                },
                                {
                                    "@name": "VkMemoryAllocateFlagBitsKHR"
                                },
                                {
                                    "@name": "VkMemoryAllocateFlagsInfoKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupRenderPassBeginInfoKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupCommandBufferBeginInfoKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupSubmitInfoKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupBindSparseInfoKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkGetDeviceGroupPeerMemoryFeaturesKHR"
                                },
                                {
                                    "@name": "vkCmdSetDeviceMaskKHR"
                                },
                                {
                                    "@name": "vkCmdDispatchBaseKHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_bind_memory2",
                            "enum": [
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO"
                                },
                                {
                                    "@extends": "VkImageCreateFlagBits",
                                    "@name": "VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR",
                                    "@alias": "VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkBindBufferMemoryDeviceGroupInfoKHR"
                                },
                                {
                                    "@name": "VkBindImageMemoryDeviceGroupInfoKHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_surface",
                            "enum": [
                                {
                                    "@offset": "7",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkDeviceGroupPresentModeFlagBitsKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupPresentModeFlagsKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupPresentCapabilitiesKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkGetDeviceGroupPresentCapabilitiesKHR"
                                },
                                {
                                    "@name": "vkGetDeviceGroupSurfacePresentModesKHR"
                                },
                                {
                                    "@name": "vkGetPhysicalDevicePresentRectanglesKHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_swapchain",
                            "enum": [
                                {
                                    "@offset": "8",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR"
                                },
                                {
                                    "@offset": "9",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR"
                                },
                                {
                                    "@offset": "10",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR"
                                },
                                {
                                    "@offset": "11",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR"
                                },
                                {
                                    "@offset": "12",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR"
                                },
                                {
                                    "@bitpos": "0",
                                    "@extends": "VkSwapchainCreateFlagBitsKHR",
                                    "@name": "VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR",
                                    "@comment": "Allow images with VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkImageSwapchainCreateInfoKHR"
                                },
                                {
                                    "@name": "VkBindImageMemorySwapchainInfoKHR"
                                },
                                {
                                    "@name": "VkAcquireNextImageInfoKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupPresentInfoKHR"
                                },
                                {
                                    "@name": "VkDeviceGroupSwapchainCreateInfoKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkAcquireNextImage2KHR"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_EXT_validation_flags",
                    "@number": "62",
                    "@type": "instance",
                    "@author": "GOOGLE",
                    "@contact": "Tobin Ehlis @tobine",
                    "@specialuse": "debugging",
                    "@supported": "vulkan",
                    "@deprecatedby": "VK_EXT_validation_features",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_VALIDATION_FLAGS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_validation_flags\"",
                                "@name": "VK_EXT_VALIDATION_FLAGS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkValidationFlagsEXT"
                            },
                            {
                                "@name": "VkValidationCheckEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NN_vi_surface",
                    "@number": "63",
                    "@type": "instance",
                    "@author": "NN",
                    "@contact": "Mathias Heyer gitlab:@mheyer",
                    "@requires": "VK_KHR_surface",
                    "@platform": "vi",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NN_VI_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NN_vi_surface\"",
                                "@name": "VK_NN_VI_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkViSurfaceCreateFlagsNN"
                            },
                            {
                                "@name": "VkViSurfaceCreateInfoNN"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateViSurfaceNN"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_shader_draw_parameters",
                    "@number": "64",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SHADER_DRAW_PARAMETERS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shader_draw_parameters\"",
                                "@name": "VK_KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_shader_subgroup_ballot",
                    "@number": "65",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "@deprecatedby": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SHADER_SUBGROUP_BALLOT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_shader_subgroup_ballot\"",
                                "@name": "VK_EXT_SHADER_SUBGROUP_BALLOT_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_shader_subgroup_vote",
                    "@number": "66",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "@deprecatedby": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SHADER_SUBGROUP_VOTE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_shader_subgroup_vote\"",
                                "@name": "VK_EXT_SHADER_SUBGROUP_VOTE_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_texture_compression_astc_hdr",
                    "@number": "67",
                    "@type": "device",
                    "@author": "ARM",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_texture_compression_astc_hdr\"",
                                "@name": "VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT",
                                "@alias": "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_astc_decode_mode",
                    "@number": "68",
                    "@type": "device",
                    "@author": "ARM",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_ASTC_DECODE_MODE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_astc_decode_mode\"",
                                "@name": "VK_EXT_ASTC_DECODE_MODE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImageViewASTCDecodeModeEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceASTCDecodeFeaturesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_IMG_extension_69",
                    "@number": "69",
                    "@type": "device",
                    "@author": "IMG",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_IMG_EXTENSION_69_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_IMG_extension_69\"",
                                "@name": "VK_IMG_EXTENSION_69_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_maintenance1",
                    "@number": "70",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_KHR_MAINTENANCE_1_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_maintenance1\"",
                                "@name": "VK_KHR_MAINTENANCE_1_EXTENSION_NAME"
                            },
                            {
                                "@alias": "VK_KHR_MAINTENANCE_1_SPEC_VERSION",
                                "@name": "VK_KHR_MAINTENANCE1_SPEC_VERSION",
                                "@comment": "Backwards-compatible alias containing a typo"
                            },
                            {
                                "@alias": "VK_KHR_MAINTENANCE_1_EXTENSION_NAME",
                                "@name": "VK_KHR_MAINTENANCE1_EXTENSION_NAME",
                                "@comment": "Backwards-compatible alias containing a typo"
                            },
                            {
                                "@extends": "VkResult",
                                "@name": "VK_ERROR_OUT_OF_POOL_MEMORY_KHR",
                                "@alias": "VK_ERROR_OUT_OF_POOL_MEMORY"
                            },
                            {
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR",
                                "@alias": "VK_FORMAT_FEATURE_TRANSFER_SRC_BIT"
                            },
                            {
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR",
                                "@alias": "VK_FORMAT_FEATURE_TRANSFER_DST_BIT"
                            },
                            {
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR",
                                "@alias": "VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT"
                            }
                        ],
                        "type": {
                            "@name": "VkCommandPoolTrimFlagsKHR"
                        },
                        "command": [
                            {
                                "@name": "vkTrimCommandPoolKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_device_group_creation",
                    "@number": "71",
                    "@type": "instance",
                    "@author": "KHR",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_DEVICE_GROUP_CREATION_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_device_group_creation\"",
                                "@name": "VK_KHR_DEVICE_GROUP_CREATION_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO"
                            },
                            {
                                "@name": "VK_MAX_DEVICE_GROUP_SIZE_KHR"
                            },
                            {
                                "@extends": "VkMemoryHeapFlagBits",
                                "@name": "VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR",
                                "@alias": "VK_MEMORY_HEAP_MULTI_INSTANCE_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceGroupPropertiesKHR"
                            },
                            {
                                "@name": "VkDeviceGroupDeviceCreateInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkEnumeratePhysicalDeviceGroupsKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_memory_capabilities",
                    "@number": "72",
                    "@type": "instance",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_memory_capabilities\"",
                                "@name": "VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES"
                            },
                            {
                                "@name": "VK_LUID_SIZE_KHR"
                            },
                            {
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR",
                                "@alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT"
                            },
                            {
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR",
                                "@alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT"
                            },
                            {
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR",
                                "@alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
                            },
                            {
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR",
                                "@alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT"
                            },
                            {
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR",
                                "@alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT"
                            },
                            {
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR",
                                "@alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT"
                            },
                            {
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR",
                                "@alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT"
                            },
                            {
                                "@extends": "VkExternalMemoryFeatureFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR",
                                "@alias": "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT"
                            },
                            {
                                "@extends": "VkExternalMemoryFeatureFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR",
                                "@alias": "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT"
                            },
                            {
                                "@extends": "VkExternalMemoryFeatureFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR",
                                "@alias": "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkExternalMemoryHandleTypeFlagsKHR"
                            },
                            {
                                "@name": "VkExternalMemoryHandleTypeFlagBitsKHR"
                            },
                            {
                                "@name": "VkExternalMemoryFeatureFlagsKHR"
                            },
                            {
                                "@name": "VkExternalMemoryFeatureFlagBitsKHR"
                            },
                            {
                                "@name": "VkExternalMemoryPropertiesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceExternalImageFormatInfoKHR"
                            },
                            {
                                "@name": "VkExternalImageFormatPropertiesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceExternalBufferInfoKHR"
                            },
                            {
                                "@name": "VkExternalBufferPropertiesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceIDPropertiesKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceExternalBufferPropertiesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_memory",
                    "@number": "73",
                    "@type": "device",
                    "@requires": "VK_KHR_external_memory_capabilities",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_MEMORY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_memory\"",
                                "@name": "VK_KHR_EXTERNAL_MEMORY_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO"
                            },
                            {
                                "@extends": "VkResult",
                                "@name": "VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR",
                                "@alias": "VK_ERROR_INVALID_EXTERNAL_HANDLE"
                            },
                            {
                                "@name": "VK_QUEUE_FAMILY_EXTERNAL_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkExternalMemoryImageCreateInfoKHR"
                            },
                            {
                                "@name": "VkExternalMemoryBufferCreateInfoKHR"
                            },
                            {
                                "@name": "VkExportMemoryAllocateInfoKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_memory_win32",
                    "@number": "74",
                    "@type": "device",
                    "@requires": "VK_KHR_external_memory",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@platform": "win32",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_MEMORY_WIN32_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_memory_win32\"",
                                "@name": "VK_KHR_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImportMemoryWin32HandleInfoKHR"
                            },
                            {
                                "@name": "VkExportMemoryWin32HandleInfoKHR"
                            },
                            {
                                "@name": "VkMemoryWin32HandlePropertiesKHR"
                            },
                            {
                                "@name": "VkMemoryGetWin32HandleInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetMemoryWin32HandleKHR"
                            },
                            {
                                "@name": "vkGetMemoryWin32HandlePropertiesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_memory_fd",
                    "@number": "75",
                    "@type": "device",
                    "@requires": "VK_KHR_external_memory",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_MEMORY_FD_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_memory_fd\"",
                                "@name": "VK_KHR_EXTERNAL_MEMORY_FD_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImportMemoryFdInfoKHR"
                            },
                            {
                                "@name": "VkMemoryFdPropertiesKHR"
                            },
                            {
                                "@name": "VkMemoryGetFdInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetMemoryFdKHR"
                            },
                            {
                                "@name": "vkGetMemoryFdPropertiesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_win32_keyed_mutex",
                    "@number": "76",
                    "@type": "device",
                    "@requires": "VK_KHR_external_memory_win32",
                    "@author": "KHR",
                    "@contact": "Carsten Rohde @crohde",
                    "@platform": "win32",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_WIN32_KEYED_MUTEX_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_win32_keyed_mutex\"",
                                "@name": "VK_KHR_WIN32_KEYED_MUTEX_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR"
                            }
                        ],
                        "type": {
                            "@name": "VkWin32KeyedMutexAcquireReleaseInfoKHR"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_external_semaphore_capabilities",
                    "@number": "77",
                    "@type": "instance",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_semaphore_capabilities\"",
                                "@name": "VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES"
                            },
                            {
                                "@name": "VK_LUID_SIZE_KHR"
                            },
                            {
                                "@extends": "VkExternalSemaphoreHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR",
                                "@alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT"
                            },
                            {
                                "@extends": "VkExternalSemaphoreHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR",
                                "@alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT"
                            },
                            {
                                "@extends": "VkExternalSemaphoreHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR",
                                "@alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
                            },
                            {
                                "@extends": "VkExternalSemaphoreHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR",
                                "@alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT"
                            },
                            {
                                "@extends": "VkExternalSemaphoreHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR",
                                "@alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT"
                            },
                            {
                                "@extends": "VkExternalSemaphoreFeatureFlagBits",
                                "@name": "VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR",
                                "@alias": "VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT"
                            },
                            {
                                "@extends": "VkExternalSemaphoreFeatureFlagBits",
                                "@name": "VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR",
                                "@alias": "VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkExternalSemaphoreHandleTypeFlagsKHR"
                            },
                            {
                                "@name": "VkExternalSemaphoreHandleTypeFlagBitsKHR"
                            },
                            {
                                "@name": "VkExternalSemaphoreFeatureFlagsKHR"
                            },
                            {
                                "@name": "VkExternalSemaphoreFeatureFlagBitsKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceExternalSemaphoreInfoKHR"
                            },
                            {
                                "@name": "VkExternalSemaphorePropertiesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceIDPropertiesKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_semaphore",
                    "@number": "78",
                    "@type": "device",
                    "@requires": "VK_KHR_external_semaphore_capabilities",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_SEMAPHORE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_semaphore\"",
                                "@name": "VK_KHR_EXTERNAL_SEMAPHORE_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkSemaphoreImportFlagBits",
                                "@name": "VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR",
                                "@alias": "VK_SEMAPHORE_IMPORT_TEMPORARY_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSemaphoreImportFlagsKHR"
                            },
                            {
                                "@name": "VkSemaphoreImportFlagBitsKHR"
                            },
                            {
                                "@name": "VkExportSemaphoreCreateInfoKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_semaphore_win32",
                    "@number": "79",
                    "@type": "device",
                    "@requires": "VK_KHR_external_semaphore",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@platform": "win32",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_SEMAPHORE_WIN32_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_semaphore_win32\"",
                                "@name": "VK_KHR_EXTERNAL_SEMAPHORE_WIN32_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImportSemaphoreWin32HandleInfoKHR"
                            },
                            {
                                "@name": "VkExportSemaphoreWin32HandleInfoKHR"
                            },
                            {
                                "@name": "VkD3D12FenceSubmitInfoKHR"
                            },
                            {
                                "@name": "VkSemaphoreGetWin32HandleInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkImportSemaphoreWin32HandleKHR"
                            },
                            {
                                "@name": "vkGetSemaphoreWin32HandleKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_semaphore_fd",
                    "@number": "80",
                    "@type": "device",
                    "@requires": "VK_KHR_external_semaphore",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_SEMAPHORE_FD_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_semaphore_fd\"",
                                "@name": "VK_KHR_EXTERNAL_SEMAPHORE_FD_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImportSemaphoreFdInfoKHR"
                            },
                            {
                                "@name": "VkSemaphoreGetFdInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkImportSemaphoreFdKHR"
                            },
                            {
                                "@name": "vkGetSemaphoreFdKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_push_descriptor",
                    "@number": "81",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "2",
                                    "@name": "VK_KHR_PUSH_DESCRIPTOR_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_push_descriptor\"",
                                    "@name": "VK_KHR_PUSH_DESCRIPTOR_EXTENSION_NAME"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR"
                                },
                                {
                                    "@bitpos": "0",
                                    "@extends": "VkDescriptorSetLayoutCreateFlagBits",
                                    "@name": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR",
                                    "@comment": "Descriptors are pushed via flink:vkCmdPushDescriptorSetKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkCmdPushDescriptorSetKHR"
                                }
                            ],
                            "type": {
                                "@name": "VkPhysicalDevicePushDescriptorPropertiesKHR"
                            }
                        },
                        {
                            "@feature": "VK_VERSION_1_1",
                            "command": [
                                {
                                    "@name": "vkCmdPushDescriptorSetWithTemplateKHR"
                                }
                            ],
                            "enum": [
                                {
                                    "@value": "1",
                                    "@extends": "VkDescriptorUpdateTemplateType",
                                    "@name": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR",
                                    "@comment": "Create descriptor update template for pushed descriptor updates"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_descriptor_update_template",
                            "command": [
                                {
                                    "@name": "vkCmdPushDescriptorSetWithTemplateKHR"
                                }
                            ],
                            "enum": [
                                {
                                    "@value": "1",
                                    "@extends": "VkDescriptorUpdateTemplateType",
                                    "@name": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR",
                                    "@comment": "Create descriptor update template for pushed descriptor updates"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_EXT_conditional_rendering",
                    "@number": "82",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Vikram Kushwaha @vkushwaha",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_CONDITIONAL_RENDERING_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_conditional_rendering\"",
                                "@name": "VK_EXT_CONDITIONAL_RENDERING_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT"
                            },
                            {
                                "@bitpos": "20",
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT",
                                "@comment": "read access flag for reading conditional rendering predicate"
                            },
                            {
                                "@bitpos": "9",
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT",
                                "@comment": "Specifies the buffer can be used as predicate in conditional rendering"
                            },
                            {
                                "@bitpos": "18",
                                "@extends": "VkPipelineStageFlagBits",
                                "@name": "VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT",
                                "@comment": "A pipeline stage for conditional rendering predicate fetch"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkConditionalRenderingFlagsEXT"
                            },
                            {
                                "@name": "VkConditionalRenderingFlagBitsEXT"
                            },
                            {
                                "@name": "VkConditionalRenderingBeginInfoEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceConditionalRenderingFeaturesEXT"
                            },
                            {
                                "@name": "VkCommandBufferInheritanceConditionalRenderingInfoEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdBeginConditionalRenderingEXT"
                            },
                            {
                                "@name": "vkCmdEndConditionalRenderingEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_shader_float16_int8",
                    "@number": "83",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Alexander Galazin @alegal-arm",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SHADER_FLOAT16_INT8_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shader_float16_int8\"",
                                "@name": "VK_KHR_SHADER_FLOAT16_INT8_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceShaderFloat16Int8FeaturesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceFloat16Int8FeaturesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_16bit_storage",
                    "@number": "84",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_KHR_storage_buffer_storage_class",
                    "@author": "KHR",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_16BIT_STORAGE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_16bit_storage\"",
                                "@name": "VK_KHR_16BIT_STORAGE_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDevice16BitStorageFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_incremental_present",
                    "@number": "85",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_swapchain",
                    "@contact": "Ian Elliott @ianelliottus",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_KHR_INCREMENTAL_PRESENT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_incremental_present\"",
                                "@name": "VK_KHR_INCREMENTAL_PRESENT_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPresentRegionsKHR"
                            },
                            {
                                "@name": "VkPresentRegionKHR"
                            },
                            {
                                "@name": "VkRectLayerKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_descriptor_update_template",
                    "@number": "86",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Markus Tavenrath @mtavenrath",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "1",
                                    "@name": "VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_descriptor_update_template\"",
                                    "@name": "VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_EXTENSION_NAME"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO"
                                },
                                {
                                    "@extends": "VkObjectType",
                                    "@name": "VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR",
                                    "@alias": "VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE"
                                },
                                {
                                    "@extends": "VkDescriptorUpdateTemplateType",
                                    "@name": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR",
                                    "@alias": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkCreateDescriptorUpdateTemplateKHR"
                                },
                                {
                                    "@name": "vkDestroyDescriptorUpdateTemplateKHR"
                                },
                                {
                                    "@name": "vkUpdateDescriptorSetWithTemplateKHR"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkDescriptorUpdateTemplateKHR"
                                },
                                {
                                    "@name": "VkDescriptorUpdateTemplateCreateFlagsKHR"
                                },
                                {
                                    "@name": "VkDescriptorUpdateTemplateTypeKHR"
                                },
                                {
                                    "@name": "VkDescriptorUpdateTemplateEntryKHR"
                                },
                                {
                                    "@name": "VkDescriptorUpdateTemplateCreateInfoKHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_push_descriptor",
                            "command": [
                                {
                                    "@name": "vkCmdPushDescriptorSetWithTemplateKHR"
                                }
                            ],
                            "enum": [
                                {
                                    "@value": "1",
                                    "@extends": "VkDescriptorUpdateTemplateType",
                                    "@name": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR",
                                    "@comment": "Create descriptor update template for pushed descriptor updates"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_EXT_debug_report",
                            "enum": [
                                {
                                    "@extends": "VkDebugReportObjectTypeEXT",
                                    "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT",
                                    "@alias": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_NVX_device_generated_commands",
                    "@number": "87",
                    "@type": "device",
                    "@author": "NVX",
                    "@contact": "Christoph Kubisch @pixeljetstream",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_NVX_DEVICE_GENERATED_COMMANDS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NVX_device_generated_commands\"",
                                "@name": "VK_NVX_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_clip_space_w_scaling",
                    "@number": "88",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Eric Werness @ewerness-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_CLIP_SPACE_W_SCALING_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_clip_space_w_scaling\"",
                                "@name": "VK_NV_CLIP_SPACE_W_SCALING_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkViewportWScalingNV"
                            },
                            {
                                "@name": "VkPipelineViewportWScalingStateCreateInfoNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetViewportWScalingNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_direct_mode_display",
                    "@number": "89",
                    "@type": "instance",
                    "@requires": "VK_KHR_display",
                    "@author": "NV",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_DIRECT_MODE_DISPLAY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_direct_mode_display\"",
                                "@name": "VK_EXT_DIRECT_MODE_DISPLAY_EXTENSION_NAME"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkReleaseDisplayEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_acquire_xlib_display",
                    "@number": "90",
                    "@type": "instance",
                    "@requires": "VK_EXT_direct_mode_display",
                    "@author": "NV",
                    "@contact": "James Jones @cubanismo",
                    "@platform": "xlib_xrandr",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_ACQUIRE_XLIB_DISPLAY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_acquire_xlib_display\"",
                                "@name": "VK_EXT_ACQUIRE_XLIB_DISPLAY_EXTENSION_NAME"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkAcquireXlibDisplayEXT"
                            },
                            {
                                "@name": "vkGetRandROutputDisplayEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_display_surface_counter",
                    "@number": "91",
                    "@type": "instance",
                    "@requires": "VK_KHR_display",
                    "@author": "NV",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_DISPLAY_SURFACE_COUNTER_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_display_surface_counter\"",
                                "@name": "VK_EXT_DISPLAY_SURFACE_COUNTER_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT"
                            },
                            {
                                "@alias": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT",
                                "@comment": "Backwards-compatible alias containing a typo"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSurfaceCounterFlagsEXT"
                            },
                            {
                                "@name": "VkSurfaceCounterFlagBitsEXT"
                            },
                            {
                                "@name": "VkSurfaceCapabilities2EXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceSurfaceCapabilities2EXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_display_control",
                    "@number": "92",
                    "@type": "device",
                    "@requires": "VK_EXT_display_surface_counter,VK_KHR_swapchain",
                    "@author": "NV",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_DISPLAY_CONTROL_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_display_control\"",
                                "@name": "VK_EXT_DISPLAY_CONTROL_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDisplayPowerStateEXT"
                            },
                            {
                                "@name": "VkDeviceEventTypeEXT"
                            },
                            {
                                "@name": "VkDisplayEventTypeEXT"
                            },
                            {
                                "@name": "VkDisplayPowerInfoEXT"
                            },
                            {
                                "@name": "VkDeviceEventInfoEXT"
                            },
                            {
                                "@name": "VkDisplayEventInfoEXT"
                            },
                            {
                                "@name": "VkSwapchainCounterCreateInfoEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkDisplayPowerControlEXT"
                            },
                            {
                                "@name": "vkRegisterDeviceEventEXT"
                            },
                            {
                                "@name": "vkRegisterDisplayEventEXT"
                            },
                            {
                                "@name": "vkGetSwapchainCounterEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GOOGLE_display_timing",
                    "@number": "93",
                    "@type": "device",
                    "@author": "GOOGLE",
                    "@requires": "VK_KHR_swapchain",
                    "@contact": "Ian Elliott @ianelliottus",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_GOOGLE_DISPLAY_TIMING_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_display_timing\"",
                                "@name": "VK_GOOGLE_DISPLAY_TIMING_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRefreshCycleDurationGOOGLE"
                            },
                            {
                                "@name": "VkPastPresentationTimingGOOGLE"
                            },
                            {
                                "@name": "VkPresentTimesInfoGOOGLE"
                            },
                            {
                                "@name": "VkPresentTimeGOOGLE"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetRefreshCycleDurationGOOGLE"
                            },
                            {
                                "@name": "vkGetPastPresentationTimingGOOGLE"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_RESERVED_do_not_use_94",
                    "@number": "94",
                    "@supported": "disabled",
                    "@comment": "Used for functionality subsumed into Vulkan 1.1 and not published as an extension",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_RESERVED_DO_NOT_USE_94_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_RESERVED_do_not_use_94\"",
                                "@name": "VK_RESERVED_DO_NOT_USE_94_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_sample_mask_override_coverage",
                    "@number": "95",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_sample_mask_override_coverage\"",
                                "@name": "VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_EXTENSION_NAME"
                            }
                        ],
                        "comment": "enum offset=0 was mistakenly used for the 1.1 core enum\n                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES\n                    (value=1000094000). Fortunately, no conflict resulted."
                    }
                },
                {
                    "@name": "VK_NV_geometry_shader_passthrough",
                    "@number": "96",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_GEOMETRY_SHADER_PASSTHROUGH_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_geometry_shader_passthrough\"",
                                "@name": "VK_NV_GEOMETRY_SHADER_PASSTHROUGH_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_viewport_array2",
                    "@number": "97",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_VIEWPORT_ARRAY_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_viewport_array2\"",
                                "@name": "VK_NV_VIEWPORT_ARRAY_2_EXTENSION_NAME"
                            },
                            {
                                "@alias": "VK_NV_VIEWPORT_ARRAY_2_SPEC_VERSION",
                                "@name": "VK_NV_VIEWPORT_ARRAY2_SPEC_VERSION",
                                "@comment": "Backwards-compatible alias containing a typo"
                            },
                            {
                                "@alias": "VK_NV_VIEWPORT_ARRAY_2_EXTENSION_NAME",
                                "@name": "VK_NV_VIEWPORT_ARRAY2_EXTENSION_NAME",
                                "@comment": "Backwards-compatible alias containing a typo"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NVX_multiview_per_view_attributes",
                    "@number": "98",
                    "@type": "device",
                    "@requires": "VK_KHR_multiview",
                    "@author": "NVX",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NVX_multiview_per_view_attributes\"",
                                "@name": "VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkSubpassDescriptionFlagBits",
                                "@name": "VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkSubpassDescriptionFlagBits",
                                "@name": "VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX"
                        }
                    }
                },
                {
                    "@name": "VK_NV_viewport_swizzle",
                    "@number": "99",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_VIEWPORT_SWIZZLE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_viewport_swizzle\"",
                                "@name": "VK_NV_VIEWPORT_SWIZZLE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkViewportSwizzleNV"
                            },
                            {
                                "@name": "VkViewportCoordinateSwizzleNV"
                            },
                            {
                                "@name": "VkPipelineViewportSwizzleStateCreateInfoNV"
                            },
                            {
                                "@name": "VkPipelineViewportSwizzleStateCreateFlagsNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_discard_rectangles",
                    "@number": "100",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_DISCARD_RECTANGLES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_discard_rectangles\"",
                                "@name": "VK_EXT_DISCARD_RECTANGLES_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceDiscardRectanglePropertiesEXT"
                            },
                            {
                                "@name": "VkPipelineDiscardRectangleStateCreateInfoEXT"
                            },
                            {
                                "@name": "VkPipelineDiscardRectangleStateCreateFlagsEXT"
                            },
                            {
                                "@name": "VkDiscardRectangleModeEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetDiscardRectangleEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_101",
                    "@number": "101",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_101_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_101\"",
                                "@name": "VK_NV_EXTENSION_101_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_conservative_rasterization",
                    "@number": "102",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_CONSERVATIVE_RASTERIZATION_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_conservative_rasterization\"",
                                "@name": "VK_EXT_CONSERVATIVE_RASTERIZATION_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceConservativeRasterizationPropertiesEXT"
                            },
                            {
                                "@name": "VkPipelineRasterizationConservativeStateCreateInfoEXT"
                            },
                            {
                                "@name": "VkPipelineRasterizationConservativeStateCreateFlagsEXT"
                            },
                            {
                                "@name": "VkConservativeRasterizationModeEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_depth_clip_enable",
                    "@number": "103",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@specialuse": "d3demulation",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_DEPTH_CLIP_ENABLE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_depth_clip_enable\"",
                                "@name": "VK_EXT_DEPTH_CLIP_ENABLE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceDepthClipEnableFeaturesEXT"
                            },
                            {
                                "@name": "VkPipelineRasterizationDepthClipStateCreateInfoEXT"
                            },
                            {
                                "@name": "VkPipelineRasterizationDepthClipStateCreateFlagsEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_104",
                    "@number": "104",
                    "@author": "NV",
                    "@contact": "Mathias Schott gitlab:@mschott",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_104_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_104\"",
                                "@name": "VK_NV_EXTENSION_104_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_swapchain_colorspace",
                    "@number": "105",
                    "@type": "instance",
                    "@author": "GOOGLE",
                    "@contact": "Courtney Goeltzenleuchter @courtney-g",
                    "@requires": "VK_KHR_surface",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "4",
                                "@name": "VK_EXT_SWAPCHAIN_COLOR_SPACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_swapchain_colorspace\"",
                                "@name": "VK_EXT_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_BT709_LINEAR_EXT"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_BT709_NONLINEAR_EXT"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_BT2020_LINEAR_EXT"
                            },
                            {
                                "@offset": "8",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_HDR10_ST2084_EXT"
                            },
                            {
                                "@offset": "9",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_DOLBYVISION_EXT"
                            },
                            {
                                "@offset": "10",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_HDR10_HLG_EXT"
                            },
                            {
                                "@offset": "11",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT"
                            },
                            {
                                "@offset": "12",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT"
                            },
                            {
                                "@offset": "13",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_PASS_THROUGH_EXT"
                            },
                            {
                                "@offset": "14",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT"
                            },
                            {
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_DCI_P3_LINEAR_EXT",
                                "@alias": "VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT",
                                "@comment": "Backwards-compatible alias containing a typo"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_hdr_metadata",
                    "@number": "106",
                    "@type": "device",
                    "@requires": "VK_KHR_swapchain",
                    "@author": "GOOGLE",
                    "@contact": "Courtney Goeltzenleuchter @courtney-g",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_HDR_METADATA_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_hdr_metadata\"",
                                "@name": "VK_EXT_HDR_METADATA_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_HDR_METADATA_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkHdrMetadataEXT"
                            },
                            {
                                "@name": "VkXYColorEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkSetHdrMetadataEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_IMG_extension_107",
                    "@number": "107",
                    "@author": "IMG",
                    "@contact": "Michael Worcester @michaelworcester",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_IMG_EXTENSION_107_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_IMG_extension_107\"",
                                "@name": "VK_IMG_EXTENSION_107_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_IMG_extension_108",
                    "@number": "108",
                    "@author": "IMG",
                    "@contact": "Michael Worcester @michaelworcester",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_IMG_EXTENSION_108_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_IMG_extension_108\"",
                                "@name": "VK_IMG_EXTENSION_108_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_imageless_framebuffer",
                    "@requires": "VK_KHR_maintenance2,VK_KHR_image_format_list",
                    "@number": "109",
                    "@author": "KHR",
                    "@contact": "Tobias Hector @tobias",
                    "@type": "device",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_IMAGELESS_FRAMEBUFFER_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_imageless_framebuffer\"",
                                "@name": "VK_KHR_IMAGELESS_FRAMEBUFFER_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO"
                            },
                            {
                                "@extends": "VkFramebufferCreateFlagBits",
                                "@name": "VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR",
                                "@alias": "VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceImagelessFramebufferFeaturesKHR"
                            },
                            {
                                "@name": "VkFramebufferAttachmentsCreateInfoKHR"
                            },
                            {
                                "@name": "VkFramebufferAttachmentImageInfoKHR"
                            },
                            {
                                "@name": "VkRenderPassAttachmentBeginInfoKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_create_renderpass2",
                    "@requires": "VK_KHR_multiview,VK_KHR_maintenance2",
                    "@number": "110",
                    "@contact": "Tobias Hector @tobias",
                    "@type": "device",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_CREATE_RENDERPASS_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_create_renderpass2\"",
                                "@name": "VK_KHR_CREATE_RENDERPASS_2_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_SUBPASS_END_INFO"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateRenderPass2KHR"
                            },
                            {
                                "@name": "vkCmdBeginRenderPass2KHR"
                            },
                            {
                                "@name": "vkCmdNextSubpass2KHR"
                            },
                            {
                                "@name": "vkCmdEndRenderPass2KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRenderPassCreateInfo2KHR"
                            },
                            {
                                "@name": "VkAttachmentDescription2KHR"
                            },
                            {
                                "@name": "VkAttachmentReference2KHR"
                            },
                            {
                                "@name": "VkSubpassDescription2KHR"
                            },
                            {
                                "@name": "VkSubpassDependency2KHR"
                            },
                            {
                                "@name": "VkSubpassBeginInfoKHR"
                            },
                            {
                                "@name": "VkSubpassEndInfoKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_IMG_extension_111",
                    "@number": "111",
                    "@author": "IMG",
                    "@contact": "Michael Worcester @michaelworcester",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_IMG_EXTENSION_111_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_IMG_extension_111\"",
                                "@name": "VK_IMG_EXTENSION_111_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_shared_presentable_image",
                    "@number": "112",
                    "@type": "device",
                    "@requires": "VK_KHR_swapchain,VK_KHR_get_physical_device_properties2,VK_KHR_get_surface_capabilities2",
                    "@author": "KHR",
                    "@contact": "Alon Or-bach @alonorbach",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SHARED_PRESENTABLE_IMAGE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shared_presentable_image\"",
                                "@name": "VK_KHR_SHARED_PRESENTABLE_IMAGE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkPresentModeKHR",
                                "@name": "VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkPresentModeKHR",
                                "@name": "VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkImageLayout",
                                "@name": "VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR"
                            }
                        ],
                        "type": {
                            "@name": "VkSharedPresentSurfaceCapabilitiesKHR"
                        },
                        "command": [
                            {
                                "@name": "vkGetSwapchainStatusKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_fence_capabilities",
                    "@number": "113",
                    "@type": "instance",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Jesse Hall @critsec",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_FENCE_CAPABILITIES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_fence_capabilities\"",
                                "@name": "VK_KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES"
                            },
                            {
                                "@name": "VK_LUID_SIZE_KHR"
                            },
                            {
                                "@extends": "VkExternalFenceHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR",
                                "@alias": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT"
                            },
                            {
                                "@extends": "VkExternalFenceHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR",
                                "@alias": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT"
                            },
                            {
                                "@extends": "VkExternalFenceHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR",
                                "@alias": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
                            },
                            {
                                "@extends": "VkExternalFenceHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR",
                                "@alias": "VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT"
                            },
                            {
                                "@extends": "VkExternalFenceFeatureFlagBits",
                                "@name": "VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR",
                                "@alias": "VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT"
                            },
                            {
                                "@extends": "VkExternalFenceFeatureFlagBits",
                                "@name": "VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR",
                                "@alias": "VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkExternalFenceHandleTypeFlagsKHR"
                            },
                            {
                                "@name": "VkExternalFenceHandleTypeFlagBitsKHR"
                            },
                            {
                                "@name": "VkExternalFenceFeatureFlagsKHR"
                            },
                            {
                                "@name": "VkExternalFenceFeatureFlagBitsKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceExternalFenceInfoKHR"
                            },
                            {
                                "@name": "VkExternalFencePropertiesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceIDPropertiesKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceExternalFencePropertiesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_fence",
                    "@number": "114",
                    "@type": "device",
                    "@requires": "VK_KHR_external_fence_capabilities",
                    "@author": "KHR",
                    "@contact": "Jesse Hall @critsec",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_FENCE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_fence\"",
                                "@name": "VK_KHR_EXTERNAL_FENCE_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkFenceImportFlagBits",
                                "@name": "VK_FENCE_IMPORT_TEMPORARY_BIT_KHR",
                                "@alias": "VK_FENCE_IMPORT_TEMPORARY_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkFenceImportFlagsKHR"
                            },
                            {
                                "@name": "VkFenceImportFlagBitsKHR"
                            },
                            {
                                "@name": "VkExportFenceCreateInfoKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_fence_win32",
                    "@number": "115",
                    "@type": "device",
                    "@requires": "VK_KHR_external_fence",
                    "@author": "KHR",
                    "@contact": "Jesse Hall @critsec",
                    "@platform": "win32",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_FENCE_WIN32_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_fence_win32\"",
                                "@name": "VK_KHR_EXTERNAL_FENCE_WIN32_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImportFenceWin32HandleInfoKHR"
                            },
                            {
                                "@name": "VkExportFenceWin32HandleInfoKHR"
                            },
                            {
                                "@name": "VkFenceGetWin32HandleInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkImportFenceWin32HandleKHR"
                            },
                            {
                                "@name": "vkGetFenceWin32HandleKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_external_fence_fd",
                    "@number": "116",
                    "@type": "device",
                    "@requires": "VK_KHR_external_fence",
                    "@author": "KHR",
                    "@contact": "Jesse Hall @critsec",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_EXTERNAL_FENCE_FD_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_external_fence_fd\"",
                                "@name": "VK_KHR_EXTERNAL_FENCE_FD_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImportFenceFdInfoKHR"
                            },
                            {
                                "@name": "VkFenceGetFdInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkImportFenceFdKHR"
                            },
                            {
                                "@name": "vkGetFenceFdKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_performance_query",
                    "@number": "117",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Alon Or-bach @alonorbach",
                    "@specialuse": "devtools",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_PERFORMANCE_QUERY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_performance_query\"",
                                "@name": "VK_KHR_PERFORMANCE_QUERY_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkQueryType",
                                "@name": "VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDevicePerformanceQueryFeaturesKHR"
                            },
                            {
                                "@name": "VkPhysicalDevicePerformanceQueryPropertiesKHR"
                            },
                            {
                                "@name": "VkPerformanceCounterKHR"
                            },
                            {
                                "@name": "VkPerformanceCounterDescriptionKHR"
                            },
                            {
                                "@name": "VkPerformanceCounterDescriptionFlagsKHR"
                            },
                            {
                                "@name": "VkPerformanceCounterDescriptionFlagBitsKHR"
                            },
                            {
                                "@name": "VkQueryPoolPerformanceCreateInfoKHR"
                            },
                            {
                                "@name": "VkPerformanceCounterScopeKHR"
                            },
                            {
                                "@name": "VkPerformanceCounterStorageKHR"
                            },
                            {
                                "@name": "VkPerformanceCounterUnitKHR"
                            },
                            {
                                "@name": "VkPerformanceCounterResultKHR"
                            },
                            {
                                "@name": "VkAcquireProfilingLockInfoKHR"
                            },
                            {
                                "@name": "VkAcquireProfilingLockFlagsKHR"
                            },
                            {
                                "@name": "VkAcquireProfilingLockFlagBitsKHR"
                            },
                            {
                                "@name": "VkPerformanceQuerySubmitInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR"
                            },
                            {
                                "@name": "vkAcquireProfilingLockKHR"
                            },
                            {
                                "@name": "vkReleaseProfilingLockKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_maintenance2",
                    "@number": "118",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Michael Worcester @michaelworcester",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_MAINTENANCE_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_maintenance2\"",
                                "@name": "VK_KHR_MAINTENANCE_2_EXTENSION_NAME"
                            },
                            {
                                "@alias": "VK_KHR_MAINTENANCE_2_SPEC_VERSION",
                                "@name": "VK_KHR_MAINTENANCE2_SPEC_VERSION",
                                "@comment": "Backwards-compatible alias containing a typo"
                            },
                            {
                                "@alias": "VK_KHR_MAINTENANCE_2_EXTENSION_NAME",
                                "@name": "VK_KHR_MAINTENANCE2_EXTENSION_NAME",
                                "@comment": "Backwards-compatible alias containing a typo"
                            },
                            {
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR",
                                "@alias": "VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT"
                            },
                            {
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR",
                                "@alias": "VK_IMAGE_CREATE_EXTENDED_USAGE_BIT"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkImageLayout",
                                "@name": "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR",
                                "@alias": "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL"
                            },
                            {
                                "@extends": "VkImageLayout",
                                "@name": "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR",
                                "@alias": "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL"
                            },
                            {
                                "@extends": "VkPointClippingBehavior",
                                "@name": "VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR",
                                "@alias": "VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES"
                            },
                            {
                                "@extends": "VkPointClippingBehavior",
                                "@name": "VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR",
                                "@alias": "VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY"
                            },
                            {
                                "@extends": "VkTessellationDomainOrigin",
                                "@name": "VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR",
                                "@alias": "VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT"
                            },
                            {
                                "@extends": "VkTessellationDomainOrigin",
                                "@name": "VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR",
                                "@alias": "VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDevicePointClippingPropertiesKHR"
                            },
                            {
                                "@name": "VkPointClippingBehaviorKHR"
                            },
                            {
                                "@name": "VkRenderPassInputAttachmentAspectCreateInfoKHR"
                            },
                            {
                                "@name": "VkInputAttachmentAspectReferenceKHR"
                            },
                            {
                                "@name": "VkImageViewUsageCreateInfoKHR"
                            },
                            {
                                "@name": "VkTessellationDomainOriginKHR"
                            },
                            {
                                "@name": "VkPipelineTessellationDomainOriginStateCreateInfoKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_119",
                    "@number": "119",
                    "@author": "KHR",
                    "@contact": "Michael Worcester @michaelworcester",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_119_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_119\"",
                                "@name": "VK_KHR_EXTENSION_119_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_get_surface_capabilities2",
                    "@number": "120",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_GET_SURFACE_CAPABILITIES_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_get_surface_capabilities2\"",
                                "@name": "VK_KHR_GET_SURFACE_CAPABILITIES_2_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceSurfaceInfo2KHR"
                            },
                            {
                                "@name": "VkSurfaceCapabilities2KHR"
                            },
                            {
                                "@name": "VkSurfaceFormat2KHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceSurfaceCapabilities2KHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceSurfaceFormats2KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_variable_pointers",
                    "@number": "121",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Jesse Hall @critsec",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_KHR_storage_buffer_storage_class",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_VARIABLE_POINTERS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_variable_pointers\"",
                                "@name": "VK_KHR_VARIABLE_POINTERS_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceVariablePointerFeaturesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceVariablePointersFeaturesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_get_display_properties2",
                    "@number": "122",
                    "@type": "instance",
                    "@requires": "VK_KHR_display",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_GET_DISPLAY_PROPERTIES_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_get_display_properties2\"",
                                "@name": "VK_KHR_GET_DISPLAY_PROPERTIES_2_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDisplayProperties2KHR"
                            },
                            {
                                "@name": "VkDisplayPlaneProperties2KHR"
                            },
                            {
                                "@name": "VkDisplayModeProperties2KHR"
                            },
                            {
                                "@name": "VkDisplayPlaneInfo2KHR"
                            },
                            {
                                "@name": "VkDisplayPlaneCapabilities2KHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceDisplayProperties2KHR"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceDisplayPlaneProperties2KHR"
                            },
                            {
                                "@name": "vkGetDisplayModeProperties2KHR"
                            },
                            {
                                "@name": "vkGetDisplayPlaneCapabilities2KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_MVK_ios_surface",
                    "@number": "123",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "ios",
                    "@supported": "vulkan",
                    "@author": "MVK",
                    "@contact": "Bill Hollings @billhollings",
                    "@deprecatedby": "VK_EXT_metal_surface",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_MVK_IOS_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_MVK_ios_surface\"",
                                "@name": "VK_MVK_IOS_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkIOSSurfaceCreateFlagsMVK"
                            },
                            {
                                "@name": "VkIOSSurfaceCreateInfoMVK"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateIOSSurfaceMVK"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_MVK_macos_surface",
                    "@number": "124",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "macos",
                    "@supported": "vulkan",
                    "@author": "MVK",
                    "@contact": "Bill Hollings @billhollings",
                    "@deprecatedby": "VK_EXT_metal_surface",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_MVK_MACOS_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_MVK_macos_surface\"",
                                "@name": "VK_MVK_MACOS_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkMacOSSurfaceCreateFlagsMVK"
                            },
                            {
                                "@name": "VkMacOSSurfaceCreateInfoMVK"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateMacOSSurfaceMVK"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_MVK_moltenvk",
                    "@number": "125",
                    "@type": "instance",
                    "@author": "MVK",
                    "@contact": "Bill Hollings @billhollings",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_MVK_MOLTENVK_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_MVK_moltenvk\"",
                                "@name": "VK_MVK_MOLTENVK_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_external_memory_dma_buf",
                    "@number": "126",
                    "@type": "device",
                    "@requires": "VK_KHR_external_memory_fd",
                    "@author": "EXT",
                    "@contact": "Chad Versace @chadversary",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_EXTERNAL_MEMORY_DMA_BUF_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_external_memory_dma_buf\"",
                                "@name": "VK_EXT_EXTERNAL_MEMORY_DMA_BUF_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "9",
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_queue_family_foreign",
                    "@number": "127",
                    "@type": "device",
                    "@author": "EXT",
                    "@requires": "VK_KHR_external_memory",
                    "@contact": "Chad Versace @chadversary",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_QUEUE_FAMILY_FOREIGN_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_queue_family_foreign\"",
                                "@name": "VK_EXT_QUEUE_FAMILY_FOREIGN_EXTENSION_NAME"
                            },
                            {
                                "@name": "VK_QUEUE_FAMILY_FOREIGN_EXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_dedicated_allocation",
                    "@number": "128",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_memory_requirements2",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_KHR_DEDICATED_ALLOCATION_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_dedicated_allocation\"",
                                "@name": "VK_KHR_DEDICATED_ALLOCATION_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkMemoryDedicatedRequirementsKHR"
                            },
                            {
                                "@name": "VkMemoryDedicatedAllocateInfoKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_debug_utils",
                    "@number": "129",
                    "@type": "instance",
                    "@author": "EXT",
                    "@contact": "Mark Young @marky-lunarg",
                    "@specialuse": "debugging",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_DEBUG_UTILS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_debug_utils\"",
                                "@name": "VK_EXT_DEBUG_UTILS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "PFN_vkDebugUtilsMessengerCallbackEXT"
                            },
                            {
                                "@name": "VkDebugUtilsLabelEXT"
                            },
                            {
                                "@name": "VkDebugUtilsMessageSeverityFlagBitsEXT"
                            },
                            {
                                "@name": "VkDebugUtilsMessageSeverityFlagsEXT"
                            },
                            {
                                "@name": "VkDebugUtilsMessageTypeFlagBitsEXT"
                            },
                            {
                                "@name": "VkDebugUtilsMessageTypeFlagsEXT"
                            },
                            {
                                "@name": "VkDebugUtilsMessengerCallbackDataEXT"
                            },
                            {
                                "@name": "VkDebugUtilsMessengerCallbackDataFlagsEXT"
                            },
                            {
                                "@name": "VkDebugUtilsMessengerCreateFlagsEXT"
                            },
                            {
                                "@name": "VkDebugUtilsMessengerCreateInfoEXT"
                            },
                            {
                                "@name": "VkDebugUtilsMessengerEXT"
                            },
                            {
                                "@name": "VkDebugUtilsObjectNameInfoEXT"
                            },
                            {
                                "@name": "VkDebugUtilsObjectTagInfoEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkSetDebugUtilsObjectNameEXT"
                            },
                            {
                                "@name": "vkSetDebugUtilsObjectTagEXT"
                            },
                            {
                                "@name": "vkQueueBeginDebugUtilsLabelEXT"
                            },
                            {
                                "@name": "vkQueueEndDebugUtilsLabelEXT"
                            },
                            {
                                "@name": "vkQueueInsertDebugUtilsLabelEXT"
                            },
                            {
                                "@name": "vkCmdBeginDebugUtilsLabelEXT"
                            },
                            {
                                "@name": "vkCmdEndDebugUtilsLabelEXT"
                            },
                            {
                                "@name": "vkCmdInsertDebugUtilsLabelEXT"
                            },
                            {
                                "@name": "vkCreateDebugUtilsMessengerEXT"
                            },
                            {
                                "@name": "vkDestroyDebugUtilsMessengerEXT"
                            },
                            {
                                "@name": "vkSubmitDebugUtilsMessageEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_ANDROID_external_memory_android_hardware_buffer",
                    "@number": "130",
                    "@type": "device",
                    "@author": "ANDROID",
                    "@requires": "VK_KHR_sampler_ycbcr_conversion,VK_KHR_external_memory,VK_EXT_queue_family_foreign,VK_KHR_dedicated_allocation",
                    "@platform": "android",
                    "@contact": "Jesse Hall @critsec",
                    "@supported": "vulkan",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "4",
                                    "@name": "VK_ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_ANDROID_external_memory_android_hardware_buffer\"",
                                    "@name": "VK_ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_EXTENSION_NAME"
                                },
                                {
                                    "@bitpos": "10",
                                    "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                    "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID"
                                },
                                {
                                    "@offset": "1",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID"
                                },
                                {
                                    "@offset": "2",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID"
                                },
                                {
                                    "@offset": "3",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID"
                                },
                                {
                                    "@offset": "4",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID"
                                },
                                {
                                    "@offset": "5",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkAndroidHardwareBufferUsageANDROID"
                                },
                                {
                                    "@name": "VkAndroidHardwareBufferPropertiesANDROID"
                                },
                                {
                                    "@name": "VkAndroidHardwareBufferFormatPropertiesANDROID"
                                },
                                {
                                    "@name": "VkImportAndroidHardwareBufferInfoANDROID"
                                },
                                {
                                    "@name": "VkMemoryGetAndroidHardwareBufferInfoANDROID"
                                },
                                {
                                    "@name": "VkExternalFormatANDROID"
                                },
                                {
                                    "@name": "AHardwareBuffer"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkGetAndroidHardwareBufferPropertiesANDROID"
                                },
                                {
                                    "@name": "vkGetMemoryAndroidHardwareBufferANDROID"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_format_feature_flags2",
                            "type": {
                                "@name": "VkAndroidHardwareBufferFormatProperties2ANDROID"
                            },
                            "enum": [
                                {
                                    "@offset": "6",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_EXT_sampler_filter_minmax",
                    "@number": "131",
                    "@type": "device",
                    "@author": "NV",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_SAMPLER_FILTER_MINMAX_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_sampler_filter_minmax\"",
                                "@name": "VK_EXT_SAMPLER_FILTER_MINMAX_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT",
                                "@alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT"
                            },
                            {
                                "@extends": "VkSamplerReductionMode",
                                "@name": "VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT",
                                "@alias": "VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE"
                            },
                            {
                                "@extends": "VkSamplerReductionMode",
                                "@name": "VK_SAMPLER_REDUCTION_MODE_MIN_EXT",
                                "@alias": "VK_SAMPLER_REDUCTION_MODE_MIN"
                            },
                            {
                                "@extends": "VkSamplerReductionMode",
                                "@name": "VK_SAMPLER_REDUCTION_MODE_MAX_EXT",
                                "@alias": "VK_SAMPLER_REDUCTION_MODE_MAX"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSamplerReductionModeEXT"
                            },
                            {
                                "@name": "VkSamplerReductionModeCreateInfoEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_storage_buffer_storage_class",
                    "@number": "132",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Alexander Galazin @alegal-arm",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_storage_buffer_storage_class\"",
                                "@name": "VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_gpu_shader_int16",
                    "@number": "133",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Qun Lin @linqun",
                    "@supported": "vulkan",
                    "@deprecatedby": "VK_KHR_shader_float16_int8",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_AMD_GPU_SHADER_INT16_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_gpu_shader_int16\"",
                                "@name": "VK_AMD_GPU_SHADER_INT16_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_134",
                    "@number": "134",
                    "@author": "AMD",
                    "@contact": "Mais Alnasser @malnasse",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_134_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_134\"",
                                "@name": "VK_AMD_EXTENSION_134_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_135",
                    "@number": "135",
                    "@author": "AMD",
                    "@contact": "Mais Alnasser @malnasse",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_135_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_135\"",
                                "@name": "VK_AMD_EXTENSION_135_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_136",
                    "@number": "136",
                    "@author": "AMD",
                    "@contact": "Mais Alnasser @malnasse",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_136_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_136\"",
                                "@name": "VK_AMD_EXTENSION_136_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_mixed_attachment_samples",
                    "@number": "137",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Matthaeus G. Chajdas @anteru",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_MIXED_ATTACHMENT_SAMPLES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_mixed_attachment_samples\"",
                                "@name": "VK_AMD_MIXED_ATTACHMENT_SAMPLES_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_shader_fragment_mask",
                    "@number": "138",
                    "@author": "AMD",
                    "@contact": "Aaron Hagan @AaronHaganAMD",
                    "@supported": "vulkan",
                    "@type": "device",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_SHADER_FRAGMENT_MASK_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_shader_fragment_mask\"",
                                "@name": "VK_AMD_SHADER_FRAGMENT_MASK_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_inline_uniform_block",
                    "@number": "139",
                    "@type": "device",
                    "@author": "EXT",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_KHR_maintenance1",
                    "@contact": "Daniel Rakos @aqnuep",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_INLINE_UNIFORM_BLOCK_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_inline_uniform_block\"",
                                "@name": "VK_EXT_INLINE_UNIFORM_BLOCK_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkDescriptorType",
                                "@name": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT",
                                "@alias": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceInlineUniformBlockFeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceInlineUniformBlockPropertiesEXT"
                            },
                            {
                                "@name": "VkWriteDescriptorSetInlineUniformBlockEXT"
                            },
                            {
                                "@name": "VkDescriptorPoolInlineUniformBlockCreateInfoEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_140",
                    "@number": "140",
                    "@author": "AMD",
                    "@contact": "Mais Alnasser @malnasse",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_140_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_140\"",
                                "@name": "VK_AMD_EXTENSION_140_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_shader_stencil_export",
                    "@number": "141",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Dominik Witczak @dominikwitczakamd",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SHADER_STENCIL_EXPORT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_shader_stencil_export\"",
                                "@name": "VK_EXT_SHADER_STENCIL_EXPORT_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_142",
                    "@number": "142",
                    "@author": "AMD",
                    "@contact": "Mais Alnasser @malnasse",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_142_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_142\"",
                                "@name": "VK_AMD_EXTENSION_142_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_143",
                    "@number": "143",
                    "@author": "AMD",
                    "@contact": "Mais Alnasser @malnasse",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_143_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_143\"",
                                "@name": "VK_AMD_EXTENSION_143_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_sample_locations",
                    "@number": "144",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "vulkan",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SAMPLE_LOCATIONS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_sample_locations\"",
                                "@name": "VK_EXT_SAMPLE_LOCATIONS_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "12",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSampleLocationEXT"
                            },
                            {
                                "@name": "VkSampleLocationsInfoEXT"
                            },
                            {
                                "@name": "VkAttachmentSampleLocationsEXT"
                            },
                            {
                                "@name": "VkSubpassSampleLocationsEXT"
                            },
                            {
                                "@name": "VkRenderPassSampleLocationsBeginInfoEXT"
                            },
                            {
                                "@name": "VkPipelineSampleLocationsStateCreateInfoEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceSampleLocationsPropertiesEXT"
                            },
                            {
                                "@name": "VkMultisamplePropertiesEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetSampleLocationsEXT"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceMultisamplePropertiesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_relaxed_block_layout",
                    "@number": "145",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "John Kessenich @johnkslang",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_RELAXED_BLOCK_LAYOUT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_relaxed_block_layout\"",
                                "@name": "VK_KHR_RELAXED_BLOCK_LAYOUT_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_RESERVED_do_not_use_146",
                    "@number": "146",
                    "@supported": "disabled",
                    "@comment": "Used for functionality subsumed into Vulkan 1.1 and not published as an extension",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_RESERVED_DO_NOT_USE_146_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_RESERVED_do_not_use_146\"",
                                "@name": "VK_RESERVED_DO_NOT_USE_146_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_get_memory_requirements2",
                    "@number": "147",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Jason Ekstrand @jekstrand",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_GET_MEMORY_REQUIREMENTS_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_get_memory_requirements2\"",
                                "@name": "VK_KHR_GET_MEMORY_REQUIREMENTS_2_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkBufferMemoryRequirementsInfo2KHR"
                            },
                            {
                                "@name": "VkImageMemoryRequirementsInfo2KHR"
                            },
                            {
                                "@name": "VkImageSparseMemoryRequirementsInfo2KHR"
                            },
                            {
                                "@name": "VkMemoryRequirements2KHR"
                            },
                            {
                                "@name": "VkSparseImageMemoryRequirements2KHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetImageMemoryRequirements2KHR"
                            },
                            {
                                "@name": "vkGetBufferMemoryRequirements2KHR"
                            },
                            {
                                "@name": "vkGetImageSparseMemoryRequirements2KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_image_format_list",
                    "@number": "148",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Jason Ekstrand @jekstrand",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_IMAGE_FORMAT_LIST_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_image_format_list\"",
                                "@name": "VK_KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO"
                            }
                        ],
                        "type": {
                            "@name": "VkImageFormatListCreateInfoKHR"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_blend_operation_advanced",
                    "@number": "149",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_BLEND_OPERATION_ADVANCED_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_blend_operation_advanced\"",
                                "@name": "VK_EXT_BLEND_OPERATION_ADVANCED_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_ZERO_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_SRC_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_DST_EXT"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_SRC_OVER_EXT"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_DST_OVER_EXT"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_SRC_IN_EXT"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_DST_IN_EXT"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_SRC_OUT_EXT"
                            },
                            {
                                "@offset": "8",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_DST_OUT_EXT"
                            },
                            {
                                "@offset": "9",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_SRC_ATOP_EXT"
                            },
                            {
                                "@offset": "10",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_DST_ATOP_EXT"
                            },
                            {
                                "@offset": "11",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_XOR_EXT"
                            },
                            {
                                "@offset": "12",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_MULTIPLY_EXT"
                            },
                            {
                                "@offset": "13",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_SCREEN_EXT"
                            },
                            {
                                "@offset": "14",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_OVERLAY_EXT"
                            },
                            {
                                "@offset": "15",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_DARKEN_EXT"
                            },
                            {
                                "@offset": "16",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_LIGHTEN_EXT"
                            },
                            {
                                "@offset": "17",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_COLORDODGE_EXT"
                            },
                            {
                                "@offset": "18",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_COLORBURN_EXT"
                            },
                            {
                                "@offset": "19",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_HARDLIGHT_EXT"
                            },
                            {
                                "@offset": "20",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_SOFTLIGHT_EXT"
                            },
                            {
                                "@offset": "21",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_DIFFERENCE_EXT"
                            },
                            {
                                "@offset": "22",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_EXCLUSION_EXT"
                            },
                            {
                                "@offset": "23",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_INVERT_EXT"
                            },
                            {
                                "@offset": "24",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_INVERT_RGB_EXT"
                            },
                            {
                                "@offset": "25",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_LINEARDODGE_EXT"
                            },
                            {
                                "@offset": "26",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_LINEARBURN_EXT"
                            },
                            {
                                "@offset": "27",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_VIVIDLIGHT_EXT"
                            },
                            {
                                "@offset": "28",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_LINEARLIGHT_EXT"
                            },
                            {
                                "@offset": "29",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_PINLIGHT_EXT"
                            },
                            {
                                "@offset": "30",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_HARDMIX_EXT"
                            },
                            {
                                "@offset": "31",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_HSL_HUE_EXT"
                            },
                            {
                                "@offset": "32",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_HSL_SATURATION_EXT"
                            },
                            {
                                "@offset": "33",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_HSL_COLOR_EXT"
                            },
                            {
                                "@offset": "34",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_HSL_LUMINOSITY_EXT"
                            },
                            {
                                "@offset": "35",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_PLUS_EXT"
                            },
                            {
                                "@offset": "36",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_PLUS_CLAMPED_EXT"
                            },
                            {
                                "@offset": "37",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT"
                            },
                            {
                                "@offset": "38",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_PLUS_DARKER_EXT"
                            },
                            {
                                "@offset": "39",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_MINUS_EXT"
                            },
                            {
                                "@offset": "40",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_MINUS_CLAMPED_EXT"
                            },
                            {
                                "@offset": "41",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_CONTRAST_EXT"
                            },
                            {
                                "@offset": "42",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_INVERT_OVG_EXT"
                            },
                            {
                                "@offset": "43",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_RED_EXT"
                            },
                            {
                                "@offset": "44",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_GREEN_EXT"
                            },
                            {
                                "@offset": "45",
                                "@extends": "VkBlendOp",
                                "@name": "VK_BLEND_OP_BLUE_EXT"
                            },
                            {
                                "@bitpos": "19",
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT"
                            },
                            {
                                "@name": "VkPipelineColorBlendAdvancedStateCreateInfoEXT"
                            },
                            {
                                "@name": "VkBlendOverlapEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_fragment_coverage_to_color",
                    "@number": "150",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_FRAGMENT_COVERAGE_TO_COLOR_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_fragment_coverage_to_color\"",
                                "@name": "VK_NV_FRAGMENT_COVERAGE_TO_COLOR_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPipelineCoverageToColorStateCreateFlagsNV"
                            },
                            {
                                "@name": "VkPipelineCoverageToColorStateCreateInfoNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_acceleration_structure",
                    "@number": "151",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@requires": "VK_EXT_descriptor_indexing,VK_KHR_buffer_device_address,VK_KHR_deferred_host_operations",
                    "@author": "KHR",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "@sortorder": "1",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "13",
                                    "@name": "VK_KHR_ACCELERATION_STRUCTURE_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_acceleration_structure\"",
                                    "@name": "VK_KHR_ACCELERATION_STRUCTURE_EXTENSION_NAME"
                                },
                                {
                                    "@offset": "7",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR"
                                },
                                {
                                    "@offset": "2",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR"
                                },
                                {
                                    "@offset": "3",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR"
                                },
                                {
                                    "@offset": "4",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR"
                                },
                                {
                                    "@offset": "5",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR"
                                },
                                {
                                    "@offset": "6",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR"
                                },
                                {
                                    "@offset": "9",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR"
                                },
                                {
                                    "@offset": "10",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR"
                                },
                                {
                                    "@offset": "11",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR"
                                },
                                {
                                    "@offset": "12",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR"
                                },
                                {
                                    "@offset": "13",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR"
                                },
                                {
                                    "@offset": "14",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR"
                                },
                                {
                                    "@offset": "17",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR"
                                },
                                {
                                    "@offset": "20",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR"
                                },
                                {
                                    "@bitpos": "25",
                                    "@extends": "VkPipelineStageFlagBits",
                                    "@name": "VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkDescriptorType",
                                    "@name": "VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR"
                                },
                                {
                                    "@bitpos": "21",
                                    "@extends": "VkAccessFlagBits",
                                    "@name": "VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR"
                                },
                                {
                                    "@bitpos": "22",
                                    "@extends": "VkAccessFlagBits",
                                    "@name": "VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkQueryType",
                                    "@name": "VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR"
                                },
                                {
                                    "@offset": "1",
                                    "@extends": "VkQueryType",
                                    "@name": "VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkObjectType",
                                    "@name": "VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkDebugReportObjectTypeEXT",
                                    "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkIndexType",
                                    "@extnumber": "166",
                                    "@name": "VK_INDEX_TYPE_NONE_KHR"
                                },
                                {
                                    "@bitpos": "29",
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR"
                                },
                                {
                                    "@bitpos": "19",
                                    "@extends": "VkBufferUsageFlagBits",
                                    "@name": "VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR"
                                },
                                {
                                    "@bitpos": "20",
                                    "@extends": "VkBufferUsageFlagBits",
                                    "@name": "VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkAccelerationStructureTypeKHR"
                                },
                                {
                                    "@name": "VkDeviceOrHostAddressKHR"
                                },
                                {
                                    "@name": "VkDeviceOrHostAddressConstKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureBuildRangeInfoKHR"
                                },
                                {
                                    "@name": "VkAabbPositionsKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureGeometryTrianglesDataKHR"
                                },
                                {
                                    "@name": "VkTransformMatrixKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureBuildGeometryInfoKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureBuildTypeKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureGeometryAabbsDataKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureInstanceKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureGeometryInstancesDataKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureGeometryDataKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureGeometryKHR"
                                },
                                {
                                    "@name": "VkGeometryFlagsKHR"
                                },
                                {
                                    "@name": "VkGeometryInstanceFlagsKHR"
                                },
                                {
                                    "@name": "VkGeometryFlagBitsKHR"
                                },
                                {
                                    "@name": "VkGeometryInstanceFlagBitsKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureCreateInfoKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureKHR"
                                },
                                {
                                    "@name": "VkBuildAccelerationStructureFlagBitsKHR"
                                },
                                {
                                    "@name": "VkBuildAccelerationStructureFlagsKHR"
                                },
                                {
                                    "@name": "VkCopyAccelerationStructureModeKHR"
                                },
                                {
                                    "@name": "VkGeometryTypeKHR"
                                },
                                {
                                    "@name": "VkWriteDescriptorSetAccelerationStructureKHR"
                                },
                                {
                                    "@name": "VkPhysicalDeviceAccelerationStructureFeaturesKHR"
                                },
                                {
                                    "@name": "VkPhysicalDeviceAccelerationStructurePropertiesKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureDeviceAddressInfoKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureVersionInfoKHR"
                                },
                                {
                                    "@name": "VkCopyAccelerationStructureToMemoryInfoKHR"
                                },
                                {
                                    "@name": "VkCopyMemoryToAccelerationStructureInfoKHR"
                                },
                                {
                                    "@name": "VkCopyAccelerationStructureInfoKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureCompatibilityKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureCreateFlagBitsKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureCreateFlagsKHR"
                                },
                                {
                                    "@name": "VkBuildAccelerationStructureModeKHR"
                                },
                                {
                                    "@name": "VkAccelerationStructureBuildSizesInfoKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkCreateAccelerationStructureKHR"
                                },
                                {
                                    "@name": "vkDestroyAccelerationStructureKHR"
                                },
                                {
                                    "@name": "vkCmdBuildAccelerationStructuresKHR"
                                },
                                {
                                    "@name": "vkCmdBuildAccelerationStructuresIndirectKHR"
                                },
                                {
                                    "@name": "vkBuildAccelerationStructuresKHR"
                                },
                                {
                                    "@name": "vkCopyAccelerationStructureKHR"
                                },
                                {
                                    "@name": "vkCopyAccelerationStructureToMemoryKHR"
                                },
                                {
                                    "@name": "vkCopyMemoryToAccelerationStructureKHR"
                                },
                                {
                                    "@name": "vkWriteAccelerationStructuresPropertiesKHR"
                                },
                                {
                                    "@name": "vkCmdCopyAccelerationStructureKHR"
                                },
                                {
                                    "@name": "vkCmdCopyAccelerationStructureToMemoryKHR"
                                },
                                {
                                    "@name": "vkCmdCopyMemoryToAccelerationStructureKHR"
                                },
                                {
                                    "@name": "vkGetAccelerationStructureDeviceAddressKHR"
                                },
                                {
                                    "@name": "vkCmdWriteAccelerationStructuresPropertiesKHR"
                                },
                                {
                                    "@name": "vkGetDeviceAccelerationStructureCompatibilityKHR"
                                },
                                {
                                    "@name": "vkGetAccelerationStructureBuildSizesKHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_format_feature_flags2",
                            "enum": [
                                {
                                    "@bitpos": "29",
                                    "@extends": "VkFormatFeatureFlagBits2",
                                    "@name": "VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_KHR_ray_tracing_pipeline",
                    "@number": "348",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@requires": "VK_KHR_spirv_1_4,VK_KHR_acceleration_structure",
                    "@author": "KHR",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "@sortorder": "1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_RAY_TRACING_PIPELINE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_ray_tracing_pipeline\"",
                                "@name": "VK_KHR_RAY_TRACING_PIPELINE_EXTENSION_NAME"
                            },
                            {
                                "@name": "VK_SHADER_UNUSED_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR"
                            },
                            {
                                "@offset": "15",
                                "@extends": "VkStructureType",
                                "@extnumber": "151",
                                "@name": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR"
                            },
                            {
                                "@offset": "16",
                                "@extends": "VkStructureType",
                                "@extnumber": "151",
                                "@name": "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR"
                            },
                            {
                                "@offset": "18",
                                "@extends": "VkStructureType",
                                "@extnumber": "151",
                                "@name": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR"
                            },
                            {
                                "@bitpos": "8",
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_RAYGEN_BIT_KHR"
                            },
                            {
                                "@bitpos": "9",
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_ANY_HIT_BIT_KHR"
                            },
                            {
                                "@bitpos": "10",
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR"
                            },
                            {
                                "@bitpos": "11",
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_MISS_BIT_KHR"
                            },
                            {
                                "@bitpos": "12",
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_INTERSECTION_BIT_KHR"
                            },
                            {
                                "@bitpos": "13",
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_CALLABLE_BIT_KHR"
                            },
                            {
                                "@bitpos": "21",
                                "@extends": "VkPipelineStageFlagBits",
                                "@name": "VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR"
                            },
                            {
                                "@bitpos": "10",
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkPipelineBindPoint",
                                "@extnumber": "166",
                                "@name": "VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR"
                            },
                            {
                                "@bitpos": "14",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR"
                            },
                            {
                                "@bitpos": "15",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR"
                            },
                            {
                                "@bitpos": "16",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR"
                            },
                            {
                                "@bitpos": "17",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR"
                            },
                            {
                                "@bitpos": "12",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR"
                            },
                            {
                                "@bitpos": "13",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR"
                            },
                            {
                                "@bitpos": "19",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRayTracingShaderGroupCreateInfoKHR"
                            },
                            {
                                "@name": "VkRayTracingShaderGroupTypeKHR"
                            },
                            {
                                "@name": "VkRayTracingPipelineCreateInfoKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceRayTracingPipelineFeaturesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceRayTracingPipelinePropertiesKHR"
                            },
                            {
                                "@name": "VkStridedDeviceAddressRegionKHR"
                            },
                            {
                                "@name": "VkTraceRaysIndirectCommandKHR"
                            },
                            {
                                "@name": "VkRayTracingPipelineInterfaceCreateInfoKHR"
                            },
                            {
                                "@name": "VkShaderGroupShaderKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdTraceRaysKHR"
                            },
                            {
                                "@name": "vkCreateRayTracingPipelinesKHR"
                            },
                            {
                                "@name": "vkGetRayTracingShaderGroupHandlesKHR"
                            },
                            {
                                "@name": "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR"
                            },
                            {
                                "@name": "vkCmdTraceRaysIndirectKHR"
                            },
                            {
                                "@name": "vkGetRayTracingShaderGroupStackSizeKHR"
                            },
                            {
                                "@name": "vkCmdSetRayTracingPipelineStackSizeKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_ray_query",
                    "@number": "349",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@requires": "VK_KHR_spirv_1_4,VK_KHR_acceleration_structure",
                    "@author": "KHR",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "@sortorder": "1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_RAY_QUERY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_ray_query\"",
                                "@name": "VK_KHR_RAY_QUERY_EXTENSION_NAME"
                            },
                            {
                                "@offset": "13",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceRayQueryFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_NV_extension_152",
                    "@number": "152",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_152_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_152\"",
                                "@name": "VK_NV_EXTENSION_152_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_framebuffer_mixed_samples",
                    "@number": "153",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_FRAMEBUFFER_MIXED_SAMPLES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_framebuffer_mixed_samples\"",
                                "@name": "VK_NV_FRAMEBUFFER_MIXED_SAMPLES_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPipelineCoverageModulationStateCreateInfoNV"
                            },
                            {
                                "@name": "VkPipelineCoverageModulationStateCreateFlagsNV"
                            },
                            {
                                "@name": "VkCoverageModulationModeNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_fill_rectangle",
                    "@number": "154",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_FILL_RECTANGLE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_fill_rectangle\"",
                                "@name": "VK_NV_FILL_RECTANGLE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkPolygonMode",
                                "@name": "VK_POLYGON_MODE_FILL_RECTANGLE_NV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_shader_sm_builtins",
                    "@number": "155",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_SHADER_SM_BUILTINS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_shader_sm_builtins\"",
                                "@name": "VK_NV_SHADER_SM_BUILTINS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_post_depth_coverage",
                    "@number": "156",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_POST_DEPTH_COVERAGE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_post_depth_coverage\"",
                                "@name": "VK_EXT_POST_DEPTH_COVERAGE_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_sampler_ycbcr_conversion",
                    "@number": "157",
                    "@type": "device",
                    "@requires": "VK_KHR_maintenance1,VK_KHR_bind_memory2,VK_KHR_get_memory_requirements2,VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Andrew Garrard @fluppeteer",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "14",
                                    "@name": "VK_KHR_SAMPLER_YCBCR_CONVERSION_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_sampler_ycbcr_conversion\"",
                                    "@name": "VK_KHR_SAMPLER_YCBCR_CONVERSION_EXTENSION_NAME"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES"
                                },
                                {
                                    "@extends": "VkDebugReportObjectTypeEXT",
                                    "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT",
                                    "@alias": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT"
                                },
                                {
                                    "@extends": "VkObjectType",
                                    "@name": "VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR",
                                    "@alias": "VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G8B8G8R8_422_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G8B8G8R8_422_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_B8G8R8G8_422_UNORM_KHR",
                                    "@alias": "VK_FORMAT_B8G8R8G8_422_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_R10X6_UNORM_PACK16_KHR",
                                    "@alias": "VK_FORMAT_R10X6_UNORM_PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR",
                                    "@alias": "VK_FORMAT_R10X6G10X6_UNORM_2PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR",
                                    "@alias": "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR",
                                    "@alias": "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR",
                                    "@alias": "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR",
                                    "@alias": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR",
                                    "@alias": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR",
                                    "@alias": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR",
                                    "@alias": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR",
                                    "@alias": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_R12X4_UNORM_PACK16_KHR",
                                    "@alias": "VK_FORMAT_R12X4_UNORM_PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR",
                                    "@alias": "VK_FORMAT_R12X4G12X4_UNORM_2PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR",
                                    "@alias": "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR",
                                    "@alias": "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR",
                                    "@alias": "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR",
                                    "@alias": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR",
                                    "@alias": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR",
                                    "@alias": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR",
                                    "@alias": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR",
                                    "@alias": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G16B16G16R16_422_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G16B16G16R16_422_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_B16G16R16G16_422_UNORM_KHR",
                                    "@alias": "VK_FORMAT_B16G16R16G16_422_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM"
                                },
                                {
                                    "@extends": "VkFormat",
                                    "@name": "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR",
                                    "@alias": "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM"
                                },
                                {
                                    "@extends": "VkImageAspectFlagBits",
                                    "@name": "VK_IMAGE_ASPECT_PLANE_0_BIT_KHR",
                                    "@alias": "VK_IMAGE_ASPECT_PLANE_0_BIT"
                                },
                                {
                                    "@extends": "VkImageAspectFlagBits",
                                    "@name": "VK_IMAGE_ASPECT_PLANE_1_BIT_KHR",
                                    "@alias": "VK_IMAGE_ASPECT_PLANE_1_BIT"
                                },
                                {
                                    "@extends": "VkImageAspectFlagBits",
                                    "@name": "VK_IMAGE_ASPECT_PLANE_2_BIT_KHR",
                                    "@alias": "VK_IMAGE_ASPECT_PLANE_2_BIT"
                                },
                                {
                                    "@extends": "VkImageCreateFlagBits",
                                    "@name": "VK_IMAGE_CREATE_DISJOINT_BIT_KHR",
                                    "@alias": "VK_IMAGE_CREATE_DISJOINT_BIT"
                                },
                                {
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR",
                                    "@alias": "VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT"
                                },
                                {
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR",
                                    "@alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT"
                                },
                                {
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR",
                                    "@alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT"
                                },
                                {
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR",
                                    "@alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"
                                },
                                {
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR",
                                    "@alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"
                                },
                                {
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_DISJOINT_BIT_KHR",
                                    "@alias": "VK_FORMAT_FEATURE_DISJOINT_BIT"
                                },
                                {
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR",
                                    "@alias": "VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT"
                                },
                                {
                                    "@extends": "VkSamplerYcbcrModelConversion",
                                    "@name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR",
                                    "@alias": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY"
                                },
                                {
                                    "@extends": "VkSamplerYcbcrModelConversion",
                                    "@name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR",
                                    "@alias": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY"
                                },
                                {
                                    "@extends": "VkSamplerYcbcrModelConversion",
                                    "@name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR",
                                    "@alias": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709"
                                },
                                {
                                    "@extends": "VkSamplerYcbcrModelConversion",
                                    "@name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR",
                                    "@alias": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601"
                                },
                                {
                                    "@extends": "VkSamplerYcbcrModelConversion",
                                    "@name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR",
                                    "@alias": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020"
                                },
                                {
                                    "@extends": "VkSamplerYcbcrRange",
                                    "@name": "VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR",
                                    "@alias": "VK_SAMPLER_YCBCR_RANGE_ITU_FULL"
                                },
                                {
                                    "@extends": "VkSamplerYcbcrRange",
                                    "@name": "VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR",
                                    "@alias": "VK_SAMPLER_YCBCR_RANGE_ITU_NARROW"
                                },
                                {
                                    "@extends": "VkChromaLocation",
                                    "@name": "VK_CHROMA_LOCATION_COSITED_EVEN_KHR",
                                    "@alias": "VK_CHROMA_LOCATION_COSITED_EVEN"
                                },
                                {
                                    "@extends": "VkChromaLocation",
                                    "@name": "VK_CHROMA_LOCATION_MIDPOINT_KHR",
                                    "@alias": "VK_CHROMA_LOCATION_MIDPOINT"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkSamplerYcbcrConversionCreateInfoKHR"
                                },
                                {
                                    "@name": "VkSamplerYcbcrConversionInfoKHR"
                                },
                                {
                                    "@name": "VkBindImagePlaneMemoryInfoKHR"
                                },
                                {
                                    "@name": "VkImagePlaneMemoryRequirementsInfoKHR"
                                },
                                {
                                    "@name": "VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR"
                                },
                                {
                                    "@name": "VkSamplerYcbcrConversionImageFormatPropertiesKHR"
                                },
                                {
                                    "@name": "VkSamplerYcbcrConversionKHR"
                                },
                                {
                                    "@name": "VkSamplerYcbcrModelConversionKHR"
                                },
                                {
                                    "@name": "VkSamplerYcbcrRangeKHR"
                                },
                                {
                                    "@name": "VkChromaLocationKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkCreateSamplerYcbcrConversionKHR"
                                },
                                {
                                    "@name": "vkDestroySamplerYcbcrConversionKHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_EXT_debug_report",
                            "enum": [
                                {
                                    "@extends": "VkDebugReportObjectTypeEXT",
                                    "@offset": "0",
                                    "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_KHR_bind_memory2",
                    "@number": "158",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_BIND_MEMORY_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_bind_memory2\"",
                                "@name": "VK_KHR_BIND_MEMORY_2_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO"
                            },
                            {
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_ALIAS_BIT_KHR",
                                "@alias": "VK_IMAGE_CREATE_ALIAS_BIT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkBindBufferMemory2KHR"
                            },
                            {
                                "@name": "vkBindImageMemory2KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkBindBufferMemoryInfoKHR"
                            },
                            {
                                "@name": "VkBindImageMemoryInfoKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_image_drm_format_modifier",
                    "@number": "159",
                    "@type": "device",
                    "@requires": "VK_KHR_bind_memory2,VK_KHR_get_physical_device_properties2,VK_KHR_image_format_list,VK_KHR_sampler_ycbcr_conversion",
                    "@author": "EXT",
                    "@contact": "Chad Versace @chadversary",
                    "@supported": "vulkan",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "2",
                                    "@name": "VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_EXT_image_drm_format_modifier\"",
                                    "@name": "VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_EXTENSION_NAME"
                                },
                                {
                                    "@offset": "0",
                                    "@dir": "-",
                                    "@extends": "VkResult",
                                    "@name": "VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT"
                                },
                                {
                                    "@offset": "2",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT"
                                },
                                {
                                    "@offset": "3",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT"
                                },
                                {
                                    "@offset": "4",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT"
                                },
                                {
                                    "@offset": "5",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkImageTiling",
                                    "@name": "VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT"
                                },
                                {
                                    "@bitpos": "7",
                                    "@extends": "VkImageAspectFlagBits",
                                    "@name": "VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT"
                                },
                                {
                                    "@bitpos": "8",
                                    "@extends": "VkImageAspectFlagBits",
                                    "@name": "VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT"
                                },
                                {
                                    "@bitpos": "9",
                                    "@extends": "VkImageAspectFlagBits",
                                    "@name": "VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT"
                                },
                                {
                                    "@bitpos": "10",
                                    "@extends": "VkImageAspectFlagBits",
                                    "@name": "VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkDrmFormatModifierPropertiesListEXT"
                                },
                                {
                                    "@name": "VkDrmFormatModifierPropertiesEXT"
                                },
                                {
                                    "@name": "VkPhysicalDeviceImageDrmFormatModifierInfoEXT"
                                },
                                {
                                    "@name": "VkImageDrmFormatModifierListCreateInfoEXT"
                                },
                                {
                                    "@name": "VkImageDrmFormatModifierExplicitCreateInfoEXT"
                                },
                                {
                                    "@name": "VkImageDrmFormatModifierPropertiesEXT"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkGetImageDrmFormatModifierPropertiesEXT"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_format_feature_flags2",
                            "type": [
                                {
                                    "@name": "VkDrmFormatModifierPropertiesList2EXT"
                                },
                                {
                                    "@name": "VkDrmFormatModifierProperties2EXT"
                                }
                            ],
                            "enum": [
                                {
                                    "@offset": "6",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_EXT_extension_160",
                    "@number": "160",
                    "@author": "EXT",
                    "@contact": "Mark Young @marky-lunarg",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_160_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_160\"",
                                "@name": "VK_EXT_EXTENSION_160_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_validation_cache",
                    "@number": "161",
                    "@type": "device",
                    "@author": "GOOGLE",
                    "@contact": "Cort Stratton @cdwfs",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_VALIDATION_CACHE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_validation_cache\"",
                                "@name": "VK_EXT_VALIDATION_CACHE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_VALIDATION_CACHE_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkValidationCacheEXT"
                            },
                            {
                                "@name": "VkValidationCacheCreateInfoEXT"
                            },
                            {
                                "@name": "VkShaderModuleValidationCacheCreateInfoEXT"
                            },
                            {
                                "@name": "VkValidationCacheHeaderVersionEXT"
                            },
                            {
                                "@name": "VkValidationCacheCreateFlagsEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateValidationCacheEXT"
                            },
                            {
                                "@name": "vkDestroyValidationCacheEXT"
                            },
                            {
                                "@name": "vkMergeValidationCachesEXT"
                            },
                            {
                                "@name": "vkGetValidationCacheDataEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_descriptor_indexing",
                    "@number": "162",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_KHR_maintenance3",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_DESCRIPTOR_INDEXING_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_descriptor_indexing\"",
                                "@name": "VK_EXT_DESCRIPTOR_INDEXING_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT"
                            },
                            {
                                "@extends": "VkDescriptorBindingFlagBits",
                                "@name": "VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT",
                                "@alias": "VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT"
                            },
                            {
                                "@extends": "VkDescriptorBindingFlagBits",
                                "@name": "VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT",
                                "@alias": "VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT"
                            },
                            {
                                "@extends": "VkDescriptorBindingFlagBits",
                                "@name": "VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT",
                                "@alias": "VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT"
                            },
                            {
                                "@extends": "VkDescriptorBindingFlagBits",
                                "@name": "VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT",
                                "@alias": "VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT"
                            },
                            {
                                "@extends": "VkDescriptorPoolCreateFlagBits",
                                "@name": "VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT",
                                "@alias": "VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT"
                            },
                            {
                                "@extends": "VkDescriptorSetLayoutCreateFlagBits",
                                "@name": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT",
                                "@alias": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT"
                            },
                            {
                                "@extends": "VkResult",
                                "@name": "VK_ERROR_FRAGMENTATION_EXT",
                                "@alias": "VK_ERROR_FRAGMENTATION"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDescriptorSetLayoutBindingFlagsCreateInfoEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceDescriptorIndexingFeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceDescriptorIndexingPropertiesEXT"
                            },
                            {
                                "@name": "VkDescriptorSetVariableDescriptorCountAllocateInfoEXT"
                            },
                            {
                                "@name": "VkDescriptorSetVariableDescriptorCountLayoutSupportEXT"
                            },
                            {
                                "@name": "VkDescriptorBindingFlagBitsEXT"
                            },
                            {
                                "@name": "VkDescriptorBindingFlagsEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_shader_viewport_index_layer",
                    "@number": "163",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_shader_viewport_index_layer\"",
                                "@name": "VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_portability_subset",
                    "@number": "164",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Bill Hollings @billhollings",
                    "@platform": "provisional",
                    "@supported": "vulkan",
                    "@provisional": "true",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_PORTABILITY_SUBSET_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_portability_subset\"",
                                "@name": "VK_KHR_PORTABILITY_SUBSET_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDevicePortabilitySubsetFeaturesKHR"
                            },
                            {
                                "@name": "VkPhysicalDevicePortabilitySubsetPropertiesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_shading_rate_image",
                    "@number": "165",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Pat Brown @nvpbrown",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_NV_SHADING_RATE_IMAGE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_shading_rate_image\"",
                                "@name": "VK_NV_SHADING_RATE_IMAGE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV"
                            },
                            {
                                "@extends": "VkImageLayout",
                                "@name": "VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV",
                                "@alias": "VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV"
                            },
                            {
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV",
                                "@alias": "VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR"
                            },
                            {
                                "@extends": "VkImageUsageFlagBits",
                                "@name": "VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV",
                                "@alias": "VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"
                            },
                            {
                                "@extends": "VkPipelineStageFlagBits",
                                "@name": "VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV",
                                "@alias": "VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkShadingRatePaletteEntryNV"
                            },
                            {
                                "@name": "VkShadingRatePaletteNV"
                            },
                            {
                                "@name": "VkPipelineViewportShadingRateImageStateCreateInfoNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceShadingRateImageFeaturesNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceShadingRateImagePropertiesNV"
                            },
                            {
                                "@name": "VkCoarseSampleLocationNV"
                            },
                            {
                                "@name": "VkCoarseSampleOrderCustomNV"
                            },
                            {
                                "@name": "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV"
                            },
                            {
                                "@name": "VkCoarseSampleOrderTypeNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdBindShadingRateImageNV"
                            },
                            {
                                "@name": "vkCmdSetViewportShadingRatePaletteNV"
                            },
                            {
                                "@name": "vkCmdSetCoarseSampleOrderNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_ray_tracing",
                    "@number": "166",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_KHR_get_memory_requirements2",
                    "@author": "NV",
                    "@contact": "Eric Werness @ewerness-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_NV_RAY_TRACING_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_ray_tracing\"",
                                "@name": "VK_NV_RAY_TRACING_EXTENSION_NAME"
                            },
                            {
                                "@name": "VK_SHADER_UNUSED_NV"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_GEOMETRY_NV"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV"
                            },
                            {
                                "@offset": "8",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV"
                            },
                            {
                                "@offset": "9",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV"
                            },
                            {
                                "@offset": "11",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "12",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV"
                            },
                            {
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_RAYGEN_BIT_NV",
                                "@alias": "VK_SHADER_STAGE_RAYGEN_BIT_KHR"
                            },
                            {
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_ANY_HIT_BIT_NV",
                                "@alias": "VK_SHADER_STAGE_ANY_HIT_BIT_KHR"
                            },
                            {
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV",
                                "@alias": "VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR"
                            },
                            {
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_MISS_BIT_NV",
                                "@alias": "VK_SHADER_STAGE_MISS_BIT_KHR"
                            },
                            {
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_INTERSECTION_BIT_NV",
                                "@alias": "VK_SHADER_STAGE_INTERSECTION_BIT_KHR"
                            },
                            {
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_CALLABLE_BIT_NV",
                                "@alias": "VK_SHADER_STAGE_CALLABLE_BIT_KHR"
                            },
                            {
                                "@extends": "VkPipelineStageFlagBits",
                                "@name": "VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV",
                                "@alias": "VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR"
                            },
                            {
                                "@extends": "VkPipelineStageFlagBits",
                                "@name": "VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV",
                                "@alias": "VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR"
                            },
                            {
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_RAY_TRACING_BIT_NV",
                                "@alias": "VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR"
                            },
                            {
                                "@extends": "VkPipelineBindPoint",
                                "@name": "VK_PIPELINE_BIND_POINT_RAY_TRACING_NV",
                                "@alias": "VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDescriptorType",
                                "@name": "VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV"
                            },
                            {
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV",
                                "@alias": "VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR"
                            },
                            {
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV",
                                "@alias": "VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkQueryType",
                                "@name": "VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV"
                            },
                            {
                                "@bitpos": "5",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDebugReportObjectTypeEXT",
                                "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT"
                            },
                            {
                                "@extends": "VkIndexType",
                                "@name": "VK_INDEX_TYPE_NONE_NV",
                                "@alias": "VK_INDEX_TYPE_NONE_KHR"
                            },
                            {
                                "@extends": "VkRayTracingShaderGroupTypeKHR",
                                "@name": "VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV",
                                "@alias": "VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR"
                            },
                            {
                                "@extends": "VkRayTracingShaderGroupTypeKHR",
                                "@name": "VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV",
                                "@alias": "VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR"
                            },
                            {
                                "@extends": "VkRayTracingShaderGroupTypeKHR",
                                "@name": "VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV",
                                "@alias": "VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR"
                            },
                            {
                                "@extends": "VkGeometryTypeKHR",
                                "@name": "VK_GEOMETRY_TYPE_TRIANGLES_NV",
                                "@alias": "VK_GEOMETRY_TYPE_TRIANGLES_KHR"
                            },
                            {
                                "@extends": "VkGeometryTypeKHR",
                                "@name": "VK_GEOMETRY_TYPE_AABBS_NV",
                                "@alias": "VK_GEOMETRY_TYPE_AABBS_KHR"
                            },
                            {
                                "@extends": "VkAccelerationStructureTypeKHR",
                                "@name": "VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV",
                                "@alias": "VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR"
                            },
                            {
                                "@extends": "VkAccelerationStructureTypeKHR",
                                "@name": "VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV",
                                "@alias": "VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR"
                            },
                            {
                                "@extends": "VkGeometryFlagBitsKHR",
                                "@name": "VK_GEOMETRY_OPAQUE_BIT_NV",
                                "@alias": "VK_GEOMETRY_OPAQUE_BIT_KHR"
                            },
                            {
                                "@extends": "VkGeometryFlagBitsKHR",
                                "@name": "VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV",
                                "@alias": "VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR"
                            },
                            {
                                "@extends": "VkGeometryInstanceFlagBitsKHR",
                                "@name": "VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV",
                                "@alias": "VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR"
                            },
                            {
                                "@extends": "VkGeometryInstanceFlagBitsKHR",
                                "@name": "VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV",
                                "@alias": "VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR"
                            },
                            {
                                "@extends": "VkGeometryInstanceFlagBitsKHR",
                                "@name": "VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV",
                                "@alias": "VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR"
                            },
                            {
                                "@extends": "VkGeometryInstanceFlagBitsKHR",
                                "@name": "VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV",
                                "@alias": "VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR"
                            },
                            {
                                "@extends": "VkBuildAccelerationStructureFlagBitsKHR",
                                "@name": "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV",
                                "@alias": "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR"
                            },
                            {
                                "@extends": "VkBuildAccelerationStructureFlagBitsKHR",
                                "@name": "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV",
                                "@alias": "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR"
                            },
                            {
                                "@extends": "VkBuildAccelerationStructureFlagBitsKHR",
                                "@name": "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV",
                                "@alias": "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR"
                            },
                            {
                                "@extends": "VkBuildAccelerationStructureFlagBitsKHR",
                                "@name": "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV",
                                "@alias": "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR"
                            },
                            {
                                "@extends": "VkBuildAccelerationStructureFlagBitsKHR",
                                "@name": "VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV",
                                "@alias": "VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR"
                            },
                            {
                                "@extends": "VkCopyAccelerationStructureModeKHR",
                                "@name": "VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV",
                                "@alias": "VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR"
                            },
                            {
                                "@extends": "VkCopyAccelerationStructureModeKHR",
                                "@name": "VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV",
                                "@alias": "VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRayTracingShaderGroupCreateInfoNV"
                            },
                            {
                                "@name": "VkRayTracingShaderGroupTypeNV"
                            },
                            {
                                "@name": "VkRayTracingPipelineCreateInfoNV"
                            },
                            {
                                "@name": "VkGeometryTypeNV"
                            },
                            {
                                "@name": "VkAccelerationStructureTypeNV"
                            },
                            {
                                "@name": "VkGeometryTrianglesNV"
                            },
                            {
                                "@name": "VkGeometryAABBNV"
                            },
                            {
                                "@name": "VkGeometryDataNV"
                            },
                            {
                                "@name": "VkGeometryNV"
                            },
                            {
                                "@name": "VkGeometryFlagsNV"
                            },
                            {
                                "@name": "VkGeometryFlagBitsNV"
                            },
                            {
                                "@name": "VkGeometryInstanceFlagsNV"
                            },
                            {
                                "@name": "VkGeometryInstanceFlagBitsNV"
                            },
                            {
                                "@name": "VkAccelerationStructureInfoNV"
                            },
                            {
                                "@name": "VkAccelerationStructureCreateInfoNV"
                            },
                            {
                                "@name": "VkAccelerationStructureNV"
                            },
                            {
                                "@name": "VkBuildAccelerationStructureFlagBitsNV"
                            },
                            {
                                "@name": "VkBuildAccelerationStructureFlagsNV"
                            },
                            {
                                "@name": "VkCopyAccelerationStructureModeNV"
                            },
                            {
                                "@name": "VkBindAccelerationStructureMemoryInfoNV"
                            },
                            {
                                "@name": "VkWriteDescriptorSetAccelerationStructureNV"
                            },
                            {
                                "@name": "VkAccelerationStructureMemoryRequirementsInfoNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceRayTracingPropertiesNV"
                            },
                            {
                                "@name": "VkMemoryRequirements2KHR"
                            },
                            {
                                "@name": "VkAccelerationStructureMemoryRequirementsTypeNV"
                            },
                            {
                                "@name": "VkTransformMatrixNV"
                            },
                            {
                                "@name": "VkAabbPositionsNV"
                            },
                            {
                                "@name": "VkAccelerationStructureInstanceNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateAccelerationStructureNV"
                            },
                            {
                                "@name": "vkDestroyAccelerationStructureNV"
                            },
                            {
                                "@name": "vkGetAccelerationStructureMemoryRequirementsNV"
                            },
                            {
                                "@name": "vkBindAccelerationStructureMemoryNV"
                            },
                            {
                                "@name": "vkCmdBuildAccelerationStructureNV"
                            },
                            {
                                "@name": "vkCmdCopyAccelerationStructureNV"
                            },
                            {
                                "@name": "vkCmdTraceRaysNV"
                            },
                            {
                                "@name": "vkCreateRayTracingPipelinesNV"
                            },
                            {
                                "@name": "vkGetRayTracingShaderGroupHandlesNV"
                            },
                            {
                                "@name": "vkGetAccelerationStructureHandleNV"
                            },
                            {
                                "@name": "vkCmdWriteAccelerationStructuresPropertiesNV"
                            },
                            {
                                "@name": "vkCompileDeferredNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_representative_fragment_test",
                    "@number": "167",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Kedarnath Thangudu @kthangudu",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_NV_REPRESENTATIVE_FRAGMENT_TEST_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_representative_fragment_test\"",
                                "@name": "VK_NV_REPRESENTATIVE_FRAGMENT_TEST_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV"
                            },
                            {
                                "@name": "VkPipelineRepresentativeFragmentTestStateCreateInfoNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_168",
                    "@number": "168",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_168_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_168\"",
                                "@name": "VK_NV_EXTENSION_168_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_maintenance3",
                    "@number": "169",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_1",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_MAINTENANCE_3_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_maintenance3\"",
                                "@name": "VK_KHR_MAINTENANCE_3_EXTENSION_NAME"
                            },
                            {
                                "@alias": "VK_KHR_MAINTENANCE_3_SPEC_VERSION",
                                "@name": "VK_KHR_MAINTENANCE3_SPEC_VERSION",
                                "@comment": "Backwards-compatible alias containing a typo"
                            },
                            {
                                "@alias": "VK_KHR_MAINTENANCE_3_EXTENSION_NAME",
                                "@name": "VK_KHR_MAINTENANCE3_EXTENSION_NAME",
                                "@comment": "Backwards-compatible alias containing a typo"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceMaintenance3PropertiesKHR"
                            },
                            {
                                "@name": "VkDescriptorSetLayoutSupportKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetDescriptorSetLayoutSupportKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_draw_indirect_count",
                    "@number": "170",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_DRAW_INDIRECT_COUNT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_draw_indirect_count\"",
                                "@name": "VK_KHR_DRAW_INDIRECT_COUNT_EXTENSION_NAME"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdDrawIndirectCountKHR"
                            },
                            {
                                "@name": "vkCmdDrawIndexedIndirectCountKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_filter_cubic",
                    "@number": "171",
                    "@type": "device",
                    "@author": "QCOM",
                    "@contact": "Bill Licea-Kane @wwlk",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_EXT_FILTER_CUBIC_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_filter_cubic\"",
                                "@name": "VK_EXT_FILTER_CUBIC_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkFilter",
                                "@name": "VK_FILTER_CUBIC_EXT",
                                "@alias": "VK_FILTER_CUBIC_IMG"
                            },
                            {
                                "@extends": "VkFormatFeatureFlagBits",
                                "@name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT",
                                "@alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceImageViewImageFormatInfoEXT"
                            },
                            {
                                "@name": "VkFilterCubicImageViewImageFormatPropertiesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_render_pass_shader_resolve",
                    "@number": "172",
                    "@type": "device",
                    "@author": "QCOM",
                    "@contact": "Bill Licea-Kane @wwlk",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "4",
                                "@name": "VK_QCOM_RENDER_PASS_SHADER_RESOLVE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_render_pass_shader_resolve\"",
                                "@name": "VK_QCOM_RENDER_PASS_SHADER_RESOLVE_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkSubpassDescriptionFlagBits",
                                "@name": "VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM"
                            },
                            {
                                "@bitpos": "3",
                                "@extends": "VkSubpassDescriptionFlagBits",
                                "@name": "VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_173",
                    "@number": "173",
                    "@author": "QCOM",
                    "@contact": "Bill Licea-Kane @wwlk",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_173_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_173\"",
                                "@name": "VK_QCOM_EXTENSION_173_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "18",
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_RESERVED_18_BIT_QCOM"
                            },
                            {
                                "@bitpos": "16",
                                "@extends": "VkImageUsageFlagBits",
                                "@name": "VK_IMAGE_USAGE_RESERVED_16_BIT_QCOM"
                            },
                            {
                                "@bitpos": "17",
                                "@extends": "VkImageUsageFlagBits",
                                "@name": "VK_IMAGE_USAGE_RESERVED_17_BIT_QCOM"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_174",
                    "@number": "174",
                    "@author": "QCOM",
                    "@contact": "Bill Licea-Kane @wwlk",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_174_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_174\"",
                                "@name": "VK_QCOM_EXTENSION_174_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_global_priority",
                    "@number": "175",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Andres Rodriguez @lostgoat",
                    "@supported": "vulkan",
                    "@promotedto": "VK_KHR_global_priority",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_GLOBAL_PRIORITY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_global_priority\"",
                                "@name": "VK_EXT_GLOBAL_PRIORITY_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@alias": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT"
                            },
                            {
                                "@extends": "VkResult",
                                "@alias": "VK_ERROR_NOT_PERMITTED_KHR",
                                "@name": "VK_ERROR_NOT_PERMITTED_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDeviceQueueGlobalPriorityCreateInfoEXT"
                            },
                            {
                                "@name": "VkQueueGlobalPriorityEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_shader_subgroup_extended_types",
                    "@number": "176",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@author": "KHR",
                    "@contact": "Neil Henning @sheredom",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shader_subgroup_extended_types\"",
                                "@name": "VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_extension_177",
                    "@number": "177",
                    "@author": "EXT",
                    "@contact": "Neil Henning @sheredom",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_177_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_177\"",
                                "@name": "VK_EXT_EXTENSION_177_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_8bit_storage",
                    "@number": "178",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_KHR_storage_buffer_storage_class",
                    "@author": "KHR",
                    "@contact": "Alexander Galazin @alegal-arm",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_8BIT_STORAGE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_8bit_storage\"",
                                "@name": "VK_KHR_8BIT_STORAGE_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDevice8BitStorageFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_external_memory_host",
                    "@number": "179",
                    "@type": "device",
                    "@author": "EXT",
                    "@requires": "VK_KHR_external_memory",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_EXTERNAL_MEMORY_HOST_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_external_memory_host\"",
                                "@name": "VK_EXT_EXTERNAL_MEMORY_HOST_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT"
                            },
                            {
                                "@bitpos": "7",
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT"
                            },
                            {
                                "@bitpos": "8",
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImportMemoryHostPointerInfoEXT"
                            },
                            {
                                "@name": "VkMemoryHostPointerPropertiesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceExternalMemoryHostPropertiesEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetMemoryHostPointerPropertiesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_buffer_marker",
                    "@number": "180",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@specialuse": "devtools",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_BUFFER_MARKER_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_buffer_marker\"",
                                "@name": "VK_AMD_BUFFER_MARKER_EXTENSION_NAME"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdWriteBufferMarkerAMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_shader_atomic_int64",
                    "@number": "181",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Aaron Hagan @ahagan",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SHADER_ATOMIC_INT64_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shader_atomic_int64\"",
                                "@name": "VK_KHR_SHADER_ATOMIC_INT64_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderAtomicInt64FeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_shader_clock",
                    "@number": "182",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Aaron Hagan @ahagan",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SHADER_CLOCK_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shader_clock\"",
                                "@name": "VK_KHR_SHADER_CLOCK_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderClockFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_AMD_extension_183",
                    "@number": "183",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_183_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_183\"",
                                "@name": "VK_AMD_EXTENSION_183_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_pipeline_compiler_control",
                    "@number": "184",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Matthaeus G. Chajdas @anteru",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_PIPELINE_COMPILER_CONTROL_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_pipeline_compiler_control\"",
                                "@name": "VK_AMD_PIPELINE_COMPILER_CONTROL_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPipelineCompilerControlFlagBitsAMD"
                            },
                            {
                                "@name": "VkPipelineCompilerControlFlagsAMD"
                            },
                            {
                                "@name": "VkPipelineCompilerControlCreateInfoAMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_calibrated_timestamps",
                    "@number": "185",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_CALIBRATED_TIMESTAMPS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_calibrated_timestamps\"",
                                "@name": "VK_EXT_CALIBRATED_TIMESTAMPS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkTimeDomainEXT"
                            },
                            {
                                "@name": "VkCalibratedTimestampInfoEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT"
                            },
                            {
                                "@name": "vkGetCalibratedTimestampsEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_shader_core_properties",
                    "@number": "186",
                    "@type": "device",
                    "@author": "AMD",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_AMD_SHADER_CORE_PROPERTIES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_shader_core_properties\"",
                                "@name": "VK_AMD_SHADER_CORE_PROPERTIES_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderCorePropertiesAMD"
                        }
                    }
                },
                {
                    "@name": "VK_AMD_extension_187",
                    "@number": "187",
                    "@author": "AMD",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_187_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_187\"",
                                "@name": "VK_AMD_EXTENSION_187_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_video_decode_h265",
                    "@number": "188",
                    "@type": "device",
                    "@requires": "VK_KHR_video_decode_queue",
                    "@author": "KHR",
                    "@contact": "peter.fang@amd.com",
                    "@provisional": "true",
                    "@platform": "provisional",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_VIDEO_DECODE_H265_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_video_decode_h265\"",
                                "@name": "VK_EXT_VIDEO_DECODE_H265_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_CREATE_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkVideoCodecOperationFlagBitsKHR",
                                "@name": "VK_VIDEO_CODEC_OPERATION_DECODE_H265_BIT_EXT",
                                "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkVideoDecodeH265CreateFlagsEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH265ProfileEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH265CapabilitiesEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH265SessionCreateInfoEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH265SessionParametersCreateInfoEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH265SessionParametersAddInfoEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH265PictureInfoEXT"
                            },
                            {
                                "@name": "VkVideoDecodeH265DpbSlotInfoEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_global_priority",
                    "@number": "189",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_GLOBAL_PRIORITY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_global_priority\"",
                                "@name": "VK_KHR_GLOBAL_PRIORITY_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "175",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@extnumber": "389",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@extnumber": "389",
                                "@name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR"
                            },
                            {
                                "@extends": "VkResult",
                                "@extnumber": "175",
                                "@offset": "1",
                                "@dir": "-",
                                "@name": "VK_ERROR_NOT_PERMITTED_KHR"
                            },
                            {
                                "@name": "VK_MAX_GLOBAL_PRIORITY_SIZE_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDeviceQueueGlobalPriorityCreateInfoKHR"
                            },
                            {
                                "@name": "VkQueueGlobalPriorityKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR"
                            },
                            {
                                "@name": "VkQueueFamilyGlobalPriorityPropertiesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_memory_overallocation_behavior",
                    "@number": "190",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_memory_overallocation_behavior\"",
                                "@name": "VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkMemoryOverallocationBehaviorAMD"
                            },
                            {
                                "@name": "VkDeviceMemoryOverallocationCreateInfoAMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_vertex_attribute_divisor",
                    "@number": "191",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Vikram Kushwaha @vkushwaha",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_vertex_attribute_divisor\"",
                                "@name": "VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT"
                            },
                            {
                                "@name": "VkVertexInputBindingDivisorDescriptionEXT"
                            },
                            {
                                "@name": "VkPipelineVertexInputDivisorStateCreateInfoEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GGP_frame_token",
                    "@number": "192",
                    "@type": "device",
                    "@requires": "VK_KHR_swapchain,VK_GGP_stream_descriptor_surface",
                    "@platform": "ggp",
                    "@author": "GGP",
                    "@contact": "Jean-Francois Roy @jfroy",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_GGP_FRAME_TOKEN_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GGP_frame_token\"",
                                "@name": "VK_GGP_FRAME_TOKEN_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP"
                            }
                        ],
                        "type": {
                            "@name": "VkPresentFrameTokenGGP"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_pipeline_creation_feedback",
                    "@number": "193",
                    "@type": "device",
                    "@author": "GOOGLE",
                    "@contact": "Jean-Francois Roy @jfroy",
                    "@specialuse": "devtools",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_PIPELINE_CREATION_FEEDBACK_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_pipeline_creation_feedback\"",
                                "@name": "VK_EXT_PIPELINE_CREATION_FEEDBACK_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPipelineCreationFeedbackFlagBitsEXT"
                            },
                            {
                                "@name": "VkPipelineCreationFeedbackFlagsEXT"
                            },
                            {
                                "@name": "VkPipelineCreationFeedbackCreateInfoEXT"
                            },
                            {
                                "@name": "VkPipelineCreationFeedbackEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GOOGLE_extension_194",
                    "@number": "194",
                    "@author": "GOOGLE",
                    "@contact": "Jean-Francois Roy @jfroy",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GOOGLE_EXTENSION_194_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_extension_194\"",
                                "@name": "VK_GOOGLE_EXTENSION_194_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GOOGLE_extension_195",
                    "@number": "195",
                    "@author": "GOOGLE",
                    "@contact": "Jean-Francois Roy @jfroy",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GOOGLE_EXTENSION_195_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_extension_195\"",
                                "@name": "VK_GOOGLE_EXTENSION_195_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GOOGLE_extension_196",
                    "@number": "196",
                    "@author": "GOOGLE",
                    "@contact": "Jean-Francois Roy @jfroy",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GOOGLE_EXTENSION_196_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_extension_196\"",
                                "@name": "VK_GOOGLE_EXTENSION_196_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkPipelineCacheCreateFlagBits",
                                "@name": "VK_PIPELINE_CACHE_CREATE_RESERVED_1_BIT_EXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_driver_properties",
                    "@number": "197",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_DRIVER_PROPERTIES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_driver_properties\"",
                                "@name": "VK_KHR_DRIVER_PROPERTIES_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES"
                            },
                            {
                                "@name": "VK_MAX_DRIVER_NAME_SIZE_KHR"
                            },
                            {
                                "@name": "VK_MAX_DRIVER_INFO_SIZE_KHR"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_AMD_PROPRIETARY_KHR",
                                "@alias": "VK_DRIVER_ID_AMD_PROPRIETARY"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR",
                                "@alias": "VK_DRIVER_ID_AMD_OPEN_SOURCE"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_MESA_RADV_KHR",
                                "@alias": "VK_DRIVER_ID_MESA_RADV"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR",
                                "@alias": "VK_DRIVER_ID_NVIDIA_PROPRIETARY"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR",
                                "@alias": "VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR",
                                "@alias": "VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR",
                                "@alias": "VK_DRIVER_ID_IMAGINATION_PROPRIETARY"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR",
                                "@alias": "VK_DRIVER_ID_QUALCOMM_PROPRIETARY"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_ARM_PROPRIETARY_KHR",
                                "@alias": "VK_DRIVER_ID_ARM_PROPRIETARY"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR",
                                "@alias": "VK_DRIVER_ID_GOOGLE_SWIFTSHADER"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_GGP_PROPRIETARY_KHR",
                                "@alias": "VK_DRIVER_ID_GGP_PROPRIETARY"
                            },
                            {
                                "@extends": "VkDriverId",
                                "@name": "VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR",
                                "@alias": "VK_DRIVER_ID_BROADCOM_PROPRIETARY"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDriverIdKHR"
                            },
                            {
                                "@name": "VkConformanceVersionKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceDriverPropertiesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_shader_float_controls",
                    "@number": "198",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Alexander Galazin @alegal-arm",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "4",
                                "@name": "VK_KHR_SHADER_FLOAT_CONTROLS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shader_float_controls\"",
                                "@name": "VK_KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES"
                            },
                            {
                                "@extends": "VkShaderFloatControlsIndependence",
                                "@name": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR",
                                "@alias": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY"
                            },
                            {
                                "@extends": "VkShaderFloatControlsIndependence",
                                "@name": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR",
                                "@alias": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL"
                            },
                            {
                                "@extends": "VkShaderFloatControlsIndependence",
                                "@name": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR",
                                "@alias": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceFloatControlsPropertiesKHR"
                            },
                            {
                                "@name": "VkShaderFloatControlsIndependenceKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_shader_subgroup_partitioned",
                    "@number": "199",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_SHADER_SUBGROUP_PARTITIONED_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_shader_subgroup_partitioned\"",
                                "@name": "VK_NV_SHADER_SUBGROUP_PARTITIONED_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "8",
                                "@extends": "VkSubgroupFeatureFlagBits",
                                "@name": "VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_depth_stencil_resolve",
                    "@number": "200",
                    "@type": "device",
                    "@requires": "VK_KHR_create_renderpass2",
                    "@author": "KHR",
                    "@contact": "Jan-Harald Fredriksen @janharald",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_DEPTH_STENCIL_RESOLVE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_depth_stencil_resolve\"",
                                "@name": "VK_KHR_DEPTH_STENCIL_RESOLVE_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE"
                            },
                            {
                                "@extends": "VkResolveModeFlagBits",
                                "@name": "VK_RESOLVE_MODE_NONE_KHR",
                                "@alias": "VK_RESOLVE_MODE_NONE"
                            },
                            {
                                "@extends": "VkResolveModeFlagBits",
                                "@name": "VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR",
                                "@alias": "VK_RESOLVE_MODE_SAMPLE_ZERO_BIT"
                            },
                            {
                                "@extends": "VkResolveModeFlagBits",
                                "@name": "VK_RESOLVE_MODE_AVERAGE_BIT_KHR",
                                "@alias": "VK_RESOLVE_MODE_AVERAGE_BIT"
                            },
                            {
                                "@extends": "VkResolveModeFlagBits",
                                "@name": "VK_RESOLVE_MODE_MIN_BIT_KHR",
                                "@alias": "VK_RESOLVE_MODE_MIN_BIT"
                            },
                            {
                                "@extends": "VkResolveModeFlagBits",
                                "@name": "VK_RESOLVE_MODE_MAX_BIT_KHR",
                                "@alias": "VK_RESOLVE_MODE_MAX_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSubpassDescriptionDepthStencilResolveKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceDepthStencilResolvePropertiesKHR"
                            },
                            {
                                "@name": "VkResolveModeFlagBitsKHR"
                            },
                            {
                                "@name": "VkResolveModeFlagsKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_swapchain_mutable_format",
                    "@number": "201",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_swapchain,VK_KHR_maintenance2,VK_KHR_image_format_list",
                    "@contact": "Daniel Rakos @drakos-arm",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_swapchain_mutable_format\"",
                                "@name": "VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkSwapchainCreateFlagBitsKHR",
                                "@name": "VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_compute_shader_derivatives",
                    "@number": "202",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Pat Brown @nvpbrown",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_COMPUTE_SHADER_DERIVATIVES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_compute_shader_derivatives\"",
                                "@name": "VK_NV_COMPUTE_SHADER_DERIVATIVES_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV"
                        }
                    }
                },
                {
                    "@name": "VK_NV_mesh_shader",
                    "@number": "203",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Christoph Kubisch @pixeljetstream",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_MESH_SHADER_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_mesh_shader\"",
                                "@name": "VK_NV_MESH_SHADER_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV"
                            },
                            {
                                "@bitpos": "6",
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_TASK_BIT_NV"
                            },
                            {
                                "@bitpos": "7",
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_MESH_BIT_NV"
                            },
                            {
                                "@bitpos": "19",
                                "@extends": "VkPipelineStageFlagBits",
                                "@name": "VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV"
                            },
                            {
                                "@bitpos": "20",
                                "@extends": "VkPipelineStageFlagBits",
                                "@name": "VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdDrawMeshTasksNV"
                            },
                            {
                                "@name": "vkCmdDrawMeshTasksIndirectNV"
                            },
                            {
                                "@name": "vkCmdDrawMeshTasksIndirectCountNV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceMeshShaderFeaturesNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceMeshShaderPropertiesNV"
                            },
                            {
                                "@name": "VkDrawMeshTasksIndirectCommandNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_fragment_shader_barycentric",
                    "@number": "204",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Pat Brown @nvpbrown",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_fragment_shader_barycentric\"",
                                "@name": "VK_NV_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV"
                        }
                    }
                },
                {
                    "@name": "VK_NV_shader_image_footprint",
                    "@number": "205",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Pat Brown @nvpbrown",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_NV_SHADER_IMAGE_FOOTPRINT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_shader_image_footprint\"",
                                "@name": "VK_NV_SHADER_IMAGE_FOOTPRINT_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderImageFootprintFeaturesNV"
                        }
                    }
                },
                {
                    "@name": "VK_NV_scissor_exclusive",
                    "@number": "206",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Pat Brown @nvpbrown",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_SCISSOR_EXCLUSIVE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_scissor_exclusive\"",
                                "@name": "VK_NV_SCISSOR_EXCLUSIVE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPipelineViewportExclusiveScissorStateCreateInfoNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceExclusiveScissorFeaturesNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetExclusiveScissorNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_device_diagnostic_checkpoints",
                    "@type": "device",
                    "@number": "207",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NVIDIA",
                    "@contact": "Nuno Subtil @nsubtil",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_device_diagnostic_checkpoints\"",
                                "@name": "VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkQueueFamilyCheckpointPropertiesNV"
                            },
                            {
                                "@name": "VkCheckpointDataNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetCheckpointNV"
                            },
                            {
                                "@name": "vkGetQueueCheckpointDataNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_timeline_semaphore",
                    "@number": "208",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Jason Ekstrand @jekstrand",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_KHR_TIMELINE_SEMAPHORE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_timeline_semaphore\"",
                                "@name": "VK_KHR_TIMELINE_SEMAPHORE_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO"
                            },
                            {
                                "@extends": "VkSemaphoreType",
                                "@name": "VK_SEMAPHORE_TYPE_BINARY_KHR",
                                "@alias": "VK_SEMAPHORE_TYPE_BINARY"
                            },
                            {
                                "@extends": "VkSemaphoreType",
                                "@name": "VK_SEMAPHORE_TYPE_TIMELINE_KHR",
                                "@alias": "VK_SEMAPHORE_TYPE_TIMELINE"
                            },
                            {
                                "@extends": "VkSemaphoreWaitFlagBits",
                                "@name": "VK_SEMAPHORE_WAIT_ANY_BIT_KHR",
                                "@alias": "VK_SEMAPHORE_WAIT_ANY_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSemaphoreTypeKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceTimelineSemaphoreFeaturesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceTimelineSemaphorePropertiesKHR"
                            },
                            {
                                "@name": "VkSemaphoreTypeCreateInfoKHR"
                            },
                            {
                                "@name": "VkTimelineSemaphoreSubmitInfoKHR"
                            },
                            {
                                "@name": "VkSemaphoreWaitFlagBitsKHR"
                            },
                            {
                                "@name": "VkSemaphoreWaitFlagsKHR"
                            },
                            {
                                "@name": "VkSemaphoreWaitInfoKHR"
                            },
                            {
                                "@name": "VkSemaphoreSignalInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetSemaphoreCounterValueKHR"
                            },
                            {
                                "@name": "vkWaitSemaphoresKHR"
                            },
                            {
                                "@name": "vkSignalSemaphoreKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_209",
                    "@number": "209",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Ian Elliott @ianelliott",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_209_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_209\"",
                                "@name": "VK_KHR_EXTENSION_209_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_INTEL_shader_integer_functions2",
                    "@number": "210",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "INTEL",
                    "@contact": "Ian Romanick @ianromanick",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_INTEL_shader_integer_functions2\"",
                                "@name": "VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL"
                        }
                    }
                },
                {
                    "@name": "VK_INTEL_performance_query",
                    "@number": "211",
                    "@type": "device",
                    "@author": "INTEL",
                    "@contact": "Lionel Landwerlin @llandwerlin",
                    "@specialuse": "devtools",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_INTEL_PERFORMANCE_QUERY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_INTEL_performance_query\"",
                                "@name": "VK_INTEL_PERFORMANCE_QUERY_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL",
                                "@alias": "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL",
                                "@comment": "Backwards-compatible alias containing a typo"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkQueryType",
                                "@name": "VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPerformanceConfigurationTypeINTEL"
                            },
                            {
                                "@name": "VkQueryPoolSamplingModeINTEL"
                            },
                            {
                                "@name": "VkPerformanceOverrideTypeINTEL"
                            },
                            {
                                "@name": "VkPerformanceParameterTypeINTEL"
                            },
                            {
                                "@name": "VkPerformanceValueTypeINTEL"
                            },
                            {
                                "@name": "VkPerformanceValueDataINTEL"
                            },
                            {
                                "@name": "VkPerformanceValueINTEL"
                            },
                            {
                                "@name": "VkInitializePerformanceApiInfoINTEL"
                            },
                            {
                                "@name": "VkQueryPoolCreateInfoINTEL"
                            },
                            {
                                "@name": "VkQueryPoolPerformanceQueryCreateInfoINTEL"
                            },
                            {
                                "@name": "VkPerformanceMarkerInfoINTEL"
                            },
                            {
                                "@name": "VkPerformanceStreamMarkerInfoINTEL"
                            },
                            {
                                "@name": "VkPerformanceOverrideInfoINTEL"
                            },
                            {
                                "@name": "VkPerformanceConfigurationAcquireInfoINTEL"
                            },
                            {
                                "@name": "VkPerformanceConfigurationINTEL"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkInitializePerformanceApiINTEL"
                            },
                            {
                                "@name": "vkUninitializePerformanceApiINTEL"
                            },
                            {
                                "@name": "vkCmdSetPerformanceMarkerINTEL"
                            },
                            {
                                "@name": "vkCmdSetPerformanceStreamMarkerINTEL"
                            },
                            {
                                "@name": "vkCmdSetPerformanceOverrideINTEL"
                            },
                            {
                                "@name": "vkAcquirePerformanceConfigurationINTEL"
                            },
                            {
                                "@name": "vkReleasePerformanceConfigurationINTEL"
                            },
                            {
                                "@name": "vkQueueSetPerformanceConfigurationINTEL"
                            },
                            {
                                "@name": "vkGetPerformanceParameterINTEL"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_vulkan_memory_model",
                    "@number": "212",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_KHR_VULKAN_MEMORY_MODEL_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_vulkan_memory_model\"",
                                "@name": "VK_KHR_VULKAN_MEMORY_MODEL_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceVulkanMemoryModelFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_pci_bus_info",
                    "@number": "213",
                    "@type": "device",
                    "@author": "EXT",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Matthaeus G. Chajdas @anteru",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_PCI_BUS_INFO_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_pci_bus_info\"",
                                "@name": "VK_EXT_PCI_BUS_INFO_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDevicePCIBusInfoPropertiesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_AMD_display_native_hdr",
                    "@number": "214",
                    "@type": "device",
                    "@author": "AMD",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_KHR_get_surface_capabilities2,VK_KHR_swapchain",
                    "@contact": "Matthaeus G. Chajdas @anteru",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_DISPLAY_NATIVE_HDR_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_display_native_hdr\"",
                                "@name": "VK_AMD_DISPLAY_NATIVE_HDR_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkColorSpaceKHR",
                                "@name": "VK_COLOR_SPACE_DISPLAY_NATIVE_AMD"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDisplayNativeHdrSurfaceCapabilitiesAMD"
                            },
                            {
                                "@name": "VkSwapchainDisplayNativeHdrCreateInfoAMD"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkSetLocalDimmingAMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_FUCHSIA_imagepipe_surface",
                    "@number": "215",
                    "@type": "instance",
                    "@author": "FUCHSIA",
                    "@requires": "VK_KHR_surface",
                    "@platform": "fuchsia",
                    "@contact": "Craig Stout @cdotstout",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_FUCHSIA_IMAGEPIPE_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_FUCHSIA_imagepipe_surface\"",
                                "@name": "VK_FUCHSIA_IMAGEPIPE_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImagePipeSurfaceCreateFlagsFUCHSIA"
                            },
                            {
                                "@name": "VkImagePipeSurfaceCreateInfoFUCHSIA"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateImagePipeSurfaceFUCHSIA"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_shader_terminate_invocation",
                    "@number": "216",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Jesse Hall @critsec",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SHADER_TERMINATE_INVOCATION_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shader_terminate_invocation\"",
                                "@name": "VK_KHR_SHADER_TERMINATE_INVOCATION_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_GOOGLE_extension_217",
                    "@number": "217",
                    "@author": "GOOGLE",
                    "@contact": "Jesse Hall @critsec",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GOOGLE_EXTENSION_217_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_extension_217\"",
                                "@name": "VK_GOOGLE_EXTENSION_217_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_metal_surface",
                    "@number": "218",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "metal",
                    "@supported": "vulkan",
                    "@author": "EXT",
                    "@contact": "Dzmitry Malyshau @kvark",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_METAL_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_metal_surface\"",
                                "@name": "VK_EXT_METAL_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkMetalSurfaceCreateFlagsEXT"
                            },
                            {
                                "@name": "VkMetalSurfaceCreateInfoEXT"
                            },
                            {
                                "@name": "CAMetalLayer"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateMetalSurfaceEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_fragment_density_map",
                    "@number": "219",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Matthew Netsch @mnetsch",
                    "@supported": "vulkan",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "2",
                                    "@name": "VK_EXT_FRAGMENT_DENSITY_MAP_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_EXT_fragment_density_map\"",
                                    "@name": "VK_EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT"
                                },
                                {
                                    "@offset": "1",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT"
                                },
                                {
                                    "@offset": "2",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT"
                                },
                                {
                                    "@bitpos": "14",
                                    "@extends": "VkImageCreateFlagBits",
                                    "@name": "VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkImageLayout",
                                    "@name": "VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT"
                                },
                                {
                                    "@bitpos": "24",
                                    "@extends": "VkAccessFlagBits",
                                    "@name": "VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT"
                                },
                                {
                                    "@bitpos": "24",
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT"
                                },
                                {
                                    "@bitpos": "9",
                                    "@extends": "VkImageUsageFlagBits",
                                    "@name": "VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT"
                                },
                                {
                                    "@bitpos": "0",
                                    "@extends": "VkImageViewCreateFlagBits",
                                    "@name": "VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT"
                                },
                                {
                                    "@bitpos": "23",
                                    "@extends": "VkPipelineStageFlagBits",
                                    "@name": "VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT"
                                },
                                {
                                    "@bitpos": "0",
                                    "@extends": "VkSamplerCreateFlagBits",
                                    "@name": "VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT"
                                },
                                {
                                    "@bitpos": "1",
                                    "@extends": "VkSamplerCreateFlagBits",
                                    "@name": "VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkPhysicalDeviceFragmentDensityMapFeaturesEXT"
                                },
                                {
                                    "@name": "VkPhysicalDeviceFragmentDensityMapPropertiesEXT"
                                },
                                {
                                    "@name": "VkRenderPassFragmentDensityMapCreateInfoEXT"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_format_feature_flags2",
                            "enum": [
                                {
                                    "@bitpos": "24",
                                    "@extends": "VkFormatFeatureFlagBits2",
                                    "@name": "VK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_EXT_extension_220",
                    "@number": "220",
                    "@author": "EXT",
                    "@contact": "Dzmitry Malyshau @kvark",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_220_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_220\"",
                                "@name": "VK_EXT_EXTENSION_220_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_221",
                    "@number": "221",
                    "@author": "KHR",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_221_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_221\"",
                                "@name": "VK_KHR_EXTENSION_221_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkRenderPassCreateFlagBits",
                                "@name": "VK_RENDER_PASS_CREATE_RESERVED_0_BIT_KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_scalar_block_layout",
                    "@number": "222",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SCALAR_BLOCK_LAYOUT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_scalar_block_layout\"",
                                "@name": "VK_EXT_SCALAR_BLOCK_LAYOUT_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceScalarBlockLayoutFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_extension_223",
                    "@number": "223",
                    "@author": "EXT",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_223_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_223\"",
                                "@name": "VK_EXT_EXTENSION_223_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GOOGLE_hlsl_functionality1",
                    "@number": "224",
                    "@type": "device",
                    "@author": "GOOGLE",
                    "@contact": "Hai Nguyen @chaoticbob",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_hlsl_functionality1\"",
                                "@name": "VK_GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME"
                            },
                            {
                                "@alias": "VK_GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION",
                                "@name": "VK_GOOGLE_HLSL_FUNCTIONALITY1_SPEC_VERSION",
                                "@comment": "Backwards-compatible alias containing a typo"
                            },
                            {
                                "@alias": "VK_GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME",
                                "@name": "VK_GOOGLE_HLSL_FUNCTIONALITY1_EXTENSION_NAME",
                                "@comment": "Backwards-compatible alias containing a typo"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GOOGLE_decorate_string",
                    "@number": "225",
                    "@type": "device",
                    "@author": "GOOGLE",
                    "@contact": "Hai Nguyen @chaoticbob",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_GOOGLE_DECORATE_STRING_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_decorate_string\"",
                                "@name": "VK_GOOGLE_DECORATE_STRING_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_subgroup_size_control",
                    "@number": "226",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@author": "EXT",
                    "@contact": "Neil Henning @sheredom",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_SUBGROUP_SIZE_CONTROL_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_subgroup_size_control\"",
                                "@name": "VK_EXT_SUBGROUP_SIZE_CONTROL_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES"
                            },
                            {
                                "@extends": "VkPipelineShaderStageCreateFlagBits",
                                "@name": "VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT",
                                "@alias": "VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT"
                            },
                            {
                                "@extends": "VkPipelineShaderStageCreateFlagBits",
                                "@name": "VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT",
                                "@alias": "VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceSubgroupSizeControlFeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceSubgroupSizeControlPropertiesEXT"
                            },
                            {
                                "@name": "VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_fragment_shading_rate",
                    "@number": "227",
                    "@type": "device",
                    "@requires": "VK_KHR_create_renderpass2,VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "2",
                                    "@name": "VK_KHR_FRAGMENT_SHADING_RATE_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_fragment_shading_rate\"",
                                    "@name": "VK_KHR_FRAGMENT_SHADING_RATE_EXTENSION_NAME"
                                },
                                {
                                    "@offset": "3",
                                    "@extends": "VkImageLayout",
                                    "@extnumber": "165",
                                    "@name": "VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkDynamicState",
                                    "@name": "VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR"
                                },
                                {
                                    "@offset": "1",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR"
                                },
                                {
                                    "@offset": "2",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR"
                                },
                                {
                                    "@offset": "3",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR"
                                },
                                {
                                    "@offset": "4",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR"
                                },
                                {
                                    "@bitpos": "23",
                                    "@extends": "VkAccessFlagBits",
                                    "@name": "VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR"
                                },
                                {
                                    "@bitpos": "8",
                                    "@extends": "VkImageUsageFlagBits",
                                    "@name": "VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"
                                },
                                {
                                    "@bitpos": "22",
                                    "@extends": "VkPipelineStageFlagBits",
                                    "@name": "VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"
                                },
                                {
                                    "@bitpos": "30",
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkFragmentShadingRateCombinerOpKHR"
                                },
                                {
                                    "@name": "VkFragmentShadingRateAttachmentInfoKHR"
                                },
                                {
                                    "@name": "VkPipelineFragmentShadingRateStateCreateInfoKHR"
                                },
                                {
                                    "@name": "VkPhysicalDeviceFragmentShadingRateFeaturesKHR"
                                },
                                {
                                    "@name": "VkPhysicalDeviceFragmentShadingRatePropertiesKHR"
                                },
                                {
                                    "@name": "VkPhysicalDeviceFragmentShadingRateKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkGetPhysicalDeviceFragmentShadingRatesKHR"
                                },
                                {
                                    "@name": "vkCmdSetFragmentShadingRateKHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_format_feature_flags2",
                            "enum": [
                                {
                                    "@bitpos": "30",
                                    "@extends": "VkFormatFeatureFlagBits2",
                                    "@name": "VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_AMD_shader_core_properties2",
                    "@number": "228",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Matthaeus G. Chajdas @anteru",
                    "@supported": "vulkan",
                    "@requires": "VK_AMD_shader_core_properties",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_SHADER_CORE_PROPERTIES_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_shader_core_properties2\"",
                                "@name": "VK_AMD_SHADER_CORE_PROPERTIES_2_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceShaderCoreProperties2AMD"
                            },
                            {
                                "@name": "VkShaderCorePropertiesFlagBitsAMD"
                            },
                            {
                                "@name": "VkShaderCorePropertiesFlagsAMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_229",
                    "@number": "229",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_229_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_229\"",
                                "@name": "VK_AMD_EXTENSION_229_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_device_coherent_memory",
                    "@number": "230",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_AMD_DEVICE_COHERENT_MEMORY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_device_coherent_memory\"",
                                "@name": "VK_AMD_DEVICE_COHERENT_MEMORY_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "6",
                                "@extends": "VkMemoryPropertyFlagBits",
                                "@name": "VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD"
                            },
                            {
                                "@bitpos": "7",
                                "@extends": "VkMemoryPropertyFlagBits",
                                "@name": "VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceCoherentMemoryFeaturesAMD"
                        }
                    }
                },
                {
                    "@name": "VK_AMD_extension_231",
                    "@number": "231",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_231_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_231\"",
                                "@name": "VK_AMD_EXTENSION_231_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_232",
                    "@number": "232",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_232_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_232\"",
                                "@name": "VK_AMD_EXTENSION_232_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_233",
                    "@number": "233",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_233_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_233\"",
                                "@name": "VK_AMD_EXTENSION_233_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_234",
                    "@number": "234",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_234_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_234\"",
                                "@name": "VK_AMD_EXTENSION_234_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_shader_image_atomic_int64",
                    "@number": "235",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SHADER_IMAGE_ATOMIC_INT64_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_shader_image_atomic_int64\"",
                                "@name": "VK_EXT_SHADER_IMAGE_ATOMIC_INT64_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_AMD_extension_236",
                    "@number": "236",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_236_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_236\"",
                                "@name": "VK_AMD_EXTENSION_236_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_spirv_1_4",
                    "@number": "237",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@requires": "VK_KHR_shader_float_controls",
                    "@author": "KHR",
                    "@contact": "Jesse Hall @critsec",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SPIRV_1_4_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_spirv_1_4\"",
                                "@name": "VK_KHR_SPIRV_1_4_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_memory_budget",
                    "@number": "238",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_MEMORY_BUDGET_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_memory_budget\"",
                                "@name": "VK_EXT_MEMORY_BUDGET_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceMemoryBudgetPropertiesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_memory_priority",
                    "@number": "239",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_MEMORY_PRIORITY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_memory_priority\"",
                                "@name": "VK_EXT_MEMORY_PRIORITY_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceMemoryPriorityFeaturesEXT"
                            },
                            {
                                "@name": "VkMemoryPriorityAllocateInfoEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_surface_protected_capabilities",
                    "@number": "240",
                    "@type": "instance",
                    "@requiresCore": "1.1",
                    "@requires": "VK_KHR_get_surface_capabilities2",
                    "@author": "KHR",
                    "@contact": "Sandeep Shinde @sashinde",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SURFACE_PROTECTED_CAPABILITIES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_surface_protected_capabilities\"",
                                "@name": "VK_KHR_SURFACE_PROTECTED_CAPABILITIES_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR"
                            }
                        ],
                        "type": {
                            "@name": "VkSurfaceProtectedCapabilitiesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_NV_dedicated_allocation_image_aliasing",
                    "@number": "241",
                    "@type": "device",
                    "@requires": "VK_KHR_dedicated_allocation",
                    "@author": "NVIDIA",
                    "@contact": "Nuno Subtil @nsubtil",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_dedicated_allocation_image_aliasing\"",
                                "@name": "VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_separate_depth_stencil_layouts",
                    "@number": "242",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_KHR_create_renderpass2",
                    "@author": "KHR",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_separate_depth_stencil_layouts\"",
                                "@name": "VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT"
                            },
                            {
                                "@extends": "VkImageLayout",
                                "@name": "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR",
                                "@alias": "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL"
                            },
                            {
                                "@extends": "VkImageLayout",
                                "@name": "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR",
                                "@alias": "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL"
                            },
                            {
                                "@extends": "VkImageLayout",
                                "@name": "VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR",
                                "@alias": "VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL"
                            },
                            {
                                "@extends": "VkImageLayout",
                                "@name": "VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR",
                                "@alias": "VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR"
                            },
                            {
                                "@name": "VkAttachmentReferenceStencilLayoutKHR"
                            },
                            {
                                "@name": "VkAttachmentDescriptionStencilLayoutKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_INTEL_extension_243",
                    "@number": "243",
                    "@author": "INTEL",
                    "@contact": "Slawek Grajewski @sgrajewski",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_INTEL_EXTENSION_243_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_INTEL_extension_243\"",
                                "@name": "VK_INTEL_EXTENSION_243_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_MESA_extension_244",
                    "@number": "244",
                    "@author": "MESA",
                    "@contact": "Andres Rodriguez @lostgoat",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_MESA_EXTENSION_244_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_MESA_extension_244\"",
                                "@name": "VK_MESA_EXTENSION_244_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_buffer_device_address",
                    "@number": "245",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@deprecatedby": "VK_KHR_buffer_device_address",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_BUFFER_DEVICE_ADDRESS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_buffer_device_address\"",
                                "@name": "VK_EXT_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT"
                            },
                            {
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT",
                                "@alias": "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT"
                            },
                            {
                                "@extends": "VkBufferCreateFlagBits",
                                "@name": "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT",
                                "@alias": "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT"
                            },
                            {
                                "@extends": "VkResult",
                                "@name": "VK_ERROR_INVALID_DEVICE_ADDRESS_EXT",
                                "@alias": "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceBufferAddressFeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT"
                            },
                            {
                                "@name": "VkBufferDeviceAddressInfoEXT"
                            },
                            {
                                "@name": "VkBufferDeviceAddressCreateInfoEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetBufferDeviceAddressEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_tooling_info",
                    "@number": "246",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "1",
                                    "@name": "VK_EXT_TOOLING_INFO_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_EXT_tooling_info\"",
                                    "@name": "VK_EXT_TOOLING_INFO_EXTENSION_NAME"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT",
                                    "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkToolPurposeFlagBitsEXT"
                                },
                                {
                                    "@name": "VkToolPurposeFlagsEXT"
                                },
                                {
                                    "@name": "VkPhysicalDeviceToolPropertiesEXT"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkGetPhysicalDeviceToolPropertiesEXT"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_EXT_debug_report",
                            "enum": [
                                {
                                    "@bitpos": "5",
                                    "@extends": "VkToolPurposeFlagBits",
                                    "@name": "VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_EXT_debug_marker",
                            "enum": [
                                {
                                    "@bitpos": "6",
                                    "@extends": "VkToolPurposeFlagBits",
                                    "@name": "VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_EXT_debug_utils",
                            "enum": [
                                {
                                    "@bitpos": "5",
                                    "@extends": "VkToolPurposeFlagBits",
                                    "@name": "VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT"
                                },
                                {
                                    "@bitpos": "6",
                                    "@extends": "VkToolPurposeFlagBits",
                                    "@name": "VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_EXT_separate_stencil_usage",
                    "@number": "247",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Daniel Rakos @drakos-amd",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SEPARATE_STENCIL_USAGE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_separate_stencil_usage\"",
                                "@name": "VK_EXT_SEPARATE_STENCIL_USAGE_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO"
                            }
                        ],
                        "type": {
                            "@name": "VkImageStencilUsageCreateInfoEXT"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_validation_features",
                    "@number": "248",
                    "@type": "instance",
                    "@author": "LUNARG",
                    "@contact": "Karl Schultz @karl-lunarg",
                    "@specialuse": "debugging",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "5",
                                "@name": "VK_EXT_VALIDATION_FEATURES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_validation_features\"",
                                "@name": "VK_EXT_VALIDATION_FEATURES_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkValidationFeaturesEXT"
                            },
                            {
                                "@name": "VkValidationFeatureEnableEXT"
                            },
                            {
                                "@name": "VkValidationFeatureDisableEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_present_wait",
                    "@number": "249",
                    "@type": "device",
                    "@requires": "VK_KHR_swapchain,VK_KHR_present_id",
                    "@author": "KHR",
                    "@contact": "Keith Packard @keithp",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_PRESENT_WAIT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_present_wait\"",
                                "@name": "VK_KHR_PRESENT_WAIT_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkWaitForPresentKHR"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDevicePresentWaitFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_NV_cooperative_matrix",
                    "@number": "250",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_COOPERATIVE_MATRIX_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_cooperative_matrix\"",
                                "@name": "VK_NV_COOPERATIVE_MATRIX_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkCooperativeMatrixPropertiesNV"
                            },
                            {
                                "@name": "VkScopeNV"
                            },
                            {
                                "@name": "VkComponentTypeNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceCooperativeMatrixFeaturesNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceCooperativeMatrixPropertiesNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_coverage_reduction_mode",
                    "@number": "251",
                    "@requires": "VK_NV_framebuffer_mixed_samples",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Kedarnath Thangudu @kthangudu",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_COVERAGE_REDUCTION_MODE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_coverage_reduction_mode\"",
                                "@name": "VK_NV_COVERAGE_REDUCTION_MODE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceCoverageReductionModeFeaturesNV"
                            },
                            {
                                "@name": "VkPipelineCoverageReductionStateCreateInfoNV"
                            },
                            {
                                "@name": "VkPipelineCoverageReductionStateCreateFlagsNV"
                            },
                            {
                                "@name": "VkCoverageReductionModeNV"
                            },
                            {
                                "@name": "VkFramebufferMixedSamplesCombinationNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_fragment_shader_interlock",
                    "@number": "252",
                    "@author": "EXT",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_FRAGMENT_SHADER_INTERLOCK_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_fragment_shader_interlock\"",
                                "@name": "VK_EXT_FRAGMENT_SHADER_INTERLOCK_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_ycbcr_image_arrays",
                    "@number": "253",
                    "@type": "device",
                    "@requires": "VK_KHR_sampler_ycbcr_conversion",
                    "@author": "EXT",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_YCBCR_IMAGE_ARRAYS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_ycbcr_image_arrays\"",
                                "@name": "VK_EXT_YCBCR_IMAGE_ARRAYS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_uniform_buffer_standard_layout",
                    "@number": "254",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Graeme Leese @gnl21",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_uniform_buffer_standard_layout\"",
                                "@name": "VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_provoking_vertex",
                    "@number": "255",
                    "@type": "device",
                    "@author": "EXT",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Jesse Hall @jessehall",
                    "@specialuse": "glemulation",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_PROVOKING_VERTEX_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_provoking_vertex\"",
                                "@name": "VK_EXT_PROVOKING_VERTEX_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceProvokingVertexFeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceProvokingVertexPropertiesEXT"
                            },
                            {
                                "@name": "VkPipelineRasterizationProvokingVertexStateCreateInfoEXT"
                            },
                            {
                                "@name": "VkProvokingVertexModeEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_full_screen_exclusive",
                    "@number": "256",
                    "@type": "device",
                    "@author": "EXT",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_KHR_surface,VK_KHR_get_surface_capabilities2,VK_KHR_swapchain",
                    "@platform": "win32",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "vulkan",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "4",
                                    "@name": "VK_EXT_FULL_SCREEN_EXCLUSIVE_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_EXT_full_screen_exclusive\"",
                                    "@name": "VK_EXT_FULL_SCREEN_EXCLUSIVE_EXTENSION_NAME"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT"
                                },
                                {
                                    "@offset": "2",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkResult",
                                    "@dir": "-",
                                    "@name": "VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkFullScreenExclusiveEXT"
                                },
                                {
                                    "@name": "VkSurfaceFullScreenExclusiveInfoEXT"
                                },
                                {
                                    "@name": "VkSurfaceCapabilitiesFullScreenExclusiveEXT"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkGetPhysicalDeviceSurfacePresentModes2EXT"
                                },
                                {
                                    "@name": "vkAcquireFullScreenExclusiveModeEXT"
                                },
                                {
                                    "@name": "vkReleaseFullScreenExclusiveModeEXT"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_win32_surface",
                            "enum": [
                                {
                                    "@offset": "1",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT"
                                }
                            ],
                            "type": {
                                "@name": "VkSurfaceFullScreenExclusiveWin32InfoEXT"
                            }
                        },
                        {
                            "@extension": "VK_KHR_device_group",
                            "command": [
                                {
                                    "@name": "vkGetDeviceGroupSurfacePresentModes2EXT"
                                }
                            ]
                        },
                        {
                            "@feature": "VK_VERSION_1_1",
                            "command": [
                                {
                                    "@name": "vkGetDeviceGroupSurfacePresentModes2EXT"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_EXT_headless_surface",
                    "@number": "257",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@author": "EXT",
                    "@contact": "Lisa Wu @chengtianww",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_HEADLESS_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_headless_surface\"",
                                "@name": "VK_EXT_HEADLESS_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkHeadlessSurfaceCreateFlagsEXT"
                            },
                            {
                                "@name": "VkHeadlessSurfaceCreateInfoEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateHeadlessSurfaceEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_buffer_device_address",
                    "@number": "258",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_BUFFER_DEVICE_ADDRESS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_buffer_device_address\"",
                                "@name": "VK_KHR_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO"
                            },
                            {
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR",
                                "@alias": "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT"
                            },
                            {
                                "@extends": "VkBufferCreateFlagBits",
                                "@name": "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR",
                                "@alias": "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT"
                            },
                            {
                                "@extends": "VkMemoryAllocateFlagBits",
                                "@name": "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR",
                                "@alias": "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT"
                            },
                            {
                                "@extends": "VkMemoryAllocateFlagBits",
                                "@name": "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR",
                                "@alias": "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT"
                            },
                            {
                                "@extends": "VkResult",
                                "@name": "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
                                "@alias": "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceBufferDeviceAddressFeaturesKHR"
                            },
                            {
                                "@name": "VkBufferDeviceAddressInfoKHR"
                            },
                            {
                                "@name": "VkBufferOpaqueCaptureAddressCreateInfoKHR"
                            },
                            {
                                "@name": "VkMemoryOpaqueCaptureAddressAllocateInfoKHR"
                            },
                            {
                                "@name": "VkDeviceMemoryOpaqueCaptureAddressInfoKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetBufferDeviceAddressKHR"
                            },
                            {
                                "@name": "vkGetBufferOpaqueCaptureAddressKHR"
                            },
                            {
                                "@name": "vkGetDeviceMemoryOpaqueCaptureAddressKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_259",
                    "@number": "259",
                    "@author": "EXT",
                    "@contact": "Jeff Leger @jackohound",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_259_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_259\"",
                                "@name": "VK_EXT_EXTENSION_259_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_line_rasterization",
                    "@number": "260",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@specialuse": "cadsupport",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_LINE_RASTERIZATION_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_line_rasterization\"",
                                "@name": "VK_EXT_LINE_RASTERIZATION_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_LINE_STIPPLE_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceLineRasterizationFeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceLineRasterizationPropertiesEXT"
                            },
                            {
                                "@name": "VkPipelineRasterizationLineStateCreateInfoEXT"
                            },
                            {
                                "@name": "VkLineRasterizationModeEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetLineStippleEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_shader_atomic_float",
                    "@number": "261",
                    "@type": "device",
                    "@author": "NV",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Vikram Kushwaha @vkushwaha-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SHADER_ATOMIC_FLOAT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_shader_atomic_float\"",
                                "@name": "VK_EXT_SHADER_ATOMIC_FLOAT_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_host_query_reset",
                    "@number": "262",
                    "@author": "EXT",
                    "@contact": "Bas Nieuwenhuizen @BNieuwenhuizen",
                    "@supported": "vulkan",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@promotedto": "VK_VERSION_1_2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_HOST_QUERY_RESET_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_host_query_reset\"",
                                "@name": "VK_EXT_HOST_QUERY_RESET_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceHostQueryResetFeaturesEXT"
                        },
                        "command": [
                            {
                                "@name": "vkResetQueryPoolEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GGP_extension_263",
                    "@number": "263",
                    "@author": "GGP",
                    "@contact": "Jean-Francois Roy @jfroy",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GGP_EXTENSION_263_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GGP_extension_263\"",
                                "@name": "VK_GGP_EXTENSION_263_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_BRCM_extension_264",
                    "@number": "264",
                    "@author": "BRCM",
                    "@contact": "Graeme Leese @gnl21",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_BRCM_EXTENSION_264_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_BRCM_extension_264\"",
                                "@name": "VK_BRCM_EXTENSION_264_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_BRCM_extension_265",
                    "@number": "265",
                    "@author": "BRCM",
                    "@contact": "Graeme Leese @gnl21",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_BRCM_EXTENSION_265_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_BRCM_extension_265\"",
                                "@name": "VK_BRCM_EXTENSION_265_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_index_type_uint8",
                    "@number": "266",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_INDEX_TYPE_UINT8_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_index_type_uint8\"",
                                "@name": "VK_EXT_INDEX_TYPE_UINT8_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkIndexType",
                                "@name": "VK_INDEX_TYPE_UINT8_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceIndexTypeUint8FeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_extension_267",
                    "@number": "267",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_267_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_267\"",
                                "@name": "VK_EXT_EXTENSION_267_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extended_dynamic_state",
                    "@number": "268",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_EXTENDED_DYNAMIC_STATE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extended_dynamic_state\"",
                                "@name": "VK_EXT_EXTENDED_DYNAMIC_STATE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT",
                                "@comment": "Not promoted to 1.3"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_CULL_MODE_EXT",
                                "@alias": "VK_DYNAMIC_STATE_CULL_MODE"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_FRONT_FACE_EXT",
                                "@alias": "VK_DYNAMIC_STATE_FRONT_FACE"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT",
                                "@alias": "VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT",
                                "@alias": "VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT",
                                "@alias": "VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT",
                                "@alias": "VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT",
                                "@alias": "VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT",
                                "@alias": "VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT",
                                "@alias": "VK_DYNAMIC_STATE_DEPTH_COMPARE_OP"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT",
                                "@alias": "VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT",
                                "@alias": "VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_STENCIL_OP_EXT",
                                "@alias": "VK_DYNAMIC_STATE_STENCIL_OP"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceExtendedDynamicStateFeaturesEXT",
                            "@comment": "Not promoted to 1.3"
                        },
                        "command": [
                            {
                                "@name": "vkCmdSetCullModeEXT"
                            },
                            {
                                "@name": "vkCmdSetFrontFaceEXT"
                            },
                            {
                                "@name": "vkCmdSetPrimitiveTopologyEXT"
                            },
                            {
                                "@name": "vkCmdSetViewportWithCountEXT"
                            },
                            {
                                "@name": "vkCmdSetScissorWithCountEXT"
                            },
                            {
                                "@name": "vkCmdBindVertexBuffers2EXT"
                            },
                            {
                                "@name": "vkCmdSetDepthTestEnableEXT"
                            },
                            {
                                "@name": "vkCmdSetDepthWriteEnableEXT"
                            },
                            {
                                "@name": "vkCmdSetDepthCompareOpEXT"
                            },
                            {
                                "@name": "vkCmdSetDepthBoundsTestEnableEXT"
                            },
                            {
                                "@name": "vkCmdSetStencilTestEnableEXT"
                            },
                            {
                                "@name": "vkCmdSetStencilOpEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_deferred_host_operations",
                    "@number": "269",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Josh Barczak @jbarczak",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "4",
                                "@name": "VK_KHR_DEFERRED_HOST_OPERATIONS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_deferred_host_operations\"",
                                "@name": "VK_KHR_DEFERRED_HOST_OPERATIONS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR"
                            },
                            {
                                "@extends": "VkResult",
                                "@offset": "0",
                                "@name": "VK_THREAD_IDLE_KHR"
                            },
                            {
                                "@extends": "VkResult",
                                "@offset": "1",
                                "@name": "VK_THREAD_DONE_KHR"
                            },
                            {
                                "@extends": "VkResult",
                                "@offset": "2",
                                "@name": "VK_OPERATION_DEFERRED_KHR"
                            },
                            {
                                "@extends": "VkResult",
                                "@offset": "3",
                                "@name": "VK_OPERATION_NOT_DEFERRED_KHR"
                            }
                        ],
                        "type": {
                            "@name": "VkDeferredOperationKHR"
                        },
                        "command": [
                            {
                                "@name": "vkCreateDeferredOperationKHR"
                            },
                            {
                                "@name": "vkDestroyDeferredOperationKHR"
                            },
                            {
                                "@name": "vkGetDeferredOperationMaxConcurrencyKHR"
                            },
                            {
                                "@name": "vkGetDeferredOperationResultKHR"
                            },
                            {
                                "@name": "vkDeferredOperationJoinKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_pipeline_executable_properties",
                    "@number": "270",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Jason Ekstrand @jekstrand",
                    "@specialuse": "devtools",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_pipeline_executable_properties\"",
                                "@name": "VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR"
                            },
                            {
                                "@bitpos": "6",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR"
                            },
                            {
                                "@bitpos": "7",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR"
                            },
                            {
                                "@name": "VkPipelineInfoKHR"
                            },
                            {
                                "@name": "VkPipelineExecutablePropertiesKHR"
                            },
                            {
                                "@name": "VkPipelineExecutableInfoKHR"
                            },
                            {
                                "@name": "VkPipelineExecutableStatisticFormatKHR"
                            },
                            {
                                "@name": "VkPipelineExecutableStatisticValueKHR"
                            },
                            {
                                "@name": "VkPipelineExecutableStatisticKHR"
                            },
                            {
                                "@name": "VkPipelineExecutableInternalRepresentationKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetPipelineExecutablePropertiesKHR"
                            },
                            {
                                "@name": "vkGetPipelineExecutableStatisticsKHR"
                            },
                            {
                                "@name": "vkGetPipelineExecutableInternalRepresentationsKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_INTEL_extension_271",
                    "@number": "271",
                    "@type": "device",
                    "@author": "INTEL",
                    "@contact": "Jason Ekstrand @jekstrand",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_INTEL_EXTENSION_271_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_INTEL_extension_271\"",
                                "@name": "VK_INTEL_EXTENSION_271_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_INTEL_extension_272",
                    "@number": "272",
                    "@type": "device",
                    "@author": "INTEL",
                    "@contact": "Jason Ekstrand @jekstrand",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_INTEL_EXTENSION_272_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_INTEL_extension_272\"",
                                "@name": "VK_INTEL_EXTENSION_272_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_INTEL_extension_273",
                    "@number": "273",
                    "@type": "device",
                    "@author": "INTEL",
                    "@contact": "Jason Ekstrand @jekstrand",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_INTEL_EXTENSION_273_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_INTEL_extension_273\"",
                                "@name": "VK_INTEL_EXTENSION_273_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_shader_atomic_float2",
                    "@number": "274",
                    "@type": "device",
                    "@requires": "VK_EXT_shader_atomic_float",
                    "@author": "EXT",
                    "@contact": "Jason Ekstrand @jekstrand",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SHADER_ATOMIC_FLOAT_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_shader_atomic_float2\"",
                                "@name": "VK_EXT_SHADER_ATOMIC_FLOAT_2_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_extension_275",
                    "@number": "275",
                    "@type": "instance",
                    "@author": "KHR",
                    "@contact": "Lionel Landwerlin @llandwerlin",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_275_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_275\"",
                                "@name": "VK_KHR_EXTENSION_275_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_276",
                    "@number": "276",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_276_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_276\"",
                                "@name": "VK_KHR_EXTENSION_276_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_shader_demote_to_helper_invocation",
                    "@number": "277",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_shader_demote_to_helper_invocation\"",
                                "@name": "VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_NV_device_generated_commands",
                    "@number": "278",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@requires": "VK_KHR_buffer_device_address",
                    "@author": "NV",
                    "@contact": "Christoph Kubisch @pixeljetstream",
                    "@supported": "vulkan",
                    "require": {
                        "comment": "This extension requires buffer_device_address functionality.\n                    VK_EXT_buffer_device_address is also acceptable, but since it is deprecated the KHR version is preferred.",
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_NV_DEVICE_GENERATED_COMMANDS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_device_generated_commands\"",
                                "@name": "VK_NV_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV"
                            },
                            {
                                "@bitpos": "18",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV"
                            },
                            {
                                "@bitpos": "17",
                                "@extends": "VkPipelineStageFlagBits",
                                "@name": "VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV"
                            },
                            {
                                "@bitpos": "17",
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV"
                            },
                            {
                                "@bitpos": "18",
                                "@extends": "VkAccessFlagBits",
                                "@name": "VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV"
                            },
                            {
                                "@name": "VkGraphicsShaderGroupCreateInfoNV"
                            },
                            {
                                "@name": "VkGraphicsPipelineShaderGroupsCreateInfoNV"
                            },
                            {
                                "@name": "VkBindShaderGroupIndirectCommandNV"
                            },
                            {
                                "@name": "VkBindIndexBufferIndirectCommandNV"
                            },
                            {
                                "@name": "VkBindVertexBufferIndirectCommandNV"
                            },
                            {
                                "@name": "VkSetStateFlagsIndirectCommandNV"
                            },
                            {
                                "@name": "VkIndirectStateFlagBitsNV"
                            },
                            {
                                "@name": "VkIndirectStateFlagsNV"
                            },
                            {
                                "@name": "VkIndirectCommandsLayoutNV"
                            },
                            {
                                "@name": "VkIndirectCommandsTokenTypeNV"
                            },
                            {
                                "@name": "VkIndirectCommandsLayoutUsageFlagBitsNV"
                            },
                            {
                                "@name": "VkIndirectCommandsLayoutUsageFlagsNV"
                            },
                            {
                                "@name": "VkIndirectCommandsStreamNV"
                            },
                            {
                                "@name": "VkIndirectCommandsLayoutTokenNV"
                            },
                            {
                                "@name": "VkIndirectCommandsLayoutCreateInfoNV"
                            },
                            {
                                "@name": "VkGeneratedCommandsInfoNV"
                            },
                            {
                                "@name": "VkGeneratedCommandsMemoryRequirementsInfoNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetGeneratedCommandsMemoryRequirementsNV"
                            },
                            {
                                "@name": "vkCmdPreprocessGeneratedCommandsNV"
                            },
                            {
                                "@name": "vkCmdExecuteGeneratedCommandsNV"
                            },
                            {
                                "@name": "vkCmdBindPipelineShaderGroupNV"
                            },
                            {
                                "@name": "vkCreateIndirectCommandsLayoutNV"
                            },
                            {
                                "@name": "vkDestroyIndirectCommandsLayoutNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_inherited_viewport_scissor",
                    "@number": "279",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "David Zhao Akeley @akeley98",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_INHERITED_VIEWPORT_SCISSOR_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_inherited_viewport_scissor\"",
                                "@name": "VK_NV_INHERITED_VIEWPORT_SCISSOR_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceInheritedViewportScissorFeaturesNV"
                            },
                            {
                                "@name": "VkCommandBufferInheritanceViewportScissorInfoNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_280",
                    "@number": "280",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Kevin Petit @kevinpetit",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_280_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_280\"",
                                "@name": "VK_KHR_EXTENSION_280_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_shader_integer_dot_product",
                    "@number": "281",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Kevin Petit @kevinpetit",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SHADER_INTEGER_DOT_PRODUCT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shader_integer_dot_product\"",
                                "@name": "VK_KHR_SHADER_INTEGER_DOT_PRODUCT_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_texel_buffer_alignment",
                    "@number": "282",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_TEXEL_BUFFER_ALIGNMENT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_texel_buffer_alignment\"",
                                "@name": "VK_EXT_TEXEL_BUFFER_ALIGNMENT_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT",
                                "@comment": "Not promoted to 1.3"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT",
                                "@comment": "Not promoted to 1.3"
                            },
                            {
                                "@name": "VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_render_pass_transform",
                    "@number": "283",
                    "@type": "device",
                    "@requires": "VK_KHR_swapchain,VK_KHR_surface",
                    "@author": "QCOM",
                    "@contact": "Jeff Leger @jackohound",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_QCOM_RENDER_PASS_TRANSFORM_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_render_pass_transform\"",
                                "@name": "VK_QCOM_RENDER_PASS_TRANSFORM_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkRenderPassCreateFlagBits",
                                "@name": "VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRenderPassTransformBeginInfoQCOM"
                            },
                            {
                                "@name": "VkCommandBufferInheritanceRenderPassTransformInfoQCOM"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_284",
                    "@number": "284",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Samuel Pitoiset @hakzsam",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_284_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_284\"",
                                "@name": "VK_EXT_EXTENSION_284_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_device_memory_report",
                    "@number": "285",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Yiwei Zhang @zhangyiwei",
                    "@specialuse": "devtools",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_DEVICE_MEMORY_REPORT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_device_memory_report\"",
                                "@name": "VK_EXT_DEVICE_MEMORY_REPORT_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceDeviceMemoryReportFeaturesEXT"
                            },
                            {
                                "@name": "VkDeviceDeviceMemoryReportCreateInfoEXT"
                            },
                            {
                                "@name": "VkDeviceMemoryReportCallbackDataEXT"
                            },
                            {
                                "@name": "VkDeviceMemoryReportFlagsEXT"
                            },
                            {
                                "@name": "VkDeviceMemoryReportEventTypeEXT"
                            },
                            {
                                "@name": "PFN_vkDeviceMemoryReportCallbackEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_acquire_drm_display",
                    "@number": "286",
                    "@type": "instance",
                    "@requires": "VK_EXT_direct_mode_display",
                    "@author": "EXT",
                    "@contact": "Drew DeVault sir@cmpwn.com",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_ACQUIRE_DRM_DISPLAY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_acquire_drm_display\"",
                                "@name": "VK_EXT_ACQUIRE_DRM_DISPLAY_EXTENSION_NAME"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkAcquireDrmDisplayEXT"
                            },
                            {
                                "@name": "vkGetDrmDisplayEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_robustness2",
                    "@number": "287",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Liam Middlebrook @liam-middlebrook",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_ROBUSTNESS_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_robustness2\"",
                                "@name": "VK_EXT_ROBUSTNESS_2_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceRobustness2FeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceRobustness2PropertiesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_custom_border_color",
                    "@number": "288",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Liam Middlebrook @liam-middlebrook",
                    "@specialuse": "glemulation,d3demulation",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "12",
                                "@name": "VK_EXT_CUSTOM_BORDER_COLOR_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_custom_border_color\"",
                                "@name": "VK_EXT_CUSTOM_BORDER_COLOR_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkBorderColor",
                                "@name": "VK_BORDER_COLOR_FLOAT_CUSTOM_EXT"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkBorderColor",
                                "@name": "VK_BORDER_COLOR_INT_CUSTOM_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSamplerCustomBorderColorCreateInfoEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceCustomBorderColorPropertiesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceCustomBorderColorFeaturesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_289",
                    "@number": "289",
                    "@author": "EXT",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "disabled",
                    "require": {
                        "comment": "These enums are present only to inform downstream\n                    consumers like KTX2. There is no actual Vulkan extension\n                    corresponding to the enums.",
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_289_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_289\"",
                                "@name": "VK_EXT_EXTENSION_289_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "0",
                                "@name": "VK_FORMAT_ASTC_3x3x3_UNORM_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "1",
                                "@name": "VK_FORMAT_ASTC_3x3x3_SRGB_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "2",
                                "@name": "VK_FORMAT_ASTC_3x3x3_SFLOAT_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "3",
                                "@name": "VK_FORMAT_ASTC_4x3x3_UNORM_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "4",
                                "@name": "VK_FORMAT_ASTC_4x3x3_SRGB_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "5",
                                "@name": "VK_FORMAT_ASTC_4x3x3_SFLOAT_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "6",
                                "@name": "VK_FORMAT_ASTC_4x4x3_UNORM_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "7",
                                "@name": "VK_FORMAT_ASTC_4x4x3_SRGB_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "8",
                                "@name": "VK_FORMAT_ASTC_4x4x3_SFLOAT_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "9",
                                "@name": "VK_FORMAT_ASTC_4x4x4_UNORM_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "10",
                                "@name": "VK_FORMAT_ASTC_4x4x4_SRGB_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "11",
                                "@name": "VK_FORMAT_ASTC_4x4x4_SFLOAT_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "12",
                                "@name": "VK_FORMAT_ASTC_5x4x4_UNORM_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "13",
                                "@name": "VK_FORMAT_ASTC_5x4x4_SRGB_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "14",
                                "@name": "VK_FORMAT_ASTC_5x4x4_SFLOAT_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "15",
                                "@name": "VK_FORMAT_ASTC_5x5x4_UNORM_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "16",
                                "@name": "VK_FORMAT_ASTC_5x5x4_SRGB_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "17",
                                "@name": "VK_FORMAT_ASTC_5x5x4_SFLOAT_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "18",
                                "@name": "VK_FORMAT_ASTC_5x5x5_UNORM_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "19",
                                "@name": "VK_FORMAT_ASTC_5x5x5_SRGB_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "20",
                                "@name": "VK_FORMAT_ASTC_5x5x5_SFLOAT_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "21",
                                "@name": "VK_FORMAT_ASTC_6x5x5_UNORM_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "22",
                                "@name": "VK_FORMAT_ASTC_6x5x5_SRGB_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "23",
                                "@name": "VK_FORMAT_ASTC_6x5x5_SFLOAT_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "24",
                                "@name": "VK_FORMAT_ASTC_6x6x5_UNORM_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "25",
                                "@name": "VK_FORMAT_ASTC_6x6x5_SRGB_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "26",
                                "@name": "VK_FORMAT_ASTC_6x6x5_SFLOAT_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "27",
                                "@name": "VK_FORMAT_ASTC_6x6x6_UNORM_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "28",
                                "@name": "VK_FORMAT_ASTC_6x6x6_SRGB_BLOCK_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@extnumber": "289",
                                "@offset": "29",
                                "@name": "VK_FORMAT_ASTC_6x6x6_SFLOAT_BLOCK_EXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GOOGLE_user_type",
                    "@number": "290",
                    "@type": "device",
                    "@author": "GOOGLE",
                    "@contact": "Kaye Mason @chaleur",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_GOOGLE_USER_TYPE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_user_type\"",
                                "@name": "VK_GOOGLE_USER_TYPE_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_pipeline_library",
                    "@number": "291",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Christoph Kubisch @pixeljetstream",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_PIPELINE_LIBRARY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_pipeline_library\"",
                                "@name": "VK_KHR_PIPELINE_LIBRARY_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "11",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_LIBRARY_BIT_KHR"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR"
                            }
                        ],
                        "type": {
                            "@name": "VkPipelineLibraryCreateInfoKHR"
                        }
                    }
                },
                {
                    "@name": "VK_NV_extension_292",
                    "@number": "292",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_292_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_292\"",
                                "@name": "VK_NV_EXTENSION_292_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_293",
                    "@number": "293",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_293_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_293\"",
                                "@name": "VK_NV_EXTENSION_293_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_shader_non_semantic_info",
                    "@number": "294",
                    "@type": "device",
                    "@author": "KHR",
                    "@contact": "Baldur Karlsson @baldurk",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SHADER_NON_SEMANTIC_INFO_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shader_non_semantic_info\"",
                                "@name": "VK_KHR_SHADER_NON_SEMANTIC_INFO_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_present_id",
                    "@number": "295",
                    "@type": "device",
                    "@requires": "VK_KHR_swapchain",
                    "@author": "KHR",
                    "@contact": "Keith Packard @keithp",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_PRESENT_ID_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_present_id\"",
                                "@name": "VK_KHR_PRESENT_ID_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PRESENT_ID_KHR"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPresentIdKHR"
                            },
                            {
                                "@name": "VkPhysicalDevicePresentIdFeaturesKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_private_data",
                    "@number": "296",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Matthew Rusch @mattruschnv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_PRIVATE_DATA_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_private_data\"",
                                "@name": "VK_EXT_PRIVATE_DATA_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO"
                            },
                            {
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT",
                                "@alias": "VK_OBJECT_TYPE_PRIVATE_DATA_SLOT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDevicePrivateDataFeaturesEXT"
                            },
                            {
                                "@name": "VkDevicePrivateDataCreateInfoEXT"
                            },
                            {
                                "@name": "VkPrivateDataSlotCreateInfoEXT"
                            },
                            {
                                "@name": "VkPrivateDataSlotEXT"
                            },
                            {
                                "@name": "VkPrivateDataSlotCreateFlagsEXT"
                            },
                            {
                                "@name": "VkPrivateDataSlotCreateFlagBitsEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreatePrivateDataSlotEXT"
                            },
                            {
                                "@name": "vkDestroyPrivateDataSlotEXT"
                            },
                            {
                                "@name": "vkSetPrivateDataEXT"
                            },
                            {
                                "@name": "vkGetPrivateDataEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_297",
                    "@number": "297",
                    "@author": "KHR",
                    "@contact": "Corentin Wallez @Kangz",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_297_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_297\"",
                                "@name": "VK_KHR_EXTENSION_297_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "3",
                                "@extends": "VkPipelineShaderStageCreateFlagBits",
                                "@name": "VK_PIPELINE_SHADER_STAGE_CREATE_RESERVED_3_BIT_KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_pipeline_creation_cache_control",
                    "@number": "298",
                    "@type": "device",
                    "@author": "AMD",
                    "@contact": "Gregory Grebe @grgrebe_amd",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "3",
                                "@name": "VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_pipeline_creation_cache_control\"",
                                "@name": "VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES"
                            },
                            {
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT",
                                "@alias": "VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT"
                            },
                            {
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT",
                                "@alias": "VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT"
                            },
                            {
                                "@extends": "VkResult",
                                "@name": "VK_PIPELINE_COMPILE_REQUIRED_EXT",
                                "@alias": "VK_PIPELINE_COMPILE_REQUIRED"
                            },
                            {
                                "@extends": "VkResult",
                                "@name": "VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT",
                                "@alias": "VK_PIPELINE_COMPILE_REQUIRED"
                            },
                            {
                                "@extends": "VkPipelineCacheCreateFlagBits",
                                "@name": "VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT",
                                "@alias": "VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT"
                            },
                            {
                                "@name": "VkPipelineCacheCreateFlagBits",
                                "@comment": "This is a temporary workaround for processors not recognizing that VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT above also requires this type"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_299",
                    "@number": "299",
                    "@author": "KHR",
                    "@contact": "Mark Bellamy @mark.bellamy_arm",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_299_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_299\"",
                                "@name": "VK_KHR_EXTENSION_299_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkMemoryHeapFlagBits",
                                "@name": "VK_MEMORY_HEAP_RESERVED_2_BIT_KHR"
                            },
                            {
                                "@extends": "VkPipelineCacheCreateFlagBits",
                                "@name": "VK_PIPELINE_CACHE_CREATE_RESERVED_1_BIT_KHR",
                                "@alias": "VK_PIPELINE_CACHE_CREATE_RESERVED_1_BIT_EXT"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkPipelineCacheCreateFlagBits",
                                "@name": "VK_PIPELINE_CACHE_CREATE_RESERVED_2_BIT_KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_video_encode_queue",
                    "@number": "300",
                    "@type": "device",
                    "@requires": "VK_KHR_video_queue,VK_KHR_synchronization2",
                    "@author": "KHR",
                    "@contact": "ahmed.abdelkalek@amd.com",
                    "@provisional": "true",
                    "@platform": "provisional",
                    "@supported": "vulkan",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "3",
                                    "@name": "VK_KHR_VIDEO_ENCODE_QUEUE_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_video_encode_queue\"",
                                    "@name": "VK_KHR_VIDEO_ENCODE_QUEUE_EXTENSION_NAME"
                                },
                                {
                                    "@bitpos": "27",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "37",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_VIDEO_ENCODE_READ_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "38",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_VIDEO_ENCODE_WRITE_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@offset": "1",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@offset": "2",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "6",
                                    "@extends": "VkQueueFlagBits",
                                    "@name": "VK_QUEUE_VIDEO_ENCODE_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "15",
                                    "@extends": "VkBufferUsageFlagBits",
                                    "@name": "VK_BUFFER_USAGE_VIDEO_ENCODE_DST_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "16",
                                    "@extends": "VkBufferUsageFlagBits",
                                    "@name": "VK_BUFFER_USAGE_VIDEO_ENCODE_SRC_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "13",
                                    "@extends": "VkImageUsageFlagBits",
                                    "@name": "VK_IMAGE_USAGE_VIDEO_ENCODE_DST_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "14",
                                    "@extends": "VkImageUsageFlagBits",
                                    "@name": "VK_IMAGE_USAGE_VIDEO_ENCODE_SRC_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "15",
                                    "@extends": "VkImageUsageFlagBits",
                                    "@name": "VK_IMAGE_USAGE_VIDEO_ENCODE_DPB_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "27",
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "28",
                                    "@extends": "VkFormatFeatureFlagBits",
                                    "@name": "VK_FORMAT_FEATURE_VIDEO_ENCODE_DPB_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkImageLayout",
                                    "@name": "VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@offset": "1",
                                    "@extends": "VkImageLayout",
                                    "@name": "VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@offset": "2",
                                    "@extends": "VkImageLayout",
                                    "@name": "VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkQueryType",
                                    "@name": "VK_QUERY_TYPE_VIDEO_ENCODE_BITSTREAM_BUFFER_RANGE_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkVideoEncodeFlagBitsKHR"
                                },
                                {
                                    "@name": "VkVideoEncodeFlagsKHR"
                                },
                                {
                                    "@name": "VkVideoEncodeInfoKHR"
                                },
                                {
                                    "@name": "VkVideoEncodeRateControlFlagBitsKHR"
                                },
                                {
                                    "@name": "VkVideoEncodeRateControlFlagsKHR"
                                },
                                {
                                    "@name": "VkVideoEncodeRateControlModeFlagBitsKHR"
                                },
                                {
                                    "@name": "VkVideoEncodeRateControlModeFlagsKHR"
                                },
                                {
                                    "@name": "VkVideoEncodeRateControlInfoKHR"
                                },
                                {
                                    "@name": "VkVideoEncodeRateControlLayerInfoKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkCmdEncodeVideoKHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_format_feature_flags2",
                            "enum": [
                                {
                                    "@bitpos": "27",
                                    "@extends": "VkFormatFeatureFlagBits2",
                                    "@name": "VK_FORMAT_FEATURE_2_VIDEO_ENCODE_INPUT_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                },
                                {
                                    "@bitpos": "28",
                                    "@extends": "VkFormatFeatureFlagBits2",
                                    "@name": "VK_FORMAT_FEATURE_2_VIDEO_ENCODE_DPB_BIT_KHR",
                                    "@protect": "VK_ENABLE_BETA_EXTENSIONS"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_NV_device_diagnostics_config",
                    "@number": "301",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "NV",
                    "@contact": "Kedarnath Thangudu @kthangudu",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_DEVICE_DIAGNOSTICS_CONFIG_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_device_diagnostics_config\"",
                                "@name": "VK_NV_DEVICE_DIAGNOSTICS_CONFIG_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceDiagnosticsConfigFeaturesNV"
                            },
                            {
                                "@name": "VkDeviceDiagnosticsConfigCreateInfoNV"
                            },
                            {
                                "@name": "VkDeviceDiagnosticsConfigFlagsNV"
                            },
                            {
                                "@name": "VkDeviceDiagnosticsConfigFlagBitsNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_render_pass_store_ops",
                    "@number": "302",
                    "@type": "device",
                    "@author": "QCOM",
                    "@contact": "Bill Licea-Kane @wwlk",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_QCOM_RENDER_PASS_STORE_OPS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_render_pass_store_ops\"",
                                "@name": "VK_QCOM_RENDER_PASS_STORE_OPS_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkAttachmentStoreOp",
                                "@name": "VK_ATTACHMENT_STORE_OP_NONE_QCOM",
                                "@alias": "VK_ATTACHMENT_STORE_OP_NONE"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_303",
                    "@number": "303",
                    "@author": "QCOM",
                    "@contact": "Bill Licea-Kane @wwlk",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_303_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_303\"",
                                "@name": "VK_QCOM_EXTENSION_303_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_304",
                    "@number": "304",
                    "@author": "QCOM",
                    "@contact": "Bill Licea-Kane @wwlk",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_304_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_304\"",
                                "@name": "VK_QCOM_EXTENSION_304_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_305",
                    "@number": "305",
                    "@author": "QCOM",
                    "@contact": "Bill Licea-Kane @wwlk",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_305_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_305\"",
                                "@name": "VK_QCOM_EXTENSION_305_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_306",
                    "@number": "306",
                    "@author": "QCOM",
                    "@contact": "Bill Licea-Kane @wwlk",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_306_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_306\"",
                                "@name": "VK_QCOM_EXTENSION_306_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_307",
                    "@number": "307",
                    "@author": "QCOM",
                    "@contact": "Bill Licea-Kane @wwlk",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_307_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_307\"",
                                "@name": "VK_QCOM_EXTENSION_307_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_308",
                    "@number": "308",
                    "@type": "device",
                    "@author": "NV",
                    "@contact": "Tristan Lorach @tlorach",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_308_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_308\"",
                                "@name": "VK_NV_EXTENSION_308_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_309",
                    "@number": "309",
                    "@author": "KHR",
                    "@contact": "Aidan Fabius @afabius",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_309_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_309\"",
                                "@name": "VK_KHR_EXTENSION_309_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_310",
                    "@number": "310",
                    "@author": "QCOM",
                    "@contact": "Jeff Leger @jackohound",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_310_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_310\"",
                                "@name": "VK_QCOM_EXTENSION_310_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_RESERVED_QCOM"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_311",
                    "@number": "311",
                    "@author": "NV",
                    "@contact": "Charles Hansen @cshansen",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_311_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_311\"",
                                "@name": "VK_NV_EXTENSION_311_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_312",
                    "@number": "312",
                    "@author": "MVK",
                    "@contact": "Bill Hollings @billhollings",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_312_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_312\"",
                                "@name": "VK_EXT_EXTENSION_312_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_313",
                    "@number": "313",
                    "@author": "MVK",
                    "@contact": "Bill Hollings @billhollings",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_313_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_313\"",
                                "@name": "VK_EXT_EXTENSION_313_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_314",
                    "@number": "314",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_314_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_314\"",
                                "@name": "VK_AMD_EXTENSION_314_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_synchronization2",
                    "@number": "315",
                    "@type": "device",
                    "@author": "KHR",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Tobias Hector @tobski",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "1",
                                    "@name": "VK_KHR_SYNCHRONIZATION_2_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_KHR_synchronization2\"",
                                    "@name": "VK_KHR_SYNCHRONIZATION_2_EXTENSION_NAME"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_MEMORY_BARRIER_2"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_DEPENDENCY_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_SUBMIT_INFO_2"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO"
                                },
                                {
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR",
                                    "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES"
                                },
                                {
                                    "@extends": "VkEventCreateFlagBits",
                                    "@name": "VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR",
                                    "@alias": "VK_EVENT_CREATE_DEVICE_ONLY_BIT"
                                },
                                {
                                    "@extends": "VkImageLayout",
                                    "@name": "VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR",
                                    "@alias": "VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL"
                                },
                                {
                                    "@extends": "VkImageLayout",
                                    "@name": "VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR",
                                    "@alias": "VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL"
                                },
                                {
                                    "@extends": "VkPipelineStageFlagBits",
                                    "@name": "VK_PIPELINE_STAGE_NONE_KHR",
                                    "@alias": "VK_PIPELINE_STAGE_NONE"
                                },
                                {
                                    "@extends": "VkAccessFlagBits",
                                    "@name": "VK_ACCESS_NONE_KHR",
                                    "@alias": "VK_ACCESS_NONE"
                                }
                            ],
                            "type": [
                                {
                                    "@name": "VkFlags64"
                                },
                                {
                                    "@name": "VkPipelineStageFlags2KHR"
                                },
                                {
                                    "@name": "VkPipelineStageFlagBits2KHR"
                                },
                                {
                                    "@name": "VkAccessFlags2KHR"
                                },
                                {
                                    "@name": "VkAccessFlagBits2KHR"
                                },
                                {
                                    "@name": "VkMemoryBarrier2KHR"
                                },
                                {
                                    "@name": "VkBufferMemoryBarrier2KHR"
                                },
                                {
                                    "@name": "VkImageMemoryBarrier2KHR"
                                },
                                {
                                    "@name": "VkDependencyInfoKHR"
                                },
                                {
                                    "@name": "VkSubmitInfo2KHR"
                                },
                                {
                                    "@name": "VkSemaphoreSubmitInfoKHR"
                                },
                                {
                                    "@name": "VkCommandBufferSubmitInfoKHR"
                                },
                                {
                                    "@name": "VkSubmitFlagBitsKHR"
                                },
                                {
                                    "@name": "VkSubmitFlagsKHR"
                                },
                                {
                                    "@name": "VkPhysicalDeviceSynchronization2FeaturesKHR"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkCmdSetEvent2KHR"
                                },
                                {
                                    "@name": "vkCmdResetEvent2KHR"
                                },
                                {
                                    "@name": "vkCmdWaitEvents2KHR"
                                },
                                {
                                    "@name": "vkCmdPipelineBarrier2KHR"
                                },
                                {
                                    "@name": "vkCmdWriteTimestamp2KHR"
                                },
                                {
                                    "@name": "vkQueueSubmit2KHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_EXT_transform_feedback",
                            "enum": [
                                {
                                    "@bitpos": "24",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT"
                                },
                                {
                                    "@bitpos": "25",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT"
                                },
                                {
                                    "@bitpos": "26",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT"
                                },
                                {
                                    "@bitpos": "27",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_EXT_conditional_rendering",
                            "enum": [
                                {
                                    "@bitpos": "18",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT",
                                    "@comment": "A pipeline stage for conditional rendering predicate fetch"
                                },
                                {
                                    "@bitpos": "20",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT",
                                    "@comment": "read access flag for reading conditional rendering predicate"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_NV_device_generated_commands",
                            "enum": [
                                {
                                    "@bitpos": "17",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV"
                                },
                                {
                                    "@bitpos": "17",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV"
                                },
                                {
                                    "@bitpos": "18",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_fragment_shading_rate",
                            "enum": [
                                {
                                    "@bitpos": "22",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"
                                },
                                {
                                    "@bitpos": "23",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_NV_shading_rate_image",
                            "enum": [
                                {
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV",
                                    "@alias": "VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"
                                },
                                {
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV",
                                    "@alias": "VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_acceleration_structure",
                            "enum": [
                                {
                                    "@bitpos": "25",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR"
                                },
                                {
                                    "@bitpos": "21",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR"
                                },
                                {
                                    "@bitpos": "22",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_KHR_ray_tracing_pipeline",
                            "enum": [
                                {
                                    "@bitpos": "21",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_NV_ray_tracing",
                            "enum": [
                                {
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV",
                                    "@alias": "VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR"
                                },
                                {
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV",
                                    "@alias": "VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR"
                                },
                                {
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV",
                                    "@alias": "VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR"
                                },
                                {
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV",
                                    "@alias": "VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_EXT_fragment_density_map",
                            "enum": [
                                {
                                    "@bitpos": "23",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT"
                                },
                                {
                                    "@bitpos": "24",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_EXT_blend_operation_advanced",
                            "enum": [
                                {
                                    "@bitpos": "19",
                                    "@extends": "VkAccessFlagBits2",
                                    "@name": "VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_NV_mesh_shader",
                            "enum": [
                                {
                                    "@bitpos": "19",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV"
                                },
                                {
                                    "@bitpos": "20",
                                    "@extends": "VkPipelineStageFlagBits2",
                                    "@name": "VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_AMD_buffer_marker",
                            "command": [
                                {
                                    "@name": "vkCmdWriteBufferMarker2AMD"
                                }
                            ]
                        },
                        {
                            "@extension": "VK_NV_device_diagnostic_checkpoints",
                            "type": [
                                {
                                    "@name": "VkQueueFamilyCheckpointProperties2NV"
                                },
                                {
                                    "@name": "VkCheckpointData2NV"
                                }
                            ],
                            "command": [
                                {
                                    "@name": "vkGetQueueCheckpointData2NV"
                                }
                            ],
                            "enum": [
                                {
                                    "@offset": "8",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV"
                                },
                                {
                                    "@offset": "9",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_AMD_extension_316",
                    "@number": "316",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_316_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_316\"",
                                "@name": "VK_AMD_EXTENSION_316_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_317",
                    "@number": "317",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_317_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_317\"",
                                "@name": "VK_AMD_EXTENSION_317_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "4",
                                "@extends": "VkDescriptorSetLayoutCreateFlagBits",
                                "@name": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_RESERVED_4_BIT_AMD"
                            },
                            {
                                "@bitpos": "21",
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_RESERVED_21_BIT_AMD"
                            },
                            {
                                "@bitpos": "22",
                                "@extends": "VkBufferUsageFlagBits",
                                "@name": "VK_BUFFER_USAGE_RESERVED_22_BIT_AMD"
                            },
                            {
                                "@bitpos": "5",
                                "@extends": "VkBufferCreateFlagBits",
                                "@name": "VK_BUFFER_CREATE_RESERVED_5_BIT_AMD"
                            },
                            {
                                "@bitpos": "16",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_RESERVED_16_BIT_AMD"
                            },
                            {
                                "@bitpos": "3",
                                "@extends": "VkSamplerCreateFlagBits",
                                "@name": "VK_SAMPLER_CREATE_RESERVED_3_BIT_AMD"
                            },
                            {
                                "@bitpos": "41",
                                "@extends": "VkAccessFlagBits2",
                                "@name": "VK_ACCESS_2_RESERVED_41_BIT_AMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_318",
                    "@number": "318",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_318_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_318\"",
                                "@name": "VK_AMD_EXTENSION_318_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_319",
                    "@number": "319",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_319_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_319\"",
                                "@name": "VK_AMD_EXTENSION_319_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "3",
                                "@extends": "VkDescriptorSetLayoutCreateFlagBits",
                                "@name": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_RESERVED_3_BIT_AMD"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkPipelineLayoutCreateFlagBits",
                                "@name": "VK_PIPELINE_LAYOUT_CREATE_RESERVED_0_BIT_AMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_320",
                    "@number": "320",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_320_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_320\"",
                                "@name": "VK_AMD_EXTENSION_320_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_321",
                    "@number": "321",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_321_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_321\"",
                                "@name": "VK_AMD_EXTENSION_321_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "23",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_RESERVED_23_BIT_AMD"
                            },
                            {
                                "@bitpos": "10",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_RESERVED_10_BIT_AMD"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkPipelineLayoutCreateFlagBits",
                                "@name": "VK_PIPELINE_LAYOUT_CREATE_RESERVED_1_BIT_AMD"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_322",
                    "@number": "322",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_322_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_322\"",
                                "@name": "VK_AMD_EXTENSION_322_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_AMD_extension_323",
                    "@number": "323",
                    "@author": "AMD",
                    "@contact": "Martin Dinkov @mdinkov",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_AMD_EXTENSION_323_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_AMD_extension_323\"",
                                "@name": "VK_AMD_EXTENSION_323_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_shader_subgroup_uniform_control_flow",
                    "@number": "324",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@author": "KHR",
                    "@contact": "Alan Baker @alan-baker",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_shader_subgroup_uniform_control_flow\"",
                                "@name": "VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_extension_325",
                    "@number": "325",
                    "@author": "KHR",
                    "@contact": "Ralph Potter gitlab:@r_potter",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_325_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_325\"",
                                "@name": "VK_KHR_EXTENSION_325_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_zero_initialize_workgroup_memory",
                    "@number": "326",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Alan Baker @alan-baker",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_zero_initialize_workgroup_memory\"",
                                "@name": "VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_NV_fragment_shading_rate_enums",
                    "@number": "327",
                    "@type": "device",
                    "@requires": "VK_KHR_fragment_shading_rate",
                    "@author": "NV",
                    "@contact": "Pat Brown @nvpbrown",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_FRAGMENT_SHADING_RATE_ENUMS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_fragment_shading_rate_enums\"",
                                "@name": "VK_NV_FRAGMENT_SHADING_RATE_ENUMS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV"
                            },
                            {
                                "@name": "VkPipelineFragmentShadingRateEnumStateCreateInfoNV"
                            },
                            {
                                "@name": "VkFragmentShadingRateNV"
                            },
                            {
                                "@name": "VkFragmentShadingRateTypeNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetFragmentShadingRateEnumNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_ray_tracing_motion_blur",
                    "@number": "328",
                    "@type": "device",
                    "@requires": "VK_KHR_ray_tracing_pipeline",
                    "@author": "NV",
                    "@contact": "Eric Werness",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_RAY_TRACING_MOTION_BLUR_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_ray_tracing_motion_blur\"",
                                "@name": "VK_NV_RAY_TRACING_MOTION_BLUR_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV"
                            },
                            {
                                "@bitpos": "5",
                                "@extends": "VkBuildAccelerationStructureFlagBitsKHR",
                                "@name": "VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkAccelerationStructureCreateFlagBitsKHR",
                                "@name": "VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV"
                            },
                            {
                                "@bitpos": "20",
                                "@extends": "VkPipelineCreateFlagBits",
                                "@name": "VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkAccelerationStructureGeometryMotionTrianglesDataNV"
                            },
                            {
                                "@name": "VkAccelerationStructureMotionInfoNV"
                            },
                            {
                                "@name": "VkAccelerationStructureMotionInstanceNV"
                            },
                            {
                                "@name": "VkAccelerationStructureMotionInstanceDataNV"
                            },
                            {
                                "@name": "VkAccelerationStructureMatrixMotionInstanceNV"
                            },
                            {
                                "@name": "VkAccelerationStructureSRTMotionInstanceNV"
                            },
                            {
                                "@name": "VkSRTDataNV"
                            },
                            {
                                "@name": "VkAccelerationStructureMotionInstanceTypeNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceRayTracingMotionBlurFeaturesNV"
                            },
                            {
                                "@name": "VkAccelerationStructureMotionInfoFlagsNV"
                            },
                            {
                                "@name": "VkAccelerationStructureMotionInstanceFlagsNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_329",
                    "@number": "329",
                    "@author": "NV",
                    "@contact": "Pat Brown @nvpbrown",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_329_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_329\"",
                                "@name": "VK_NV_EXTENSION_329_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_330",
                    "@number": "330",
                    "@author": "NV",
                    "@contact": "Liam Middlebrook @liam-middlebrook",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_330_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_330\"",
                                "@name": "VK_NV_EXTENSION_330_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_ycbcr_2plane_444_formats",
                    "@number": "331",
                    "@type": "device",
                    "@requires": "VK_KHR_sampler_ycbcr_conversion",
                    "@author": "EXT",
                    "@contact": "Tony Zlatinski @tzlatinski",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "comment": "VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT and\n                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT\n                    were not promoted to Vulkan 1.3.",
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_YCBCR_2PLANE_444_FORMATS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_ycbcr_2plane_444_formats\"",
                                "@name": "VK_EXT_YCBCR_2PLANE_444_FORMATS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT",
                                "@alias": "VK_FORMAT_G8_B8R8_2PLANE_444_UNORM"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT",
                                "@alias": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT",
                                "@alias": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT",
                                "@alias": "VK_FORMAT_G16_B16R16_2PLANE_444_UNORM"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_NV_extension_332",
                    "@number": "332",
                    "@author": "NV",
                    "@contact": "Tony Zlatinski @tzlatinski",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_332_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_332\"",
                                "@name": "VK_NV_EXTENSION_332_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_fragment_density_map2",
                    "@number": "333",
                    "@type": "device",
                    "@requires": "VK_EXT_fragment_density_map",
                    "@author": "EXT",
                    "@contact": "Matthew Netsch @mnetsch",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_FRAGMENT_DENSITY_MAP_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_fragment_density_map2\"",
                                "@name": "VK_EXT_FRAGMENT_DENSITY_MAP_2_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkImageViewCreateFlagBits",
                                "@name": "VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceFragmentDensityMap2FeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceFragmentDensityMap2PropertiesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_rotated_copy_commands",
                    "@number": "334",
                    "@type": "device",
                    "@requires": "VK_KHR_swapchain,VK_KHR_copy_commands2",
                    "@author": "QCOM",
                    "@contact": "Jeff Leger @jackohound",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_QCOM_ROTATED_COPY_COMMANDS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_rotated_copy_commands\"",
                                "@name": "VK_QCOM_ROTATED_COPY_COMMANDS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM"
                            }
                        ],
                        "type": {
                            "@name": "VkCopyCommandTransformInfoQCOM"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_extension_335",
                    "@number": "335",
                    "@author": "KHR",
                    "@contact": "Mark Bellamy @mark.bellamy_arm",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_335_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_335\"",
                                "@name": "VK_KHR_EXTENSION_335_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_image_robustness",
                    "@number": "336",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Graeme Leese @gnl21",
                    "@supported": "vulkan",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_IMAGE_ROBUSTNESS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_image_robustness\"",
                                "@name": "VK_EXT_IMAGE_ROBUSTNESS_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceImageRobustnessFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_workgroup_memory_explicit_layout",
                    "@number": "337",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "KHR",
                    "@contact": "Caio Marcelo de Oliveira Filho @cmarcelo",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_workgroup_memory_explicit_layout\"",
                                "@name": "VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_copy_commands2",
                    "@number": "338",
                    "@author": "KHR",
                    "@type": "device",
                    "@contact": "Jeff Leger @jackohound",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_COPY_COMMANDS_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_copy_commands2\"",
                                "@name": "VK_KHR_COPY_COMMANDS_2_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_BUFFER_COPY_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_IMAGE_COPY_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_IMAGE_BLIT_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkCopyBufferInfo2KHR"
                            },
                            {
                                "@name": "VkCopyImageInfo2KHR"
                            },
                            {
                                "@name": "VkCopyBufferToImageInfo2KHR"
                            },
                            {
                                "@name": "VkCopyImageToBufferInfo2KHR"
                            },
                            {
                                "@name": "VkBlitImageInfo2KHR"
                            },
                            {
                                "@name": "VkResolveImageInfo2KHR"
                            },
                            {
                                "@name": "VkBufferCopy2KHR"
                            },
                            {
                                "@name": "VkImageCopy2KHR"
                            },
                            {
                                "@name": "VkImageBlit2KHR"
                            },
                            {
                                "@name": "VkBufferImageCopy2KHR"
                            },
                            {
                                "@name": "VkImageResolve2KHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdCopyBuffer2KHR"
                            },
                            {
                                "@name": "vkCmdCopyImage2KHR"
                            },
                            {
                                "@name": "vkCmdCopyBufferToImage2KHR"
                            },
                            {
                                "@name": "vkCmdCopyImageToBuffer2KHR"
                            },
                            {
                                "@name": "vkCmdBlitImage2KHR"
                            },
                            {
                                "@name": "vkCmdResolveImage2KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_ARM_extension_339",
                    "@number": "339",
                    "@author": "ARM",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_ARM_EXTENSION_339_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_ARM_extension_339\"",
                                "@name": "VK_ARM_EXTENSION_339_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_340",
                    "@number": "340",
                    "@author": "EXT",
                    "@contact": "Joshua Ashton @Joshua-Ashton",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_340_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_340\"",
                                "@name": "VK_EXT_EXTENSION_340_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "19",
                                "@extends": "VkImageUsageFlagBits",
                                "@name": "VK_IMAGE_USAGE_RESERVED_19_BIT_EXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_4444_formats",
                    "@number": "341",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Joshua Ashton @Joshua-Ashton",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "comment": "VkPhysicalDevice4444FormatsFeaturesEXT and\n                    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT\n                    were not promoted to Vulkan 1.3.",
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_4444_FORMATS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_4444_formats\"",
                                "@name": "VK_EXT_4444_FORMATS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT",
                                "@alias": "VK_FORMAT_A4R4G4B4_UNORM_PACK16"
                            },
                            {
                                "@extends": "VkFormat",
                                "@name": "VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT",
                                "@alias": "VK_FORMAT_A4B4G4R4_UNORM_PACK16"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDevice4444FormatsFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_extension_342",
                    "@number": "342",
                    "@author": "EXT",
                    "@contact": "Ralph Potter gitlab:@r_potter",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_342_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_342\"",
                                "@name": "VK_EXT_EXTENSION_342_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_ARM_rasterization_order_attachment_access",
                    "@number": "343",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "ARM",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_ARM_rasterization_order_attachment_access\"",
                                "@name": "VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkPipelineColorBlendStateCreateFlagBits",
                                "@name": "VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM"
                            },
                            {
                                "@bitpos": "0",
                                "@extends": "VkPipelineDepthStencilStateCreateFlagBits",
                                "@name": "VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkPipelineDepthStencilStateCreateFlagBits",
                                "@name": "VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM"
                            },
                            {
                                "@bitpos": "4",
                                "@extends": "VkSubpassDescriptionFlagBits",
                                "@name": "VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM"
                            },
                            {
                                "@bitpos": "5",
                                "@extends": "VkSubpassDescriptionFlagBits",
                                "@name": "VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM"
                            },
                            {
                                "@bitpos": "6",
                                "@extends": "VkSubpassDescriptionFlagBits",
                                "@name": "VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM"
                            },
                            {
                                "@name": "VkPipelineColorBlendStateCreateFlagBits"
                            },
                            {
                                "@name": "VkPipelineDepthStencilStateCreateFlagBits"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_ARM_extension_344",
                    "@number": "344",
                    "@author": "ARM",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_ARM_EXTENSION_344_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_ARM_extension_344\"",
                                "@name": "VK_ARM_EXTENSION_344_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_rgba10x6_formats",
                    "@number": "345",
                    "@type": "device",
                    "@requires": "VK_KHR_sampler_ycbcr_conversion",
                    "@author": "EXT",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_RGBA10X6_FORMATS_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_rgba10x6_formats\"",
                                "@name": "VK_EXT_RGBA10X6_FORMATS_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_NV_acquire_winrt_display",
                    "@number": "346",
                    "@type": "device",
                    "@requires": "VK_EXT_direct_mode_display",
                    "@author": "NV",
                    "@contact": "Jeff Juliano @jjuliano",
                    "@platform": "win32",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_ACQUIRE_WINRT_DISPLAY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_acquire_winrt_display\"",
                                "@name": "VK_NV_ACQUIRE_WINRT_DISPLAY_EXTENSION_NAME"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkAcquireWinrtDisplayNV"
                            },
                            {
                                "@name": "vkGetWinrtDisplayNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_directfb_surface",
                    "@number": "347",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "directfb",
                    "@supported": "vulkan",
                    "@author": "EXT",
                    "@contact": "Nicolas Caramelli @caramelli",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_DIRECTFB_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_directfb_surface\"",
                                "@name": "VK_EXT_DIRECTFB_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkDirectFBSurfaceCreateFlagsEXT"
                            },
                            {
                                "@name": "VkDirectFBSurfaceCreateInfoEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateDirectFBSurfaceEXT"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceDirectFBPresentationSupportEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_350",
                    "@number": "350",
                    "@author": "KHR",
                    "@contact": "Mark Bellamy @mark.bellamy_arm",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_350_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_350\"",
                                "@name": "VK_KHR_EXTENSION_350_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_351",
                    "@number": "351",
                    "@author": "NV",
                    "@contact": "Liam Middlebrook @liam-middlebrook",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_351_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_351\"",
                                "@name": "VK_NV_EXTENSION_351_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_VALVE_mutable_descriptor_type",
                    "@number": "352",
                    "@type": "device",
                    "@supported": "vulkan",
                    "@author": "VALVE",
                    "@contact": "Joshua Ashton @Joshua-Ashton,Hans-Kristian Arntzen @HansKristian-Work",
                    "@specialuse": "d3demulation",
                    "@requires": "VK_KHR_maintenance3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_VALVE_mutable_descriptor_type\"",
                                "@name": "VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDescriptorType",
                                "@name": "VK_DESCRIPTOR_TYPE_MUTABLE_VALVE"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkDescriptorPoolCreateFlagBits",
                                "@name": "VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkDescriptorSetLayoutCreateFlagBits",
                                "@name": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE"
                            },
                            {
                                "@name": "VkMutableDescriptorTypeListVALVE"
                            },
                            {
                                "@name": "VkMutableDescriptorTypeCreateInfoVALVE"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_vertex_input_dynamic_state",
                    "@number": "353",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_vertex_input_dynamic_state\"",
                                "@name": "VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_VERTEX_INPUT_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT"
                            },
                            {
                                "@name": "VkVertexInputBindingDescription2EXT"
                            },
                            {
                                "@name": "VkVertexInputAttributeDescription2EXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetVertexInputEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_physical_device_drm",
                    "@number": "354",
                    "@author": "EXT",
                    "@type": "device",
                    "@contact": "Simon Ser @emersion",
                    "@supported": "vulkan",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_PHYSICAL_DEVICE_DRM_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_physical_device_drm\"",
                                "@name": "VK_EXT_PHYSICAL_DEVICE_DRM_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceDrmPropertiesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_EXT_extension_355",
                    "@number": "355",
                    "@author": "EXT",
                    "@contact": "Ralph Potter gitlab:@r_potter",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_355_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_355\"",
                                "@name": "VK_EXT_EXTENSION_355_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_depth_clip_control",
                    "@number": "356",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Shahbaz Youssefi @syoussefi",
                    "@supported": "vulkan",
                    "@specialuse": "glemulation",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_DEPTH_CLIP_CONTROL_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_depth_clip_control\"",
                                "@name": "VK_EXT_DEPTH_CLIP_CONTROL_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceDepthClipControlFeaturesEXT"
                            },
                            {
                                "@name": "VkPipelineViewportDepthClipControlCreateInfoEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_primitive_topology_list_restart",
                    "@number": "357",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Shahbaz Youssefi @syoussefi",
                    "@supported": "vulkan",
                    "@specialuse": "glemulation",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_primitive_topology_list_restart\"",
                                "@name": "VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT"
                        }
                    }
                },
                {
                    "@name": "VK_KHR_extension_358",
                    "@number": "358",
                    "@author": "KHR",
                    "@contact": "Jeff Bolz @jeffbolznv",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_358_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_358\"",
                                "@name": "VK_KHR_EXTENSION_358_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_359",
                    "@number": "359",
                    "@author": "EXT",
                    "@contact": "Bill Hollings @billhollings",
                    "@supported": "disabled",
                    "@specialuse": "glemulation",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_359_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_359\"",
                                "@name": "VK_EXT_EXTENSION_359_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_360",
                    "@number": "360",
                    "@author": "EXT",
                    "@contact": "Bill Hollings @billhollings",
                    "@supported": "disabled",
                    "@specialuse": "glemulation",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_360_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_360\"",
                                "@name": "VK_EXT_EXTENSION_360_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_format_feature_flags2",
                    "@number": "361",
                    "@author": "KHR",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@contact": "Lionel Landwerlin @llandwerlin",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_KHR_FORMAT_FEATURE_FLAGS_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_format_feature_flags2\"",
                                "@name": "VK_KHR_FORMAT_FEATURE_FLAGS_2_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkFormatFeatureFlags2KHR"
                            },
                            {
                                "@name": "VkFormatFeatureFlagBits2KHR"
                            },
                            {
                                "@name": "VkFormatProperties3KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_362",
                    "@number": "362",
                    "@author": "EXT",
                    "@contact": "Lionel Duc @nvlduc",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_362_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_362\"",
                                "@name": "VK_EXT_EXTENSION_362_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_363",
                    "@number": "363",
                    "@author": "EXT",
                    "@contact": "Kaye Mason @chaleur",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_363_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_363\"",
                                "@name": "VK_EXT_EXTENSION_363_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_FUCHSIA_extension_364",
                    "@number": "364",
                    "@author": "FUCHSIA",
                    "@contact": "Craig Stout @cdotstout",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_FUCHSIA_EXTENSION_364_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_FUCHSIA_extension_364\"",
                                "@name": "VK_FUCHSIA_EXTENSION_364_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_FUCHSIA_external_memory",
                    "@number": "365",
                    "@type": "device",
                    "@requires": "VK_KHR_external_memory_capabilities,VK_KHR_external_memory",
                    "@author": "FUCHSIA",
                    "@contact": "John Rosasco @rosasco",
                    "@platform": "fuchsia",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_FUCHSIA_EXTERNAL_MEMORY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_FUCHSIA_external_memory\"",
                                "@name": "VK_FUCHSIA_EXTERNAL_MEMORY_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA"
                            },
                            {
                                "@bitpos": "11",
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImportMemoryZirconHandleInfoFUCHSIA"
                            },
                            {
                                "@name": "VkMemoryZirconHandlePropertiesFUCHSIA"
                            },
                            {
                                "@name": "VkMemoryGetZirconHandleInfoFUCHSIA"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetMemoryZirconHandleFUCHSIA"
                            },
                            {
                                "@name": "vkGetMemoryZirconHandlePropertiesFUCHSIA"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_FUCHSIA_external_semaphore",
                    "@number": "366",
                    "@type": "device",
                    "@requires": "VK_KHR_external_semaphore_capabilities,VK_KHR_external_semaphore",
                    "@author": "FUCHSIA",
                    "@contact": "John Rosasco @rosasco",
                    "@platform": "fuchsia",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_FUCHSIA_EXTERNAL_SEMAPHORE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_FUCHSIA_external_semaphore\"",
                                "@name": "VK_FUCHSIA_EXTERNAL_SEMAPHORE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA"
                            },
                            {
                                "@bitpos": "7",
                                "@extends": "VkExternalSemaphoreHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkImportSemaphoreZirconHandleInfoFUCHSIA"
                            },
                            {
                                "@name": "VkSemaphoreGetZirconHandleInfoFUCHSIA"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkImportSemaphoreZirconHandleFUCHSIA"
                            },
                            {
                                "@name": "vkGetSemaphoreZirconHandleFUCHSIA"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_FUCHSIA_buffer_collection",
                    "@number": "367",
                    "@type": "device",
                    "@requires": "VK_FUCHSIA_external_memory,VK_KHR_sampler_ycbcr_conversion",
                    "@author": "FUCHSIA",
                    "@contact": "John Rosasco @rosasco",
                    "@supported": "vulkan",
                    "@platform": "fuchsia",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_FUCHSIA_BUFFER_COLLECTION_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_FUCHSIA_buffer_collection\"",
                                "@name": "VK_FUCHSIA_BUFFER_COLLECTION_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkObjectType",
                                "@name": "VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA",
                                "@comment": "VkBufferCollectionFUCHSIA"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDebugReportObjectTypeEXT",
                                "@name": "VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA"
                            },
                            {
                                "@offset": "4",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA"
                            },
                            {
                                "@offset": "5",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA"
                            },
                            {
                                "@offset": "6",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA"
                            },
                            {
                                "@offset": "7",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA"
                            },
                            {
                                "@offset": "8",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA"
                            },
                            {
                                "@offset": "9",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkBufferCollectionFUCHSIA"
                            },
                            {
                                "@name": "VkBufferCollectionCreateInfoFUCHSIA"
                            },
                            {
                                "@name": "VkImportMemoryBufferCollectionFUCHSIA"
                            },
                            {
                                "@name": "VkBufferCollectionImageCreateInfoFUCHSIA"
                            },
                            {
                                "@name": "VkBufferConstraintsInfoFUCHSIA"
                            },
                            {
                                "@name": "VkBufferCollectionBufferCreateInfoFUCHSIA"
                            },
                            {
                                "@name": "VkBufferCollectionPropertiesFUCHSIA"
                            },
                            {
                                "@name": "VkImageFormatConstraintsFlagsFUCHSIA",
                                "@comment": "Will add VkImageFormatConstraintsFlagBitsFUCHSIA when bits are defined in the future"
                            },
                            {
                                "@name": "VkSysmemColorSpaceFUCHSIA"
                            },
                            {
                                "@name": "VkImageConstraintsInfoFlagBitsFUCHSIA"
                            },
                            {
                                "@name": "VkImageConstraintsInfoFlagsFUCHSIA"
                            },
                            {
                                "@name": "VkImageConstraintsInfoFUCHSIA"
                            },
                            {
                                "@name": "VkImageFormatConstraintsInfoFUCHSIA"
                            },
                            {
                                "@name": "VkBufferCollectionConstraintsInfoFUCHSIA"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateBufferCollectionFUCHSIA"
                            },
                            {
                                "@name": "vkSetBufferCollectionImageConstraintsFUCHSIA"
                            },
                            {
                                "@name": "vkSetBufferCollectionBufferConstraintsFUCHSIA"
                            },
                            {
                                "@name": "vkDestroyBufferCollectionFUCHSIA"
                            },
                            {
                                "@name": "vkGetBufferCollectionPropertiesFUCHSIA"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_FUCHSIA_extension_368",
                    "@number": "368",
                    "@author": "FUCHSIA",
                    "@contact": "Craig Stout @cdotstout",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_FUCHSIA_EXTENSION_368_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_FUCHSIA_extension_368\"",
                                "@name": "VK_FUCHSIA_EXTENSION_368_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_369",
                    "@number": "369",
                    "@author": "QCOM",
                    "@contact": "Matthew Netsch @mnetsch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_369_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_369\"",
                                "@name": "VK_QCOM_EXTENSION_369_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "4",
                                "@extends": "VkDescriptorBindingFlagBits",
                                "@name": "VK_DESCRIPTOR_BINDING_RESERVED_4_BIT_QCOM"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_HUAWEI_subpass_shading",
                    "@number": "370",
                    "@type": "device",
                    "@author": "HUAWEI",
                    "@contact": "Hueilong Wang @wyvernathuawei",
                    "@requires": "VK_KHR_create_renderpass2,VK_KHR_synchronization2",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_HUAWEI_SUBPASS_SHADING_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_HUAWEI_subpass_shading\"",
                                "@name": "VK_HUAWEI_SUBPASS_SHADING_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkPipelineBindPoint",
                                "@extnumber": "370",
                                "@name": "VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI"
                            },
                            {
                                "@bitpos": "39",
                                "@extends": "VkPipelineStageFlagBits2",
                                "@name": "VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI"
                            },
                            {
                                "@bitpos": "14",
                                "@extends": "VkShaderStageFlagBits",
                                "@name": "VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkSubpassShadingPipelineCreateInfoHUAWEI"
                            },
                            {
                                "@name": "VkPhysicalDeviceSubpassShadingFeaturesHUAWEI"
                            },
                            {
                                "@name": "VkPhysicalDeviceSubpassShadingPropertiesHUAWEI"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI"
                            },
                            {
                                "@name": "vkCmdSubpassShadingHUAWEI"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_HUAWEI_invocation_mask",
                    "@number": "371",
                    "@type": "device",
                    "@requires": "VK_KHR_ray_tracing_pipeline,VK_KHR_synchronization2",
                    "@author": "Huawei",
                    "@contact": "Yunpeng Zhu @yunxingzhu",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_HUAWEI_INVOCATION_MASK_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_HUAWEI_invocation_mask\"",
                                "@name": "VK_HUAWEI_INVOCATION_MASK_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI"
                            },
                            {
                                "@bitpos": "39",
                                "@extends": "VkAccessFlagBits2",
                                "@name": "VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI"
                            },
                            {
                                "@bitpos": "18",
                                "@extends": "VkImageUsageFlagBits",
                                "@name": "VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI"
                            },
                            {
                                "@bitpos": "40",
                                "@extends": "VkPipelineStageFlagBits2",
                                "@name": "VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceInvocationMaskFeaturesHUAWEI"
                        },
                        "command": [
                            {
                                "@name": "vkCmdBindInvocationMaskHUAWEI"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_external_memory_rdma",
                    "@number": "372",
                    "@type": "device",
                    "@requires": "VK_KHR_external_memory",
                    "@author": "NV",
                    "@contact": "Carsten Rohde @crohde",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_NV_EXTERNAL_MEMORY_RDMA_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_external_memory_rdma\"",
                                "@name": "VK_NV_EXTERNAL_MEMORY_RDMA_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV"
                            },
                            {
                                "@bitpos": "8",
                                "@extends": "VkMemoryPropertyFlagBits",
                                "@name": "VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV"
                            },
                            {
                                "@bitpos": "12",
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkRemoteAddressNV"
                            },
                            {
                                "@name": "VkMemoryGetRemoteAddressInfoNV"
                            },
                            {
                                "@name": "VkPhysicalDeviceExternalMemoryRDMAFeaturesNV"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetMemoryRemoteAddressNV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_373",
                    "@number": "373",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_373_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_373\"",
                                "@name": "VK_NV_EXTENSION_373_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_374",
                    "@number": "374",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_374_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_374\"",
                                "@name": "VK_NV_EXTENSION_374_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "4",
                                "@extends": "VkExternalFenceHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_RESERVED_4_BIT_NV"
                            },
                            {
                                "@bitpos": "5",
                                "@extends": "VkExternalFenceHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_RESERVED_5_BIT_NV"
                            },
                            {
                                "@bitpos": "5",
                                "@extends": "VkExternalSemaphoreHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_RESERVED_5_BIT_NV"
                            },
                            {
                                "@bitpos": "6",
                                "@extends": "VkExternalSemaphoreHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_RESERVED_6_BIT_NV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_375",
                    "@number": "375",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_375_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_375\"",
                                "@name": "VK_NV_EXTENSION_375_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "13",
                                "@extends": "VkExternalMemoryHandleTypeFlagBits",
                                "@name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_RESERVED_13_BIT_NV"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_376",
                    "@number": "376",
                    "@author": "EXT",
                    "@contact": "Melih Yasin Yalcin @yalcinmelihyasin",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_376_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_376\"",
                                "@name": "VK_EXT_EXTENSION_376_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_377",
                    "@number": "377",
                    "@author": "EXT",
                    "@contact": "Shahbaz Youssefi @syoussefi",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_377_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_377\"",
                                "@name": "VK_EXT_EXTENSION_377_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extended_dynamic_state2",
                    "@number": "378",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Vikram Kushwaha @vkushwaha-nv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_EXTENDED_DYNAMIC_STATE_2_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extended_dynamic_state2\"",
                                "@name": "VK_EXT_EXTENDED_DYNAMIC_STATE_2_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT",
                                "@comment": "Not promoted to 1.3"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT",
                                "@comment": "Not promoted to 1.3"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT",
                                "@alias": "VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT",
                                "@alias": "VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE"
                            },
                            {
                                "@offset": "3",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_LOGIC_OP_EXT",
                                "@comment": "Not promoted to 1.3"
                            },
                            {
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT",
                                "@alias": "VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDeviceExtendedDynamicState2FeaturesEXT",
                            "@comment": "Not promoted to 1.3"
                        },
                        "command": [
                            {
                                "@name": "vkCmdSetPatchControlPointsEXT",
                                "@comment": "Not promoted to 1.3"
                            },
                            {
                                "@name": "vkCmdSetRasterizerDiscardEnableEXT"
                            },
                            {
                                "@name": "vkCmdSetDepthBiasEnableEXT"
                            },
                            {
                                "@name": "vkCmdSetLogicOpEXT",
                                "@comment": "Not promoted to 1.3"
                            },
                            {
                                "@name": "vkCmdSetPrimitiveRestartEnableEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QNX_screen_surface",
                    "@number": "379",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@platform": "screen",
                    "@author": "QNX",
                    "@contact": "Mike Gorchak @mgorchak-blackberry",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_QNX_SCREEN_SURFACE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QNX_screen_surface\"",
                                "@name": "VK_QNX_SCREEN_SURFACE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkScreenSurfaceCreateFlagsQNX"
                            },
                            {
                                "@name": "VkScreenSurfaceCreateInfoQNX"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCreateScreenSurfaceQNX"
                            },
                            {
                                "@name": "vkGetPhysicalDeviceScreenPresentationSupportQNX"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_380",
                    "@number": "380",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_380_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_380\"",
                                "@name": "VK_KHR_EXTENSION_380_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_381",
                    "@number": "381",
                    "@author": "KHR",
                    "@contact": "James Jones @cubanismo",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_381_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_381\"",
                                "@name": "VK_KHR_EXTENSION_381_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_color_write_enable",
                    "@number": "382",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Sharif Elcott @selcott",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_COLOR_WRITE_ENABLE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_color_write_enable\"",
                                "@name": "VK_EXT_COLOR_WRITE_ENABLE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkDynamicState",
                                "@name": "VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceColorWriteEnableFeaturesEXT"
                            },
                            {
                                "@name": "VkPipelineColorWriteCreateInfoEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdSetColorWriteEnableEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_383",
                    "@number": "383",
                    "@author": "EXT",
                    "@contact": "Shahbaz Youssefi @syoussefi",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_383_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_383\"",
                                "@name": "VK_EXT_EXTENSION_383_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_384",
                    "@number": "384",
                    "@type": "instance",
                    "@author": "EXT",
                    "@contact": "Chia-I Wu @olvaffe1",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_384_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_384\"",
                                "@name": "VK_EXT_EXTENSION_384_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_MESA_extension_385",
                    "@number": "385",
                    "@type": "instance",
                    "@author": "MESA",
                    "@contact": "Chia-I Wu @olvaffe1",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_MESA_EXTENSION_385_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_MESA_extension_385\"",
                                "@name": "VK_MESA_EXTENSION_385_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GOOGLE_extension_386",
                    "@number": "386",
                    "@author": "GOOGLE",
                    "@contact": "Chia-I Wu @olvaffe1",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GOOGLE_EXTENSION_386_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_extension_386\"",
                                "@name": "VK_GOOGLE_EXTENSION_386_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_387",
                    "@number": "387",
                    "@author": "KHR",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_387_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_387\"",
                                "@name": "VK_KHR_EXTENSION_387_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "28",
                                "@extends": "VkPipelineStageFlagBits2",
                                "@name": "VK_PIPELINE_STAGE_2_RESERVED_387_BIT_KHR"
                            },
                            {
                                "@bitpos": "40",
                                "@extends": "VkAccessFlagBits2",
                                "@name": "VK_ACCESS_2_RESERVED_387_BIT_KHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_388",
                    "@number": "388",
                    "@author": "EXT",
                    "@contact": "Alan Baker @alan-baker",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_388_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_388\"",
                                "@name": "VK_EXT_EXTENSION_388_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_global_priority_query",
                    "@number": "389",
                    "@type": "device",
                    "@requires": "VK_EXT_global_priority,VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Yiwei Zhang @zhangyiwei",
                    "@supported": "vulkan",
                    "@promotedto": "VK_KHR_global_priority",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_GLOBAL_PRIORITY_QUERY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_global_priority_query\"",
                                "@name": "VK_EXT_GLOBAL_PRIORITY_QUERY_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@alias": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR",
                                "@name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT"
                            },
                            {
                                "@name": "VK_MAX_GLOBAL_PRIORITY_SIZE_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT"
                            },
                            {
                                "@name": "VkQueueFamilyGlobalPriorityPropertiesEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_390",
                    "@number": "390",
                    "@author": "EXT",
                    "@contact": "Joshua Ashton @Joshua-Ashton",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_390_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_390\"",
                                "@name": "VK_EXT_EXTENSION_390_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_391",
                    "@number": "391",
                    "@author": "EXT",
                    "@contact": "Joshua Ashton @Joshua-Ashton",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_391_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_391\"",
                                "@name": "VK_EXT_EXTENSION_391_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_image_view_min_lod",
                    "@number": "392",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2",
                    "@author": "EXT",
                    "@contact": "Joshua Ashton @Joshua-Ashton",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_IMAGE_VIEW_MIN_LOD_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_image_view_min_lod\"",
                                "@name": "VK_EXT_IMAGE_VIEW_MIN_LOD_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceImageViewMinLodFeaturesEXT"
                            },
                            {
                                "@name": "VkImageViewMinLodCreateInfoEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_multi_draw",
                    "@number": "393",
                    "@author": "EXT",
                    "@contact": "Mike Blumenkrantz @zmike",
                    "@type": "device",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_MULTI_DRAW_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_multi_draw\"",
                                "@name": "VK_EXT_MULTI_DRAW_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceMultiDrawFeaturesEXT"
                            },
                            {
                                "@name": "VkPhysicalDeviceMultiDrawPropertiesEXT"
                            },
                            {
                                "@name": "VkMultiDrawInfoEXT"
                            },
                            {
                                "@name": "VkMultiDrawIndexedInfoEXT"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkCmdDrawMultiEXT"
                            },
                            {
                                "@name": "vkCmdDrawMultiIndexedEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_394",
                    "@number": "394",
                    "@author": "EXT",
                    "@contact": "Mike Blumenkrantz @zmike",
                    "@type": "device",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_394_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_394\"",
                                "@name": "VK_EXT_EXTENSION_394_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkImageCreateFlagBits",
                                "@bitpos": "17",
                                "@name": "VK_IMAGE_CREATE_RESERVED_394_BIT_EXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_395",
                    "@number": "395",
                    "@author": "KHR",
                    "@contact": "Lenny Komow @lkomow",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_395_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_395\"",
                                "@name": "VK_KHR_EXTENSION_395_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_396",
                    "@number": "396",
                    "@author": "EXT",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_396_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_396\"",
                                "@name": "VK_KHR_EXTENSION_396_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_397",
                    "@number": "397",
                    "@author": "NV",
                    "@contact": "Christoph Kubisch @pixeljetstream",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_397_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_397\"",
                                "@name": "VK_NV_EXTENSION_397_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_398",
                    "@number": "398",
                    "@author": "NV",
                    "@contact": "Christoph Kubisch @pixeljetstream",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_398_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_398\"",
                                "@name": "VK_NV_EXTENSION_398_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_JUICE_extension_399",
                    "@number": "399",
                    "@author": "JUICE",
                    "@contact": "Dean Beeler @canadacow",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_JUICE_EXTENSION_399_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_JUICE_extension_399\"",
                                "@name": "VK_JUICE_EXTENSION_399_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_JUICE_extension_400",
                    "@number": "400",
                    "@author": "JUICE",
                    "@contact": "David McCloskey @damcclos",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_JUICE_EXTENSION_400_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_JUICE_extension_400\"",
                                "@name": "VK_JUICE_EXTENSION_400_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_load_store_op_none",
                    "@number": "401",
                    "@author": "EXT",
                    "@type": "device",
                    "@contact": "Shahbaz Youssefi @syoussefi",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_LOAD_STORE_OP_NONE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_load_store_op_none\"",
                                "@name": "VK_EXT_LOAD_STORE_OP_NONE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkAttachmentLoadOp",
                                "@name": "VK_ATTACHMENT_LOAD_OP_NONE_EXT"
                            },
                            {
                                "@extends": "VkAttachmentStoreOp",
                                "@name": "VK_ATTACHMENT_STORE_OP_NONE_EXT",
                                "@alias": "VK_ATTACHMENT_STORE_OP_NONE"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_FB_extension_402",
                    "@number": "402",
                    "@author": "FB",
                    "@contact": "Artem Bolgar @artyom17",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_FB_EXTENSION_402_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_FB_extension_402\"",
                                "@name": "VK_FB_EXTENSION_402_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_FB_extension_403",
                    "@number": "403",
                    "@author": "FB",
                    "@contact": "Artem Bolgar @artyom17",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_FB_EXTENSION_403_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_FB_extension_403\"",
                                "@name": "VK_FB_EXTENSION_403_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_FB_extension_404",
                    "@number": "404",
                    "@author": "FB",
                    "@contact": "Artem Bolgar @artyom17",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_FB_EXTENSION_404_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_FB_extension_404\"",
                                "@name": "VK_FB_EXTENSION_404_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_HUAWEI_extension_405",
                    "@number": "405",
                    "@author": "HUAWEI",
                    "@contact": "Hueilong Wang @wyvernathuawei",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_HUAWEI_EXTENSION_405_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_HUAWEI_extension_405\"",
                                "@name": "VK_HUAWEI_EXTENSION_405_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_HUAWEI_extension_406",
                    "@number": "406",
                    "@author": "HUAWEI",
                    "@contact": "Hueilong Wang @wyvernathuawei",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_HUAWEI_EXTENSION_406_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_HUAWEI_extension_406\"",
                                "@name": "VK_HUAWEI_EXTENSION_406_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GGP_extension_407",
                    "@number": "407",
                    "@author": "GGP",
                    "@contact": "J.D. Rouan @jdrouan",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GGP_EXTENSION_407_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GGP_extension_407\"",
                                "@name": "VK_GGP_EXTENSION_407_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GGP_extension_408",
                    "@number": "408",
                    "@author": "GGP",
                    "@contact": "J.D. Rouan @jdrouan",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GGP_EXTENSION_408_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GGP_extension_408\"",
                                "@name": "VK_GGP_EXTENSION_408_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GGP_extension_409",
                    "@number": "409",
                    "@author": "GGP",
                    "@contact": "J.D. Rouan @jdrouan",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GGP_EXTENSION_409_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GGP_extension_409\"",
                                "@name": "VK_GGP_EXTENSION_409_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GGP_extension_410",
                    "@number": "410",
                    "@author": "GGP",
                    "@contact": "J.D. Rouan @jdrouan",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GGP_EXTENSION_410_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GGP_extension_410\"",
                                "@name": "VK_GGP_EXTENSION_410_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GGP_extension_411",
                    "@number": "411",
                    "@author": "GGP",
                    "@contact": "J.D. Rouan @jdrouan",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_GGP_EXTENSION_411_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GGP_extension_411\"",
                                "@name": "VK_GGP_EXTENSION_411_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_border_color_swizzle",
                    "@number": "412",
                    "@type": "device",
                    "@author": "EXT",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "@requires": "VK_EXT_custom_border_color",
                    "@specialuse": "glemulation,d3demulation",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_BORDER_COLOR_SWIZZLE_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_border_color_swizzle\"",
                                "@name": "VK_EXT_BORDER_COLOR_SWIZZLE_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceBorderColorSwizzleFeaturesEXT"
                            },
                            {
                                "@name": "VkSamplerBorderColorComponentMappingCreateInfoEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_pageable_device_local_memory",
                    "@number": "413",
                    "@author": "EXT",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@type": "device",
                    "@requires": "VK_EXT_memory_priority",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_pageable_device_local_memory\"",
                                "@name": "VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT"
                            }
                        ],
                        "type": {
                            "@name": "VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT"
                        },
                        "command": [
                            {
                                "@name": "vkSetDeviceMemoryPriorityEXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_maintenance4",
                    "@number": "414",
                    "@type": "device",
                    "@requiresCore": "1.1",
                    "@author": "KHR",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "vulkan",
                    "@promotedto": "VK_VERSION_1_3",
                    "require": {
                        "enum": [
                            {
                                "@value": "2",
                                "@name": "VK_KHR_MAINTENANCE_4_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_maintenance4\"",
                                "@name": "VK_KHR_MAINTENANCE_4_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS"
                            },
                            {
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR",
                                "@alias": "VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS"
                            },
                            {
                                "@value": "0",
                                "@extends": "VkImageAspectFlagBits",
                                "@name": "VK_IMAGE_ASPECT_NONE_KHR"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceMaintenance4FeaturesKHR"
                            },
                            {
                                "@name": "VkPhysicalDeviceMaintenance4PropertiesKHR"
                            },
                            {
                                "@name": "VkDeviceBufferMemoryRequirementsKHR"
                            },
                            {
                                "@name": "VkDeviceImageMemoryRequirementsKHR"
                            }
                        ],
                        "command": [
                            {
                                "@name": "vkGetDeviceBufferMemoryRequirementsKHR"
                            },
                            {
                                "@name": "vkGetDeviceImageMemoryRequirementsKHR"
                            },
                            {
                                "@name": "vkGetDeviceImageSparseMemoryRequirementsKHR"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_HUAWEI_extension_415",
                    "@number": "415",
                    "@author": "HUAWEI",
                    "@contact": "Hueilong Wang @wyvernathuawei",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_HUAWEI_EXTENSION_415_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_HUAWEI_extension_415\"",
                                "@name": "VK_HUAWEI_EXTENSION_415_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_ARM_extension_416",
                    "@number": "416",
                    "@author": "ARM",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_ARM_EXTENSION_416_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_ARM_extension_416\"",
                                "@name": "VK_ARM_EXTENSION_416_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_417",
                    "@number": "417",
                    "@author": "KHR",
                    "@contact": "Kevin Petit @kevinpetit",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_417_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_417\"",
                                "@name": "VK_KHR_EXTENSION_417_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_ARM_extension_418",
                    "@number": "418",
                    "@author": "ARM",
                    "@contact": "Kevin Petit @kevinpetit",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_ARM_EXTENSION_418_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_ARM_extension_418\"",
                                "@name": "VK_ARM_EXTENSION_418_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_419",
                    "@number": "419",
                    "@author": "EXT",
                    "@contact": "Mike Blumenkrantz @zmike",
                    "@type": "device",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_419_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_419\"",
                                "@name": "VK_EXT_EXTENSION_419_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_420",
                    "@number": "420",
                    "@author": "EXT",
                    "@contact": "Mike Blumenkrantz @zmike",
                    "@type": "device",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_420_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_420\"",
                                "@name": "VK_EXT_EXTENSION_420_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_421",
                    "@number": "421",
                    "@author": "KHR",
                    "@contact": "Hans-Kristian Arntzen @HansKristian-Work",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_421_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_421\"",
                                "@name": "VK_KHR_EXTENSION_421_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_422",
                    "@number": "422",
                    "@author": "EXT",
                    "@contact": "Graeme Leese @gnl21",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_422_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_422\"",
                                "@name": "VK_EXT_EXTENSION_422_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_disable_cube_map_wrap",
                    "@number": "423",
                    "@author": "EXT",
                    "@contact": "Georg Lehmann @DadSchoorse",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_DISABLE_CUBE_MAP_WRAP_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_disable_cube_map_wrap\"",
                                "@name": "VK_EXT_DISABLE_CUBE_MAP_WRAP_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "2",
                                "@extends": "VkSamplerCreateFlagBits",
                                "@name": "VK_SAMPLER_CREATE_RESERVED_2_BIT_EXT"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_ARM_extension_424",
                    "@number": "424",
                    "@author": "ARM",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_ARM_EXTENSION_424_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_ARM_extension_424\"",
                                "@name": "VK_ARM_EXTENSION_424_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_ARM_extension_425",
                    "@number": "425",
                    "@author": "ARM",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_ARM_EXTENSION_425_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_ARM_extension_425\"",
                                "@name": "VK_ARM_EXTENSION_425_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_fragment_density_map_offset",
                    "@number": "426",
                    "@type": "device",
                    "@requires": "VK_KHR_get_physical_device_properties2,VK_EXT_fragment_density_map",
                    "@author": "QCOM",
                    "@contact": "Matthew Netsch @mnetsch",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_fragment_density_map_offset\"",
                                "@name": "VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_EXTENSION_NAME"
                            },
                            {
                                "@offset": "0",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM"
                            },
                            {
                                "@offset": "1",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM"
                            },
                            {
                                "@offset": "2",
                                "@extends": "VkStructureType",
                                "@name": "VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM"
                            },
                            {
                                "@bitpos": "15",
                                "@extends": "VkImageCreateFlagBits",
                                "@name": "VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM"
                            }
                        ],
                        "type": [
                            {
                                "@name": "VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM"
                            },
                            {
                                "@name": "VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM"
                            },
                            {
                                "@name": "VkSubpassFragmentDensityMapOffsetEndInfoQCOM"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_427",
                    "@number": "427",
                    "@author": "NV",
                    "@contact": "Vikram Kushwaha @vkushwaha-nv",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_427_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_427\"",
                                "@name": "VK_NV_EXTENSION_427_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_428",
                    "@number": "428",
                    "@author": "NV",
                    "@contact": "Vikram Kushwaha @vkushwaha-nv",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_428_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_428\"",
                                "@name": "VK_NV_EXTENSION_428_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_429",
                    "@number": "429",
                    "@author": "NV",
                    "@contact": "Vikram Kushwaha @vkushwaha-nv",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_429_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_429\"",
                                "@name": "VK_NV_EXTENSION_429_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_430",
                    "@number": "430",
                    "@author": "NV",
                    "@contact": "Vikram Kushwaha @vkushwaha-nv",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_430_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_430\"",
                                "@name": "VK_NV_EXTENSION_430_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_linear_color_attachment",
                    "@number": "431",
                    "@type": "device",
                    "@author": "NVIDIA",
                    "@contact": "sourav parmar @souravpNV",
                    "@supported": "vulkan",
                    "require": [
                        {
                            "enum": [
                                {
                                    "@value": "1",
                                    "@name": "VK_NV_LINEAR_COLOR_ATTACHMENT_SPEC_VERSION"
                                },
                                {
                                    "@value": "\"VK_NV_linear_color_attachment\"",
                                    "@name": "VK_NV_LINEAR_COLOR_ATTACHMENT_EXTENSION_NAME"
                                },
                                {
                                    "@offset": "0",
                                    "@extends": "VkStructureType",
                                    "@name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV"
                                }
                            ],
                            "type": {
                                "@name": "VkPhysicalDeviceLinearColorAttachmentFeaturesNV"
                            }
                        },
                        {
                            "@extension": "VK_KHR_format_feature_flags2",
                            "enum": [
                                {
                                    "@bitpos": "38",
                                    "@extends": "VkFormatFeatureFlagBits2",
                                    "@name": "VK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV",
                                    "@comment": "Format support linear image as render target, it cannot be mixed with non linear attachment"
                                }
                            ]
                        }
                    ]
                },
                {
                    "@name": "VK_NV_extension_432",
                    "@number": "432",
                    "@author": "NV",
                    "@contact": "Sourav Parmar @souravpNV",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_432_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_432\"",
                                "@name": "VK_NV_EXTENSION_432_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_433",
                    "@number": "433",
                    "@author": "NV",
                    "@contact": "Sourav Parmar @souravpNV",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_433_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_433\"",
                                "@name": "VK_NV_EXTENSION_433_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_GOOGLE_surfaceless_query",
                    "@number": "434",
                    "@type": "instance",
                    "@requires": "VK_KHR_surface",
                    "@author": "GOOGLE",
                    "@contact": "Shahbaz Youssefi @syoussefi",
                    "@specialuse": "glemulation",
                    "@supported": "vulkan",
                    "require": {
                        "enum": [
                            {
                                "@value": "1",
                                "@name": "VK_GOOGLE_SURFACELESS_QUERY_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_GOOGLE_surfaceless_query\"",
                                "@name": "VK_GOOGLE_SURFACELESS_QUERY_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_KHR_extension_435",
                    "@number": "435",
                    "@author": "KHR",
                    "@contact": "Alan Baker @alan-baker",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_KHR_EXTENSION_435_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_KHR_extension_435\"",
                                "@name": "VK_KHR_EXTENSION_435_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_436",
                    "@number": "436",
                    "@author": "NV",
                    "@contact": "Daniel Koch @dgkoch",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_436_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_436\"",
                                "@name": "VK_NV_EXTENSION_436_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_437",
                    "@number": "437",
                    "@author": "EXT",
                    "@contact": "Jonathan Weinstein @Jonathan-Weinstein",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_437_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_437\"",
                                "@name": "VK_EXT_EXTENSION_437_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_EXT_extension_438",
                    "@number": "438",
                    "@author": "EXT",
                    "@contact": "Jan-Harald Fredriksen @janharaldfredriksen-arm",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_EXT_EXTENSION_438_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_EXT_extension_438\"",
                                "@name": "VK_EXT_EXTENSION_438_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_SEC_extension_439",
                    "@number": "439",
                    "@author": "SEC",
                    "@contact": "Ralph Potter gitlab:@r_potter",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_SEC_EXTENSION_439_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_SEC_extension_439\"",
                                "@name": "VK_SEC_EXTENSION_439_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_440",
                    "@number": "440",
                    "@author": "QCOM",
                    "@contact": "Jeff Leger @jackohound",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_440_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_440\"",
                                "@name": "VK_QCOM_EXTENSION_440_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "7",
                                "@extends": "VkQueueFlagBits",
                                "@name": "VK_QUEUE_RESERVED_7_BIT_QCOM"
                            },
                            {
                                "@bitpos": "1",
                                "@extends": "VkDeviceQueueCreateFlagBits",
                                "@name": "VK_DEVICE_QUEUE_CREATE_RESERVED_1_BIT_QCOM"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_QCOM_extension_441",
                    "@number": "441",
                    "@author": "QCOM",
                    "@contact": "Jeff Leger @jackohound",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_QCOM_EXTENSION_441_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_QCOM_extension_441\"",
                                "@name": "VK_QCOM_EXTENSION_441_EXTENSION_NAME"
                            },
                            {
                                "@bitpos": "4",
                                "@extends": "VkSamplerCreateFlagBits",
                                "@name": "VK_SAMPLER_CREATE_IMAGE_PROCESSING_BIT_QCOM"
                            },
                            {
                                "@bitpos": "20",
                                "@extends": "VkImageUsageFlagBits",
                                "@name": "VK_IMAGE_USAGE_RESERVED_20_BIT_QCOM"
                            },
                            {
                                "@bitpos": "21",
                                "@extends": "VkImageUsageFlagBits",
                                "@name": "VK_IMAGE_USAGE_RESERVED_21_BIT_QCOM"
                            },
                            {
                                "@bitpos": "34",
                                "@extends": "VkFormatFeatureFlagBits2",
                                "@name": "VK_FORMAT_FEATURE_2_RESERVED_34_BIT_QCOM"
                            },
                            {
                                "@bitpos": "35",
                                "@extends": "VkFormatFeatureFlagBits2",
                                "@name": "VK_FORMAT_FEATURE_2_RESERVED_35_BIT_QCOM"
                            },
                            {
                                "@bitpos": "36",
                                "@extends": "VkFormatFeatureFlagBits2",
                                "@name": "VK_FORMAT_FEATURE_2_RESERVED_36_BIT_QCOM"
                            },
                            {
                                "@bitpos": "37",
                                "@extends": "VkFormatFeatureFlagBits2",
                                "@name": "VK_FORMAT_FEATURE_2_RESERVED_37_BIT_QCOM"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_COREAVI_extension_442",
                    "@number": "442",
                    "@author": "COREAVI",
                    "@contact": "Aidan Fabius @afabius",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_COREAVI_EXTENSION_442_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_COREAVI_extension_442\"",
                                "@name": "VK_COREAVI_EXTENSION_442_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_COREAVI_extension_443",
                    "@number": "443",
                    "@author": "COREAVI",
                    "@contact": "Aidan Fabius @afabius",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_COREAVI_EXTENSION_443_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_COREAVI_extension_443\"",
                                "@name": "VK_COREAVI_EXTENSION_443_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_COREAVI_extension_444",
                    "@number": "444",
                    "@author": "COREAVI",
                    "@contact": "Aidan Fabius @afabius",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_COREAVI_EXTENSION_444_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_COREAVI_extension_444\"",
                                "@name": "VK_COREAVI_EXTENSION_444_EXTENSION_NAME"
                            },
                            {
                                "@extends": "VkCommandPoolResetFlagBits",
                                "@bitpos": "1",
                                "@name": "VK_COMMAND_POOL_RESET_RESERVED_1_BIT_COREAVI"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_COREAVI_extension_445",
                    "@number": "445",
                    "@author": "COREAVI",
                    "@contact": "Aidan Fabius @afabius",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_COREAVI_EXTENSION_445_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_COREAVI_extension_445\"",
                                "@name": "VK_COREAVI_EXTENSION_445_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_COREAVI_extension_446",
                    "@number": "446",
                    "@author": "COREAVI",
                    "@contact": "Aidan Fabius @afabius",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_COREAVI_EXTENSION_446_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_COREAVI_extension_446\"",
                                "@name": "VK_COREAVI_EXTENSION_446_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_COREAVI_extension_447",
                    "@number": "447",
                    "@author": "COREAVI",
                    "@contact": "Aidan Fabius @afabius",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_COREAVI_EXTENSION_447_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_COREAVI_extension_447\"",
                                "@name": "VK_COREAVI_EXTENSION_447_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_SEC_extension_448",
                    "@number": "448",
                    "@author": "SEC",
                    "@contact": "Ralph Potter gitlab:@r_potter",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_SEC_EXTENSION_448_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_SEC_extension_448\"",
                                "@name": "VK_SEC_EXTENSION_448_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_SEC_extension_449",
                    "@number": "449",
                    "@author": "SEC",
                    "@contact": "Ralph Potter gitlab:@r_potter",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_SEC_EXTENSION_449_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_SEC_extension_449\"",
                                "@name": "VK_SEC_EXTENSION_449_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_SEC_extension_450",
                    "@number": "450",
                    "@author": "SEC",
                    "@contact": "Ralph Potter gitlab:@r_potter",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_SEC_EXTENSION_450_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_SEC_extension_450\"",
                                "@name": "VK_SEC_EXTENSION_450_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_SEC_extension_451",
                    "@number": "451",
                    "@author": "SEC",
                    "@contact": "Ralph Potter gitlab:@r_potter",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_SEC_EXTENSION_451_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_SEC_extension_451\"",
                                "@name": "VK_SEC_EXTENSION_451_EXTENSION_NAME"
                            }
                        ]
                    }
                },
                {
                    "@name": "VK_NV_extension_452",
                    "@number": "452",
                    "@author": "NV",
                    "@contact": "Piers Daniell @pdaniell-nv",
                    "@supported": "disabled",
                    "require": {
                        "enum": [
                            {
                                "@value": "0",
                                "@name": "VK_NV_EXTENSION_452_SPEC_VERSION"
                            },
                            {
                                "@value": "\"VK_NV_extension_452\"",
                                "@name": "VK_NV_EXTENSION_452_EXTENSION_NAME"
                            }
                        ]
                    }
                }
            ]
        },
        "formats": {
            "format": [
                {
                    "@name": "VK_FORMAT_R4G4_UNORM_PACK8",
                    "@class": "8-bit",
                    "@blockSize": "1",
                    "@texelsPerBlock": "1",
                    "@packed": "8",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R4G4B4A4_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B4G4R4A4_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R5G6B5_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "6",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B5G6R5_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "6",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R5G5B5A1_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "1",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B5G5R5A1_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "1",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A1R5G5B5_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "1",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "5",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8_UNORM",
                    "@class": "8-bit",
                    "@blockSize": "1",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "8",
                        "@numericFormat": "UNORM"
                    },
                    "spirvimageformat": {
                        "@name": "R8"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8_SNORM",
                    "@class": "8-bit",
                    "@blockSize": "1",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "8",
                        "@numericFormat": "SNORM"
                    },
                    "spirvimageformat": {
                        "@name": "R8Snorm"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8_USCALED",
                    "@class": "8-bit",
                    "@blockSize": "1",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "8",
                        "@numericFormat": "USCALED"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8_SSCALED",
                    "@class": "8-bit",
                    "@blockSize": "1",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "8",
                        "@numericFormat": "SSCALED"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8_UINT",
                    "@class": "8-bit",
                    "@blockSize": "1",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "8",
                        "@numericFormat": "UINT"
                    },
                    "spirvimageformat": {
                        "@name": "R8ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8_SINT",
                    "@class": "8-bit",
                    "@blockSize": "1",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "8",
                        "@numericFormat": "SINT"
                    },
                    "spirvimageformat": {
                        "@name": "R8i"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8_SRGB",
                    "@class": "8-bit",
                    "@blockSize": "1",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "8",
                        "@numericFormat": "SRGB"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8G8_UNORM",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg8"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8G8_SNORM",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg8Snorm"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8G8_USCALED",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8_SSCALED",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8_UINT",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg8ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8G8_SINT",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg8i"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8G8_SRGB",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8B8_UNORM",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8B8_SNORM",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8B8_USCALED",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8B8_SSCALED",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8B8_UINT",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8B8_SINT",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8B8_SRGB",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8_UNORM",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8_SNORM",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8_USCALED",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8_SSCALED",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8_UINT",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8_SINT",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8_SRGB",
                    "@class": "24-bit",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8B8A8_UNORM",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba8"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8G8B8A8_SNORM",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba8Snorm"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8G8B8A8_USCALED",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8B8A8_SSCALED",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R8G8B8A8_UINT",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba8ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8G8B8A8_SINT",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba8i"
                    }
                },
                {
                    "@name": "VK_FORMAT_R8G8B8A8_SRGB",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8A8_UNORM",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8A8_SNORM",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8A8_USCALED",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8A8_SSCALED",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8A8_UINT",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8A8_SINT",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8A8_SRGB",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A8B8G8R8_UNORM_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A8B8G8R8_SNORM_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A8B8G8R8_USCALED_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A8B8G8R8_SSCALED_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A8B8G8R8_UINT_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A8B8G8R8_SINT_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A8B8G8R8_SRGB_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A2R10G10B10_UNORM_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A2R10G10B10_SNORM_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "SNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A2R10G10B10_USCALED_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A2R10G10B10_SSCALED_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A2R10G10B10_UINT_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A2R10G10B10_SINT_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A2B10G10R10_UNORM_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgb10A2"
                    }
                },
                {
                    "@name": "VK_FORMAT_A2B10G10R10_SNORM_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "SNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A2B10G10R10_USCALED_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A2B10G10R10_SSCALED_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A2B10G10R10_UINT_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgb10a2ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_A2B10G10R10_SINT_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "2",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16_UNORM",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "16",
                        "@numericFormat": "UNORM"
                    },
                    "spirvimageformat": {
                        "@name": "R16"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16_SNORM",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "16",
                        "@numericFormat": "SNORM"
                    },
                    "spirvimageformat": {
                        "@name": "R16Snorm"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16_USCALED",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "16",
                        "@numericFormat": "USCALED"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16_SSCALED",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "16",
                        "@numericFormat": "SSCALED"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16_UINT",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "16",
                        "@numericFormat": "UINT"
                    },
                    "spirvimageformat": {
                        "@name": "R16ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16_SINT",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "16",
                        "@numericFormat": "SINT"
                    },
                    "spirvimageformat": {
                        "@name": "R16i"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16_SFLOAT",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "16",
                        "@numericFormat": "SFLOAT"
                    },
                    "spirvimageformat": {
                        "@name": "R16f"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16G16_UNORM",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg16"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16G16_SNORM",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SNORM"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg16Snorm"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16G16_USCALED",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16_SSCALED",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16_UINT",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg16ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16G16_SINT",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg16i"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16G16_SFLOAT",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SFLOAT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg16f"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16G16B16_UNORM",
                    "@class": "48-bit",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16B16_SNORM",
                    "@class": "48-bit",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "SNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16B16_USCALED",
                    "@class": "48-bit",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16B16_SSCALED",
                    "@class": "48-bit",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16B16_UINT",
                    "@class": "48-bit",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16B16_SINT",
                    "@class": "48-bit",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16B16_SFLOAT",
                    "@class": "48-bit",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16B16A16_UNORM",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba16"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16G16B16A16_SNORM",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "16",
                            "@numericFormat": "SNORM"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba16Snorm"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16G16B16A16_USCALED",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "USCALED"
                        },
                        {
                            "@name": "A",
                            "@bits": "16",
                            "@numericFormat": "USCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16B16A16_SSCALED",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "SSCALED"
                        },
                        {
                            "@name": "A",
                            "@bits": "16",
                            "@numericFormat": "SSCALED"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R16G16B16A16_UINT",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "A",
                            "@bits": "16",
                            "@numericFormat": "UINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba16ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16G16B16A16_SINT",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "A",
                            "@bits": "16",
                            "@numericFormat": "SINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba16i"
                    }
                },
                {
                    "@name": "VK_FORMAT_R16G16B16A16_SFLOAT",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "16",
                            "@numericFormat": "SFLOAT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba16f"
                    }
                },
                {
                    "@name": "VK_FORMAT_R32_UINT",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "32",
                        "@numericFormat": "UINT"
                    },
                    "spirvimageformat": {
                        "@name": "R32ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_R32_SINT",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "32",
                        "@numericFormat": "SINT"
                    },
                    "spirvimageformat": {
                        "@name": "R32i"
                    }
                },
                {
                    "@name": "VK_FORMAT_R32_SFLOAT",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "32",
                        "@numericFormat": "SFLOAT"
                    },
                    "spirvimageformat": {
                        "@name": "R32f"
                    }
                },
                {
                    "@name": "VK_FORMAT_R32G32_UINT",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "32",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "32",
                            "@numericFormat": "UINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg32ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_R32G32_SINT",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "32",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "32",
                            "@numericFormat": "SINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg32i"
                    }
                },
                {
                    "@name": "VK_FORMAT_R32G32_SFLOAT",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "32",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "32",
                            "@numericFormat": "SFLOAT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rg32f"
                    }
                },
                {
                    "@name": "VK_FORMAT_R32G32B32_UINT",
                    "@class": "96-bit",
                    "@blockSize": "12",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "32",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "32",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "32",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R32G32B32_SINT",
                    "@class": "96-bit",
                    "@blockSize": "12",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "32",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "32",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "32",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R32G32B32_SFLOAT",
                    "@class": "96-bit",
                    "@blockSize": "12",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "32",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "32",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "32",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R32G32B32A32_UINT",
                    "@class": "128-bit",
                    "@blockSize": "16",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "32",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "32",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "32",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "A",
                            "@bits": "32",
                            "@numericFormat": "UINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba32ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_R32G32B32A32_SINT",
                    "@class": "128-bit",
                    "@blockSize": "16",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "32",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "32",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "32",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "A",
                            "@bits": "32",
                            "@numericFormat": "SINT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba32i"
                    }
                },
                {
                    "@name": "VK_FORMAT_R32G32B32A32_SFLOAT",
                    "@class": "128-bit",
                    "@blockSize": "16",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "32",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "32",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "32",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "32",
                            "@numericFormat": "SFLOAT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "Rgba32f"
                    }
                },
                {
                    "@name": "VK_FORMAT_R64_UINT",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "64",
                        "@numericFormat": "UINT"
                    },
                    "spirvimageformat": {
                        "@name": "R64ui"
                    }
                },
                {
                    "@name": "VK_FORMAT_R64_SINT",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "64",
                        "@numericFormat": "SINT"
                    },
                    "spirvimageformat": {
                        "@name": "R64i"
                    }
                },
                {
                    "@name": "VK_FORMAT_R64_SFLOAT",
                    "@class": "64-bit",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "R",
                        "@bits": "64",
                        "@numericFormat": "SFLOAT"
                    }
                },
                {
                    "@name": "VK_FORMAT_R64G64_UINT",
                    "@class": "128-bit",
                    "@blockSize": "16",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "64",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "64",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R64G64_SINT",
                    "@class": "128-bit",
                    "@blockSize": "16",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "64",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "64",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R64G64_SFLOAT",
                    "@class": "128-bit",
                    "@blockSize": "16",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "64",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "64",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R64G64B64_UINT",
                    "@class": "192-bit",
                    "@blockSize": "24",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "64",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "64",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "64",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R64G64B64_SINT",
                    "@class": "192-bit",
                    "@blockSize": "24",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "64",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "64",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "64",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R64G64B64_SFLOAT",
                    "@class": "192-bit",
                    "@blockSize": "24",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "64",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "64",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "64",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R64G64B64A64_UINT",
                    "@class": "256-bit",
                    "@blockSize": "32",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "64",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "64",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "64",
                            "@numericFormat": "UINT"
                        },
                        {
                            "@name": "A",
                            "@bits": "64",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R64G64B64A64_SINT",
                    "@class": "256-bit",
                    "@blockSize": "32",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "64",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "G",
                            "@bits": "64",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "B",
                            "@bits": "64",
                            "@numericFormat": "SINT"
                        },
                        {
                            "@name": "A",
                            "@bits": "64",
                            "@numericFormat": "SINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R64G64B64A64_SFLOAT",
                    "@class": "256-bit",
                    "@blockSize": "32",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "64",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "64",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "64",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "64",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B10G11R11_UFLOAT_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "11",
                            "@numericFormat": "UFLOAT"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UFLOAT"
                        }
                    ],
                    "spirvimageformat": {
                        "@name": "R11fG11fB10f"
                    }
                },
                {
                    "@name": "VK_FORMAT_E5B9G9R9_UFLOAT_PACK32",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "9",
                            "@numericFormat": "UFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "9",
                            "@numericFormat": "UFLOAT"
                        },
                        {
                            "@name": "R",
                            "@bits": "9",
                            "@numericFormat": "UFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_D16_UNORM",
                    "@class": "D16",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "D",
                        "@bits": "16",
                        "@numericFormat": "UNORM"
                    }
                },
                {
                    "@name": "VK_FORMAT_X8_D24_UNORM_PACK32",
                    "@class": "D24",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "32",
                    "component": {
                        "@name": "D",
                        "@bits": "24",
                        "@numericFormat": "UNORM"
                    }
                },
                {
                    "@name": "VK_FORMAT_D32_SFLOAT",
                    "@class": "D32",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "D",
                        "@bits": "32",
                        "@numericFormat": "SFLOAT"
                    }
                },
                {
                    "@name": "VK_FORMAT_S8_UINT",
                    "@class": "S8",
                    "@blockSize": "1",
                    "@texelsPerBlock": "1",
                    "component": {
                        "@name": "S",
                        "@bits": "8",
                        "@numericFormat": "UINT"
                    }
                },
                {
                    "@name": "VK_FORMAT_D16_UNORM_S8_UINT",
                    "@class": "D16S8",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "D",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "S",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_D24_UNORM_S8_UINT",
                    "@class": "D24S8",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "D",
                            "@bits": "24",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "S",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_D32_SFLOAT_S8_UINT",
                    "@class": "D32S8",
                    "@blockSize": "5",
                    "@texelsPerBlock": "1",
                    "component": [
                        {
                            "@name": "D",
                            "@bits": "32",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "S",
                            "@bits": "8",
                            "@numericFormat": "UINT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC1_RGB_UNORM_BLOCK",
                    "@class": "BC1_RGB",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC1_RGB_SRGB_BLOCK",
                    "@class": "BC1_RGB",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC1_RGBA_UNORM_BLOCK",
                    "@class": "BC1_RGBA",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC1_RGBA_SRGB_BLOCK",
                    "@class": "BC1_RGBA",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC2_UNORM_BLOCK",
                    "@class": "BC2",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC2_SRGB_BLOCK",
                    "@class": "BC2",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC3_UNORM_BLOCK",
                    "@class": "BC3",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC3_SRGB_BLOCK",
                    "@class": "BC3",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC4_UNORM_BLOCK",
                    "@class": "BC4",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": {
                        "@name": "R",
                        "@bits": "compressed",
                        "@numericFormat": "UNORM"
                    }
                },
                {
                    "@name": "VK_FORMAT_BC4_SNORM_BLOCK",
                    "@class": "BC4",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": {
                        "@name": "R",
                        "@bits": "compressed",
                        "@numericFormat": "SRGB"
                    }
                },
                {
                    "@name": "VK_FORMAT_BC5_UNORM_BLOCK",
                    "@class": "BC5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC5_SNORM_BLOCK",
                    "@class": "BC5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC6H_UFLOAT_BLOCK",
                    "@class": "BC6H",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC6H_SFLOAT_BLOCK",
                    "@class": "BC6H",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC7_UNORM_BLOCK",
                    "@class": "BC7",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_BC7_SRGB_BLOCK",
                    "@class": "BC7",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "BC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK",
                    "@class": "ETC2_RGB",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "ETC2",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK",
                    "@class": "ETC2_RGB",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "ETC2",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK",
                    "@class": "ETC2_RGBA",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "ETC2",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK",
                    "@class": "ETC2_RGBA",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "ETC2",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK",
                    "@class": "ETC2_EAC_RGBA",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "ETC2",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK",
                    "@class": "ETC2_EAC_RGBA",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "ETC2",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_EAC_R11_UNORM_BLOCK",
                    "@class": "EAC_R",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "EAC",
                    "component": {
                        "@name": "R",
                        "@bits": "11",
                        "@numericFormat": "UNORM"
                    }
                },
                {
                    "@name": "VK_FORMAT_EAC_R11_SNORM_BLOCK",
                    "@class": "EAC_R",
                    "@blockSize": "8",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "EAC",
                    "component": {
                        "@name": "R",
                        "@bits": "11",
                        "@numericFormat": "SNORM"
                    }
                },
                {
                    "@name": "VK_FORMAT_EAC_R11G11_UNORM_BLOCK",
                    "@class": "EAC_RG",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "EAC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "11",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "11",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_EAC_R11G11_SNORM_BLOCK",
                    "@class": "EAC_RG",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "EAC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "11",
                            "@numericFormat": "SNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "11",
                            "@numericFormat": "SNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_4x4_UNORM_BLOCK",
                    "@class": "ASTC_4x4",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_4x4_SRGB_BLOCK",
                    "@class": "ASTC_4x4",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_5x4_UNORM_BLOCK",
                    "@class": "ASTC_5x4",
                    "@blockSize": "16",
                    "@texelsPerBlock": "20",
                    "@blockExtent": "5,4,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_5x4_SRGB_BLOCK",
                    "@class": "ASTC_5x4",
                    "@blockSize": "16",
                    "@texelsPerBlock": "20",
                    "@blockExtent": "5,4,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_5x5_UNORM_BLOCK",
                    "@class": "ASTC_5x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "25",
                    "@blockExtent": "5,5,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_5x5_SRGB_BLOCK",
                    "@class": "ASTC_5x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "25",
                    "@blockExtent": "5,5,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_6x5_UNORM_BLOCK",
                    "@class": "ASTC_6x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "30",
                    "@blockExtent": "6,5,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_6x5_SRGB_BLOCK",
                    "@class": "ASTC_6x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "30",
                    "@blockExtent": "6,5,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_6x6_UNORM_BLOCK",
                    "@class": "ASTC_6x6",
                    "@blockSize": "16",
                    "@texelsPerBlock": "36",
                    "@blockExtent": "6,6,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_6x6_SRGB_BLOCK",
                    "@class": "ASTC_6x6",
                    "@blockSize": "16",
                    "@texelsPerBlock": "36",
                    "@blockExtent": "6,6,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_8x5_UNORM_BLOCK",
                    "@class": "ASTC_8x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "40",
                    "@blockExtent": "8,5,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_8x5_SRGB_BLOCK",
                    "@class": "ASTC_8x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "40",
                    "@blockExtent": "8,5,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_8x6_UNORM_BLOCK",
                    "@class": "ASTC_8x6",
                    "@blockSize": "16",
                    "@texelsPerBlock": "48",
                    "@blockExtent": "8,6,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_8x6_SRGB_BLOCK",
                    "@class": "ASTC_8x6",
                    "@blockSize": "16",
                    "@texelsPerBlock": "48",
                    "@blockExtent": "8,6,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_8x8_UNORM_BLOCK",
                    "@class": "ASTC_8x8",
                    "@blockSize": "16",
                    "@texelsPerBlock": "64",
                    "@blockExtent": "8,8,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_8x8_SRGB_BLOCK",
                    "@class": "ASTC_8x8",
                    "@blockSize": "16",
                    "@texelsPerBlock": "64",
                    "@blockExtent": "8,8,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x5_UNORM_BLOCK",
                    "@class": "ASTC_10x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "50",
                    "@blockExtent": "10,5,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x5_SRGB_BLOCK",
                    "@class": "ASTC_10x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "50",
                    "@blockExtent": "10,5,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x6_UNORM_BLOCK",
                    "@class": "ASTC_10x6",
                    "@blockSize": "16",
                    "@texelsPerBlock": "60",
                    "@blockExtent": "10,6,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x6_SRGB_BLOCK",
                    "@class": "ASTC_10x6",
                    "@blockSize": "16",
                    "@texelsPerBlock": "60",
                    "@blockExtent": "10,6,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x8_UNORM_BLOCK",
                    "@class": "ASTC_10x8",
                    "@blockSize": "16",
                    "@texelsPerBlock": "80",
                    "@blockExtent": "10,8,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x8_SRGB_BLOCK",
                    "@class": "ASTC_10x8",
                    "@blockSize": "16",
                    "@texelsPerBlock": "80",
                    "@blockExtent": "10,8,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x10_UNORM_BLOCK",
                    "@class": "ASTC_10x10",
                    "@blockSize": "16",
                    "@texelsPerBlock": "100",
                    "@blockExtent": "10,10,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x10_SRGB_BLOCK",
                    "@class": "ASTC_10x10",
                    "@blockSize": "16",
                    "@texelsPerBlock": "100",
                    "@blockExtent": "10,10,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_12x10_UNORM_BLOCK",
                    "@class": "ASTC_12x10",
                    "@blockSize": "16",
                    "@texelsPerBlock": "120",
                    "@blockExtent": "12,10,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_12x10_SRGB_BLOCK",
                    "@class": "ASTC_12x10",
                    "@blockSize": "16",
                    "@texelsPerBlock": "120",
                    "@blockExtent": "12,10,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_12x12_UNORM_BLOCK",
                    "@class": "ASTC_12x12",
                    "@blockSize": "16",
                    "@texelsPerBlock": "144",
                    "@blockExtent": "12,12,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_12x12_SRGB_BLOCK",
                    "@class": "ASTC_12x12",
                    "@blockSize": "16",
                    "@texelsPerBlock": "144",
                    "@blockExtent": "12,12,1",
                    "@compressed": "ASTC LDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G8B8G8R8_422_UNORM",
                    "@class": "32-bit G8B8G8R8",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "2,1,1",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B8G8R8G8_422_UNORM",
                    "@class": "32-bit B8G8R8G8",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "2,1,1",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM",
                    "@class": "8-bit 3-plane 420",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "@chroma": "420",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM",
                    "@class": "8-bit 2-plane 420",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "@chroma": "420",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R8G8_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM",
                    "@class": "8-bit 3-plane 422",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM",
                    "@class": "8-bit 2-plane 422",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8G8_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM",
                    "@class": "8-bit 3-plane 444",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "@chroma": "444",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R10X6_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": {
                        "@name": "R",
                        "@bits": "10",
                        "@numericFormat": "UNORM"
                    }
                },
                {
                    "@name": "VK_FORMAT_R10X6G10X6_UNORM_2PACK16",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16",
                    "@class": "64-bit R10G10B10A10",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "444",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16",
                    "@class": "64-bit G10B10G10R10",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "2,1,1",
                    "@packed": "16",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16",
                    "@class": "64-bit B10G10R10G10",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "2,1,1",
                    "@packed": "16",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16",
                    "@class": "10-bit 3-plane 420",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "420",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16",
                    "@class": "10-bit 2-plane 420",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "420",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R10X6G10X6_UNORM_2PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16",
                    "@class": "10-bit 3-plane 422",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16",
                    "@class": "10-bit 2-plane 422",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6G10X6_UNORM_2PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16",
                    "@class": "10-bit 3-plane 444",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "444",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R12X4_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": {
                        "@name": "R",
                        "@bits": "12",
                        "@numericFormat": "UNORM"
                    }
                },
                {
                    "@name": "VK_FORMAT_R12X4G12X4_UNORM_2PACK16",
                    "@class": "32-bit",
                    "@blockSize": "4",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16",
                    "@class": "64-bit R12G12B12A12",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "444",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16",
                    "@class": "64-bit G12B12G12R12",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "2,1,1",
                    "@packed": "16",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16",
                    "@class": "64-bit B12G12R12G12",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "2,1,1",
                    "@packed": "16",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16",
                    "@class": "12-bit 3-plane 420",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "420",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16",
                    "@class": "12-bit 2-plane 420",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "420",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R12X4G12X4_UNORM_2PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16",
                    "@class": "12-bit 3-plane 422",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16",
                    "@class": "12-bit 2-plane 422",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4G12X4_UNORM_2PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16",
                    "@class": "12-bit 3-plane 444",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "444",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G16B16G16R16_422_UNORM",
                    "@class": "64-bit G16B16G16R16",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "2,1,1",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_B16G16R16G16_422_UNORM",
                    "@class": "64-bit B16G16R16G16",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "2,1,1",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM",
                    "@class": "16-bit 3-plane 420",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@chroma": "420",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM",
                    "@class": "16-bit 2-plane 420",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@chroma": "420",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "2",
                            "@compatible": "VK_FORMAT_R16G16_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM",
                    "@class": "16-bit 3-plane 422",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM",
                    "@class": "16-bit 2-plane 422",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@chroma": "422",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "2",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16G16_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM",
                    "@class": "16-bit 3-plane 444",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@chroma": "444",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "2"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        },
                        {
                            "@index": "2",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG",
                    "@class": "PVRTC1_2BPP",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "8,4,1",
                    "@compressed": "PVRTC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG",
                    "@class": "PVRTC1_4BPP",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "4,4,1",
                    "@compressed": "PVRTC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG",
                    "@class": "PVRTC2_2BPP",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "8,4,1",
                    "@compressed": "PVRTC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG",
                    "@class": "PVRTC2_4BPP",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "4,4,1",
                    "@compressed": "PVRTC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG",
                    "@class": "PVRTC1_2BPP",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "8,4,1",
                    "@compressed": "PVRTC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG",
                    "@class": "PVRTC1_4BPP",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "4,4,1",
                    "@compressed": "PVRTC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG",
                    "@class": "PVRTC2_2BPP",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "8,4,1",
                    "@compressed": "PVRTC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG",
                    "@class": "PVRTC2_4BPP",
                    "@blockSize": "8",
                    "@texelsPerBlock": "1",
                    "@blockExtent": "4,4,1",
                    "@compressed": "PVRTC",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SRGB"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK",
                    "@class": "ASTC_4x4",
                    "@blockSize": "16",
                    "@texelsPerBlock": "16",
                    "@blockExtent": "4,4,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK",
                    "@class": "ASTC_5x4",
                    "@blockSize": "16",
                    "@texelsPerBlock": "20",
                    "@blockExtent": "5,4,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK",
                    "@class": "ASTC_5x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "25",
                    "@blockExtent": "5,5,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK",
                    "@class": "ASTC_6x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "30",
                    "@blockExtent": "6,5,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK",
                    "@class": "ASTC_6x6",
                    "@blockSize": "16",
                    "@texelsPerBlock": "36",
                    "@blockExtent": "6,6,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK",
                    "@class": "ASTC_8x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "40",
                    "@blockExtent": "8,5,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK",
                    "@class": "ASTC_8x6",
                    "@blockSize": "16",
                    "@texelsPerBlock": "48",
                    "@blockExtent": "8,6,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK",
                    "@class": "ASTC_8x8",
                    "@blockSize": "16",
                    "@texelsPerBlock": "64",
                    "@blockExtent": "8,8,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK",
                    "@class": "ASTC_10x5",
                    "@blockSize": "16",
                    "@texelsPerBlock": "50",
                    "@blockExtent": "10,5,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK",
                    "@class": "ASTC_10x6",
                    "@blockSize": "16",
                    "@texelsPerBlock": "60",
                    "@blockExtent": "10,6,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK",
                    "@class": "ASTC_10x8",
                    "@blockSize": "16",
                    "@texelsPerBlock": "80",
                    "@blockExtent": "10,8,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK",
                    "@class": "ASTC_10x10",
                    "@blockSize": "16",
                    "@texelsPerBlock": "100",
                    "@blockExtent": "10,10,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK",
                    "@class": "ASTC_12x10",
                    "@blockSize": "16",
                    "@texelsPerBlock": "120",
                    "@blockExtent": "12,10,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK",
                    "@class": "ASTC_12x12",
                    "@blockSize": "16",
                    "@texelsPerBlock": "144",
                    "@blockExtent": "12,12,1",
                    "@compressed": "ASTC HDR",
                    "component": [
                        {
                            "@name": "R",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "G",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "B",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        },
                        {
                            "@name": "A",
                            "@bits": "compressed",
                            "@numericFormat": "SFLOAT"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G8_B8R8_2PLANE_444_UNORM",
                    "@class": "8-bit 2-plane 444",
                    "@blockSize": "3",
                    "@texelsPerBlock": "1",
                    "@chroma": "444",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "8",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R8G8_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16",
                    "@class": "10-bit 2-plane 444",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "444",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "10",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R10X6G10X6_UNORM_2PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16",
                    "@class": "12-bit 2-plane 444",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "@chroma": "444",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "12",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4_UNORM_PACK16"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R12X4G12X4_UNORM_2PACK16"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_G16_B16R16_2PLANE_444_UNORM",
                    "@class": "16-bit 2-plane 444",
                    "@blockSize": "6",
                    "@texelsPerBlock": "1",
                    "@chroma": "444",
                    "component": [
                        {
                            "@name": "G",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "0"
                        },
                        {
                            "@name": "B",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        },
                        {
                            "@name": "R",
                            "@bits": "16",
                            "@numericFormat": "UNORM",
                            "@planeIndex": "1"
                        }
                    ],
                    "plane": [
                        {
                            "@index": "0",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16_UNORM"
                        },
                        {
                            "@index": "1",
                            "@widthDivisor": "1",
                            "@heightDivisor": "1",
                            "@compatible": "VK_FORMAT_R16G16_UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A4R4G4B4_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        }
                    ]
                },
                {
                    "@name": "VK_FORMAT_A4B4G4R4_UNORM_PACK16",
                    "@class": "16-bit",
                    "@blockSize": "2",
                    "@texelsPerBlock": "1",
                    "@packed": "16",
                    "component": [
                        {
                            "@name": "A",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "B",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "G",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        },
                        {
                            "@name": "R",
                            "@bits": "4",
                            "@numericFormat": "UNORM"
                        }
                    ]
                }
            ]
        },
        "spirvextensions": {
            "@comment": "SPIR-V Extensions allowed in Vulkan and what is required to use it",
            "spirvextension": [
                {
                    "@name": "SPV_KHR_variable_pointers",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_1"
                        },
                        {
                            "@extension": "VK_KHR_variable_pointers"
                        }
                    ]
                },
                {
                    "@name": "SPV_AMD_shader_explicit_vertex_parameter",
                    "enable": {
                        "@extension": "VK_AMD_shader_explicit_vertex_parameter"
                    }
                },
                {
                    "@name": "SPV_AMD_gcn_shader",
                    "enable": {
                        "@extension": "VK_AMD_gcn_shader"
                    }
                },
                {
                    "@name": "SPV_AMD_gpu_shader_half_float",
                    "enable": {
                        "@extension": "VK_AMD_gpu_shader_half_float"
                    }
                },
                {
                    "@name": "SPV_AMD_gpu_shader_int16",
                    "enable": {
                        "@extension": "VK_AMD_gpu_shader_int16"
                    }
                },
                {
                    "@name": "SPV_AMD_shader_ballot",
                    "enable": {
                        "@extension": "VK_AMD_shader_ballot"
                    }
                },
                {
                    "@name": "SPV_AMD_shader_fragment_mask",
                    "enable": {
                        "@extension": "VK_AMD_shader_fragment_mask"
                    }
                },
                {
                    "@name": "SPV_AMD_shader_image_load_store_lod",
                    "enable": {
                        "@extension": "VK_AMD_shader_image_load_store_lod"
                    }
                },
                {
                    "@name": "SPV_AMD_shader_trinary_minmax",
                    "enable": {
                        "@extension": "VK_AMD_shader_trinary_minmax"
                    }
                },
                {
                    "@name": "SPV_AMD_texture_gather_bias_lod",
                    "enable": {
                        "@extension": "VK_AMD_texture_gather_bias_lod"
                    }
                },
                {
                    "@name": "SPV_KHR_shader_draw_parameters",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_1"
                        },
                        {
                            "@extension": "VK_KHR_shader_draw_parameters"
                        }
                    ]
                },
                {
                    "@name": "SPV_KHR_8bit_storage",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_2"
                        },
                        {
                            "@extension": "VK_KHR_8bit_storage"
                        }
                    ]
                },
                {
                    "@name": "SPV_KHR_16bit_storage",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_1"
                        },
                        {
                            "@extension": "VK_KHR_16bit_storage"
                        }
                    ]
                },
                {
                    "@name": "SPV_KHR_shader_clock",
                    "enable": {
                        "@extension": "VK_KHR_shader_clock"
                    }
                },
                {
                    "@name": "SPV_KHR_float_controls",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_2"
                        },
                        {
                            "@extension": "VK_KHR_shader_float_controls"
                        }
                    ]
                },
                {
                    "@name": "SPV_KHR_storage_buffer_storage_class",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_1"
                        },
                        {
                            "@extension": "VK_KHR_storage_buffer_storage_class"
                        }
                    ]
                },
                {
                    "@name": "SPV_KHR_post_depth_coverage",
                    "enable": {
                        "@extension": "VK_EXT_post_depth_coverage"
                    }
                },
                {
                    "@name": "SPV_EXT_shader_stencil_export",
                    "enable": {
                        "@extension": "VK_EXT_shader_stencil_export"
                    }
                },
                {
                    "@name": "SPV_KHR_shader_ballot",
                    "enable": {
                        "@extension": "VK_EXT_shader_subgroup_ballot"
                    }
                },
                {
                    "@name": "SPV_KHR_subgroup_vote",
                    "enable": {
                        "@extension": "VK_EXT_shader_subgroup_vote"
                    }
                },
                {
                    "@name": "SPV_NV_sample_mask_override_coverage",
                    "enable": {
                        "@extension": "VK_NV_sample_mask_override_coverage"
                    }
                },
                {
                    "@name": "SPV_NV_geometry_shader_passthrough",
                    "enable": {
                        "@extension": "VK_NV_geometry_shader_passthrough"
                    }
                },
                {
                    "@name": "SPV_NV_mesh_shader",
                    "enable": {
                        "@extension": "VK_NV_mesh_shader"
                    }
                },
                {
                    "@name": "SPV_NV_viewport_array2",
                    "enable": {
                        "@extension": "VK_NV_viewport_array2"
                    }
                },
                {
                    "@name": "SPV_NV_shader_subgroup_partitioned",
                    "enable": {
                        "@extension": "VK_NV_shader_subgroup_partitioned"
                    }
                },
                {
                    "@name": "SPV_EXT_shader_viewport_index_layer",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_2"
                        },
                        {
                            "@extension": "VK_EXT_shader_viewport_index_layer"
                        }
                    ]
                },
                {
                    "@name": "SPV_NVX_multiview_per_view_attributes",
                    "enable": {
                        "@extension": "VK_NVX_multiview_per_view_attributes"
                    }
                },
                {
                    "@name": "SPV_EXT_descriptor_indexing",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_2"
                        },
                        {
                            "@extension": "VK_EXT_descriptor_indexing"
                        }
                    ]
                },
                {
                    "@name": "SPV_KHR_vulkan_memory_model",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_2"
                        },
                        {
                            "@extension": "VK_KHR_vulkan_memory_model"
                        }
                    ]
                },
                {
                    "@name": "SPV_NV_compute_shader_derivatives",
                    "enable": {
                        "@extension": "VK_NV_compute_shader_derivatives"
                    }
                },
                {
                    "@name": "SPV_NV_fragment_shader_barycentric",
                    "enable": {
                        "@extension": "VK_NV_fragment_shader_barycentric"
                    }
                },
                {
                    "@name": "SPV_NV_shader_image_footprint",
                    "enable": {
                        "@extension": "VK_NV_shader_image_footprint"
                    }
                },
                {
                    "@name": "SPV_NV_shading_rate",
                    "enable": {
                        "@extension": "VK_NV_shading_rate_image"
                    }
                },
                {
                    "@name": "SPV_NV_ray_tracing",
                    "enable": {
                        "@extension": "VK_NV_ray_tracing"
                    }
                },
                {
                    "@name": "SPV_KHR_ray_tracing",
                    "enable": {
                        "@extension": "VK_KHR_ray_tracing_pipeline"
                    }
                },
                {
                    "@name": "SPV_KHR_ray_query",
                    "enable": {
                        "@extension": "VK_KHR_ray_query"
                    }
                },
                {
                    "@name": "SPV_GOOGLE_hlsl_functionality1",
                    "enable": {
                        "@extension": "VK_GOOGLE_hlsl_functionality1"
                    }
                },
                {
                    "@name": "SPV_GOOGLE_user_type",
                    "enable": {
                        "@extension": "VK_GOOGLE_user_type"
                    }
                },
                {
                    "@name": "SPV_GOOGLE_decorate_string",
                    "enable": {
                        "@extension": "VK_GOOGLE_decorate_string"
                    }
                },
                {
                    "@name": "SPV_EXT_fragment_invocation_density",
                    "enable": {
                        "@extension": "VK_EXT_fragment_density_map"
                    }
                },
                {
                    "@name": "SPV_KHR_physical_storage_buffer",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_2"
                        },
                        {
                            "@extension": "VK_KHR_buffer_device_address"
                        }
                    ]
                },
                {
                    "@name": "SPV_EXT_physical_storage_buffer",
                    "enable": {
                        "@extension": "VK_EXT_buffer_device_address"
                    }
                },
                {
                    "@name": "SPV_NV_cooperative_matrix",
                    "enable": {
                        "@extension": "VK_NV_cooperative_matrix"
                    }
                },
                {
                    "@name": "SPV_NV_shader_sm_builtins",
                    "enable": {
                        "@extension": "VK_NV_shader_sm_builtins"
                    }
                },
                {
                    "@name": "SPV_EXT_fragment_shader_interlock",
                    "enable": {
                        "@extension": "VK_EXT_fragment_shader_interlock"
                    }
                },
                {
                    "@name": "SPV_EXT_demote_to_helper_invocation",
                    "enable": [
                        {
                            "@version": "VK_API_VERSION_1_3"
                        },
                        {
                            "@extension": "VK_EXT_shader_demote_to_helper_invocation"
                        }
                    ]
                },
                {
                    "@name": "SPV_KHR_fragment_shading_rate",
                    "enable": {
                        "@extension": "VK_KHR_fragment_shading_rate"
                    }
                },
                {
                    "@name": "SPV_KHR_non_semantic_info",
                    "enable": [
                        {
                            "@version": "VK_API_VERSION_1_3"
                        },
                        {
                            "@extension": "VK_KHR_shader_non_semantic_info"
                        }
                    ]
                },
                {
                    "@name": "SPV_EXT_shader_image_int64",
                    "enable": {
                        "@extension": "VK_EXT_shader_image_atomic_int64"
                    }
                },
                {
                    "@name": "SPV_KHR_terminate_invocation",
                    "enable": [
                        {
                            "@version": "VK_API_VERSION_1_3"
                        },
                        {
                            "@extension": "VK_KHR_shader_terminate_invocation"
                        }
                    ]
                },
                {
                    "@name": "SPV_KHR_multiview",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_1"
                        },
                        {
                            "@extension": "VK_KHR_multiview"
                        }
                    ]
                },
                {
                    "@name": "SPV_KHR_workgroup_memory_explicit_layout",
                    "enable": {
                        "@extension": "VK_KHR_workgroup_memory_explicit_layout"
                    }
                },
                {
                    "@name": "SPV_EXT_shader_atomic_float_add",
                    "enable": {
                        "@extension": "VK_EXT_shader_atomic_float"
                    }
                },
                {
                    "@name": "SPV_KHR_subgroup_uniform_control_flow",
                    "enable": [
                        {
                            "@version": "VK_API_VERSION_1_3"
                        },
                        {
                            "@extension": "VK_KHR_shader_subgroup_uniform_control_flow"
                        }
                    ]
                },
                {
                    "@name": "SPV_EXT_shader_atomic_float_min_max",
                    "enable": {
                        "@extension": "VK_EXT_shader_atomic_float2"
                    }
                },
                {
                    "@name": "SPV_EXT_shader_atomic_float16_add",
                    "enable": {
                        "@extension": "VK_EXT_shader_atomic_float2"
                    }
                },
                {
                    "@name": "SPV_KHR_integer_dot_product",
                    "enable": [
                        {
                            "@version": "VK_API_VERSION_1_3"
                        },
                        {
                            "@extension": "VK_KHR_shader_integer_dot_product"
                        }
                    ]
                }
            ]
        },
        "spirvcapabilities": {
            "@comment": "SPIR-V Capabilities allowed in Vulkan and what is required to use it",
            "spirvcapability": [
                {
                    "@name": "Matrix",
                    "enable": {
                        "@version": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "Shader",
                    "enable": {
                        "@version": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "InputAttachment",
                    "enable": {
                        "@version": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "Sampled1D",
                    "enable": {
                        "@version": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "Image1D",
                    "enable": {
                        "@version": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "SampledBuffer",
                    "enable": {
                        "@version": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "ImageBuffer",
                    "enable": {
                        "@version": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "ImageQuery",
                    "enable": {
                        "@version": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "DerivativeControl",
                    "enable": {
                        "@version": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "Geometry",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "geometryShader",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "Tessellation",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "tessellationShader",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "Float64",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderFloat64",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "Int64",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderInt64",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "Int64Atomics",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan12Features",
                            "@feature": "shaderBufferInt64Atomics",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_atomic_int64"
                        },
                        {
                            "@struct": "VkPhysicalDeviceVulkan12Features",
                            "@feature": "shaderSharedInt64Atomics",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_atomic_int64"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT",
                            "@feature": "shaderImageInt64Atomics",
                            "@requires": "VK_EXT_shader_image_atomic_int64"
                        }
                    ]
                },
                {
                    "@name": "AtomicFloat16AddEXT",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
                            "@feature": "shaderBufferFloat16AtomicAdd",
                            "@requires": "VK_EXT_shader_atomic_float2"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
                            "@feature": "shaderSharedFloat16AtomicAdd",
                            "@requires": "VK_EXT_shader_atomic_float2"
                        }
                    ]
                },
                {
                    "@name": "AtomicFloat32AddEXT",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT",
                            "@feature": "shaderBufferFloat32AtomicAdd",
                            "@requires": "VK_EXT_shader_atomic_float"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT",
                            "@feature": "shaderSharedFloat32AtomicAdd",
                            "@requires": "VK_EXT_shader_atomic_float"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT",
                            "@feature": "shaderImageFloat32AtomicAdd",
                            "@requires": "VK_EXT_shader_atomic_float"
                        }
                    ]
                },
                {
                    "@name": "AtomicFloat64AddEXT",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT",
                            "@feature": "shaderBufferFloat64AtomicAdd",
                            "@requires": "VK_EXT_shader_atomic_float"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT",
                            "@feature": "shaderSharedFloat64AtomicAdd",
                            "@requires": "VK_EXT_shader_atomic_float"
                        }
                    ]
                },
                {
                    "@name": "AtomicFloat16MinMaxEXT",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
                            "@feature": "shaderBufferFloat16AtomicMinMax",
                            "@requires": "VK_EXT_shader_atomic_float2"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
                            "@feature": "shaderSharedFloat16AtomicMinMax",
                            "@requires": "VK_EXT_shader_atomic_float2"
                        }
                    ]
                },
                {
                    "@name": "AtomicFloat32MinMaxEXT",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
                            "@feature": "shaderBufferFloat32AtomicMinMax",
                            "@requires": "VK_EXT_shader_atomic_float2"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
                            "@feature": "shaderSharedFloat32AtomicMinMax",
                            "@requires": "VK_EXT_shader_atomic_float2"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
                            "@feature": "shaderImageFloat32AtomicMinMax",
                            "@requires": "VK_EXT_shader_atomic_float2"
                        }
                    ]
                },
                {
                    "@name": "AtomicFloat64MinMaxEXT",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
                            "@feature": "shaderBufferFloat64AtomicMinMax",
                            "@requires": "VK_EXT_shader_atomic_float2"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
                            "@feature": "shaderSharedFloat64AtomicMinMax",
                            "@requires": "VK_EXT_shader_atomic_float2"
                        }
                    ]
                },
                {
                    "@name": "Int64ImageEXT",
                    "enable": {
                        "@struct": "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT",
                        "@feature": "shaderImageInt64Atomics",
                        "@requires": "VK_EXT_shader_image_atomic_int64"
                    }
                },
                {
                    "@name": "Int16",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderInt16",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "TessellationPointSize",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderTessellationAndGeometryPointSize",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "GeometryPointSize",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderTessellationAndGeometryPointSize",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "ImageGatherExtended",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderImageGatherExtended",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "StorageImageMultisample",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderStorageImageMultisample",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "UniformBufferArrayDynamicIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderUniformBufferArrayDynamicIndexing",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "SampledImageArrayDynamicIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderSampledImageArrayDynamicIndexing",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "StorageBufferArrayDynamicIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderStorageBufferArrayDynamicIndexing",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "StorageImageArrayDynamicIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderStorageImageArrayDynamicIndexing",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "ClipDistance",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderClipDistance",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "CullDistance",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderCullDistance",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "ImageCubeArray",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "imageCubeArray",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "SampleRateShading",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "sampleRateShading",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "SparseResidency",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderResourceResidency",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "MinLod",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderResourceMinLod",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "SampledCubeArray",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "imageCubeArray",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "ImageMSArray",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "shaderStorageImageMultisample",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "StorageImageExtendedFormats",
                    "enable": {
                        "@version": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "InterpolationFunction",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "sampleRateShading",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "StorageImageReadWithoutFormat",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceFeatures",
                            "@feature": "shaderStorageImageReadWithoutFormat",
                            "@requires": "VK_VERSION_1_0"
                        },
                        {
                            "@version": "VK_API_VERSION_1_3"
                        },
                        {
                            "@extension": "VK_KHR_format_feature_flags2"
                        }
                    ]
                },
                {
                    "@name": "StorageImageWriteWithoutFormat",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceFeatures",
                            "@feature": "shaderStorageImageWriteWithoutFormat",
                            "@requires": "VK_VERSION_1_0"
                        },
                        {
                            "@version": "VK_API_VERSION_1_3"
                        },
                        {
                            "@extension": "VK_KHR_format_feature_flags2"
                        }
                    ]
                },
                {
                    "@name": "MultiViewport",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFeatures",
                        "@feature": "multiViewport",
                        "@requires": "VK_VERSION_1_0"
                    }
                },
                {
                    "@name": "DrawParameters",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan11Features",
                            "@feature": "shaderDrawParameters",
                            "@requires": "VK_VERSION_1_2"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderDrawParametersFeatures",
                            "@feature": "shaderDrawParameters",
                            "@requires": "VK_VERSION_1_1"
                        },
                        {
                            "@extension": "VK_KHR_shader_draw_parameters"
                        }
                    ]
                },
                {
                    "@name": "MultiView",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan11Features",
                            "@feature": "multiview",
                            "@requires": "VK_VERSION_1_2"
                        },
                        {
                            "@struct": "VkPhysicalDeviceMultiviewFeatures",
                            "@feature": "multiview",
                            "@requires": "VK_KHR_multiview"
                        }
                    ]
                },
                {
                    "@name": "DeviceGroup",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_1"
                        },
                        {
                            "@extension": "VK_KHR_device_group"
                        }
                    ]
                },
                {
                    "@name": "VariablePointersStorageBuffer",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan11Features",
                            "@feature": "variablePointersStorageBuffer",
                            "@requires": "VK_VERSION_1_2"
                        },
                        {
                            "@struct": "VkPhysicalDeviceVariablePointersFeatures",
                            "@feature": "variablePointersStorageBuffer",
                            "@requires": "VK_KHR_variable_pointers"
                        }
                    ]
                },
                {
                    "@name": "VariablePointers",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan11Features",
                            "@feature": "variablePointers",
                            "@requires": "VK_VERSION_1_2"
                        },
                        {
                            "@struct": "VkPhysicalDeviceVariablePointersFeatures",
                            "@feature": "variablePointers",
                            "@requires": "VK_KHR_variable_pointers"
                        }
                    ]
                },
                {
                    "@name": "ShaderClockKHR",
                    "enable": {
                        "@extension": "VK_KHR_shader_clock"
                    }
                },
                {
                    "@name": "StencilExportEXT",
                    "enable": {
                        "@extension": "VK_EXT_shader_stencil_export"
                    }
                },
                {
                    "@name": "SubgroupBallotKHR",
                    "enable": {
                        "@extension": "VK_EXT_shader_subgroup_ballot"
                    }
                },
                {
                    "@name": "SubgroupVoteKHR",
                    "enable": {
                        "@extension": "VK_EXT_shader_subgroup_vote"
                    }
                },
                {
                    "@name": "ImageReadWriteLodAMD",
                    "enable": {
                        "@extension": "VK_AMD_shader_image_load_store_lod"
                    }
                },
                {
                    "@name": "ImageGatherBiasLodAMD",
                    "enable": {
                        "@extension": "VK_AMD_texture_gather_bias_lod"
                    }
                },
                {
                    "@name": "FragmentMaskAMD",
                    "enable": {
                        "@extension": "VK_AMD_shader_fragment_mask"
                    }
                },
                {
                    "@name": "SampleMaskOverrideCoverageNV",
                    "enable": {
                        "@extension": "VK_NV_sample_mask_override_coverage"
                    }
                },
                {
                    "@name": "GeometryShaderPassthroughNV",
                    "enable": {
                        "@extension": "VK_NV_geometry_shader_passthrough"
                    }
                },
                {
                    "@name": "ShaderViewportIndex",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderOutputViewportIndex",
                        "@requires": "VK_VERSION_1_2"
                    }
                },
                {
                    "@name": "ShaderLayer",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderOutputLayer",
                        "@requires": "VK_VERSION_1_2"
                    }
                },
                {
                    "@name": "ShaderViewportIndexLayerEXT",
                    "enable": {
                        "@extension": "VK_EXT_shader_viewport_index_layer"
                    }
                },
                {
                    "@name": "ShaderViewportIndexLayerNV",
                    "enable": {
                        "@extension": "VK_NV_viewport_array2"
                    }
                },
                {
                    "@name": "ShaderViewportMaskNV",
                    "enable": {
                        "@extension": "VK_NV_viewport_array2"
                    }
                },
                {
                    "@name": "PerViewAttributesNV",
                    "enable": {
                        "@extension": "VK_NVX_multiview_per_view_attributes"
                    }
                },
                {
                    "@name": "StorageBuffer16BitAccess",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan11Features",
                            "@feature": "storageBuffer16BitAccess",
                            "@requires": "VK_VERSION_1_2"
                        },
                        {
                            "@struct": "VkPhysicalDevice16BitStorageFeatures",
                            "@feature": "storageBuffer16BitAccess",
                            "@requires": "VK_KHR_16bit_storage"
                        }
                    ]
                },
                {
                    "@name": "UniformAndStorageBuffer16BitAccess",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan11Features",
                            "@feature": "uniformAndStorageBuffer16BitAccess",
                            "@requires": "VK_VERSION_1_2"
                        },
                        {
                            "@struct": "VkPhysicalDevice16BitStorageFeatures",
                            "@feature": "uniformAndStorageBuffer16BitAccess",
                            "@requires": "VK_KHR_16bit_storage"
                        }
                    ]
                },
                {
                    "@name": "StoragePushConstant16",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan11Features",
                            "@feature": "storagePushConstant16",
                            "@requires": "VK_VERSION_1_2"
                        },
                        {
                            "@struct": "VkPhysicalDevice16BitStorageFeatures",
                            "@feature": "storagePushConstant16",
                            "@requires": "VK_KHR_16bit_storage"
                        }
                    ]
                },
                {
                    "@name": "StorageInputOutput16",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan11Features",
                            "@feature": "storageInputOutput16",
                            "@requires": "VK_VERSION_1_2"
                        },
                        {
                            "@struct": "VkPhysicalDevice16BitStorageFeatures",
                            "@feature": "storageInputOutput16",
                            "@requires": "VK_KHR_16bit_storage"
                        }
                    ]
                },
                {
                    "@name": "GroupNonUniform",
                    "enable": {
                        "@property": "VkPhysicalDeviceVulkan11Properties",
                        "@member": "subgroupSupportedOperations",
                        "@value": "VK_SUBGROUP_FEATURE_BASIC_BIT",
                        "@requires": "VK_VERSION_1_1"
                    }
                },
                {
                    "@name": "GroupNonUniformVote",
                    "enable": {
                        "@property": "VkPhysicalDeviceVulkan11Properties",
                        "@member": "subgroupSupportedOperations",
                        "@value": "VK_SUBGROUP_FEATURE_VOTE_BIT",
                        "@requires": "VK_VERSION_1_1"
                    }
                },
                {
                    "@name": "GroupNonUniformArithmetic",
                    "enable": {
                        "@property": "VkPhysicalDeviceVulkan11Properties",
                        "@member": "subgroupSupportedOperations",
                        "@value": "VK_SUBGROUP_FEATURE_ARITHMETIC_BIT",
                        "@requires": "VK_VERSION_1_1"
                    }
                },
                {
                    "@name": "GroupNonUniformBallot",
                    "enable": {
                        "@property": "VkPhysicalDeviceVulkan11Properties",
                        "@member": "subgroupSupportedOperations",
                        "@value": "VK_SUBGROUP_FEATURE_BALLOT_BIT",
                        "@requires": "VK_VERSION_1_1"
                    }
                },
                {
                    "@name": "GroupNonUniformShuffle",
                    "enable": {
                        "@property": "VkPhysicalDeviceVulkan11Properties",
                        "@member": "subgroupSupportedOperations",
                        "@value": "VK_SUBGROUP_FEATURE_SHUFFLE_BIT",
                        "@requires": "VK_VERSION_1_1"
                    }
                },
                {
                    "@name": "GroupNonUniformShuffleRelative",
                    "enable": {
                        "@property": "VkPhysicalDeviceVulkan11Properties",
                        "@member": "subgroupSupportedOperations",
                        "@value": "VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT",
                        "@requires": "VK_VERSION_1_1"
                    }
                },
                {
                    "@name": "GroupNonUniformClustered",
                    "enable": {
                        "@property": "VkPhysicalDeviceVulkan11Properties",
                        "@member": "subgroupSupportedOperations",
                        "@value": "VK_SUBGROUP_FEATURE_CLUSTERED_BIT",
                        "@requires": "VK_VERSION_1_1"
                    }
                },
                {
                    "@name": "GroupNonUniformQuad",
                    "enable": {
                        "@property": "VkPhysicalDeviceVulkan11Properties",
                        "@member": "subgroupSupportedOperations",
                        "@value": "VK_SUBGROUP_FEATURE_QUAD_BIT",
                        "@requires": "VK_VERSION_1_1"
                    }
                },
                {
                    "@name": "GroupNonUniformPartitionedNV",
                    "enable": {
                        "@property": "VkPhysicalDeviceVulkan11Properties",
                        "@member": "subgroupSupportedOperations",
                        "@value": "VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV",
                        "@requires": "VK_NV_shader_subgroup_partitioned"
                    }
                },
                {
                    "@name": "SampleMaskPostDepthCoverage",
                    "enable": {
                        "@extension": "VK_EXT_post_depth_coverage"
                    }
                },
                {
                    "@name": "ShaderNonUniform",
                    "enable": [
                        {
                            "@version": "VK_VERSION_1_2"
                        },
                        {
                            "@extension": "VK_EXT_descriptor_indexing"
                        }
                    ]
                },
                {
                    "@name": "RuntimeDescriptorArray",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "runtimeDescriptorArray",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "InputAttachmentArrayDynamicIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderInputAttachmentArrayDynamicIndexing",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "UniformTexelBufferArrayDynamicIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderUniformTexelBufferArrayDynamicIndexing",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "StorageTexelBufferArrayDynamicIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderStorageTexelBufferArrayDynamicIndexing",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "UniformBufferArrayNonUniformIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderUniformBufferArrayNonUniformIndexing",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "SampledImageArrayNonUniformIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderSampledImageArrayNonUniformIndexing",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "StorageBufferArrayNonUniformIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderStorageBufferArrayNonUniformIndexing",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "StorageImageArrayNonUniformIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderStorageImageArrayNonUniformIndexing",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "InputAttachmentArrayNonUniformIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderInputAttachmentArrayNonUniformIndexing",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "UniformTexelBufferArrayNonUniformIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderUniformTexelBufferArrayNonUniformIndexing",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "StorageTexelBufferArrayNonUniformIndexing",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderStorageTexelBufferArrayNonUniformIndexing",
                        "@requires": "VK_VERSION_1_2,VK_EXT_descriptor_indexing"
                    }
                },
                {
                    "@name": "Float16",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan12Features",
                            "@feature": "shaderFloat16",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float16_int8"
                        },
                        {
                            "@extension": "VK_AMD_gpu_shader_half_float"
                        }
                    ]
                },
                {
                    "@name": "Int8",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "shaderInt8",
                        "@requires": "VK_VERSION_1_2,VK_KHR_shader_float16_int8"
                    }
                },
                {
                    "@name": "StorageBuffer8BitAccess",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "storageBuffer8BitAccess",
                        "@requires": "VK_VERSION_1_2,VK_KHR_8bit_storage"
                    }
                },
                {
                    "@name": "UniformAndStorageBuffer8BitAccess",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "uniformAndStorageBuffer8BitAccess",
                        "@requires": "VK_VERSION_1_2,VK_KHR_8bit_storage"
                    }
                },
                {
                    "@name": "StoragePushConstant8",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "storagePushConstant8",
                        "@requires": "VK_VERSION_1_2,VK_KHR_8bit_storage"
                    }
                },
                {
                    "@name": "VulkanMemoryModel",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "vulkanMemoryModel",
                        "@requires": "VK_VERSION_1_2,VK_KHR_vulkan_memory_model"
                    }
                },
                {
                    "@name": "VulkanMemoryModelDeviceScope",
                    "enable": {
                        "@struct": "VkPhysicalDeviceVulkan12Features",
                        "@feature": "vulkanMemoryModelDeviceScope",
                        "@requires": "VK_VERSION_1_2,VK_KHR_vulkan_memory_model"
                    }
                },
                {
                    "@name": "DenormPreserve",
                    "enable": [
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderDenormPreserveFloat16",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        },
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderDenormPreserveFloat32",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        },
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderDenormPreserveFloat64",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        }
                    ]
                },
                {
                    "@name": "DenormFlushToZero",
                    "enable": [
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderDenormFlushToZeroFloat16",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        },
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderDenormFlushToZeroFloat32",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        },
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderDenormFlushToZeroFloat64",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        }
                    ]
                },
                {
                    "@name": "SignedZeroInfNanPreserve",
                    "enable": [
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderSignedZeroInfNanPreserveFloat16",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        },
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderSignedZeroInfNanPreserveFloat32",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        },
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderSignedZeroInfNanPreserveFloat64",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        }
                    ]
                },
                {
                    "@name": "RoundingModeRTE",
                    "enable": [
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderRoundingModeRTEFloat16",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        },
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderRoundingModeRTEFloat32",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        },
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderRoundingModeRTEFloat64",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        }
                    ]
                },
                {
                    "@name": "RoundingModeRTZ",
                    "enable": [
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderRoundingModeRTZFloat16",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        },
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderRoundingModeRTZFloat32",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        },
                        {
                            "@property": "VkPhysicalDeviceVulkan12Properties",
                            "@member": "shaderRoundingModeRTZFloat64",
                            "@value": "VK_TRUE",
                            "@requires": "VK_VERSION_1_2,VK_KHR_shader_float_controls"
                        }
                    ]
                },
                {
                    "@name": "ComputeDerivativeGroupQuadsNV",
                    "enable": {
                        "@struct": "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV",
                        "@feature": "computeDerivativeGroupQuads",
                        "@requires": "VK_NV_compute_shader_derivatives"
                    }
                },
                {
                    "@name": "ComputeDerivativeGroupLinearNV",
                    "enable": {
                        "@struct": "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV",
                        "@feature": "computeDerivativeGroupLinear",
                        "@requires": "VK_NV_compute_shader_derivatives"
                    }
                },
                {
                    "@name": "FragmentBarycentricNV",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV",
                        "@feature": "fragmentShaderBarycentric",
                        "@requires": "VK_NV_fragment_shader_barycentric"
                    }
                },
                {
                    "@name": "ImageFootprintNV",
                    "enable": {
                        "@struct": "VkPhysicalDeviceShaderImageFootprintFeaturesNV",
                        "@feature": "imageFootprint",
                        "@requires": "VK_NV_shader_image_footprint"
                    }
                },
                {
                    "@name": "ShadingRateNV",
                    "enable": {
                        "@struct": "VkPhysicalDeviceShadingRateImageFeaturesNV",
                        "@feature": "shadingRateImage",
                        "@requires": "VK_NV_shading_rate_image"
                    }
                },
                {
                    "@name": "MeshShadingNV",
                    "enable": {
                        "@extension": "VK_NV_mesh_shader"
                    }
                },
                {
                    "@name": "RayTracingKHR",
                    "enable": {
                        "@struct": "VkPhysicalDeviceRayTracingPipelineFeaturesKHR",
                        "@feature": "rayTracingPipeline",
                        "@requires": "VK_KHR_ray_tracing_pipeline"
                    }
                },
                {
                    "@name": "RayQueryKHR",
                    "enable": {
                        "@struct": "VkPhysicalDeviceRayQueryFeaturesKHR",
                        "@feature": "rayQuery",
                        "@requires": "VK_KHR_ray_query"
                    }
                },
                {
                    "@name": "RayTraversalPrimitiveCullingKHR",
                    "enable": {
                        "@struct": "VkPhysicalDeviceRayTracingPipelineFeaturesKHR",
                        "@feature": "rayTraversalPrimitiveCulling",
                        "@requires": "VK_KHR_ray_tracing_pipeline"
                    }
                },
                {
                    "@name": "RayTracingNV",
                    "enable": {
                        "@extension": "VK_NV_ray_tracing"
                    }
                },
                {
                    "@name": "RayTracingMotionBlurNV",
                    "enable": {
                        "@struct": "VkPhysicalDeviceRayTracingMotionBlurFeaturesNV",
                        "@feature": "rayTracingMotionBlur",
                        "@requires": "VK_NV_ray_tracing_motion_blur"
                    }
                },
                {
                    "@name": "TransformFeedback",
                    "enable": {
                        "@struct": "VkPhysicalDeviceTransformFeedbackFeaturesEXT",
                        "@feature": "transformFeedback",
                        "@requires": "VK_EXT_transform_feedback"
                    }
                },
                {
                    "@name": "GeometryStreams",
                    "enable": {
                        "@struct": "VkPhysicalDeviceTransformFeedbackFeaturesEXT",
                        "@feature": "geometryStreams",
                        "@requires": "VK_EXT_transform_feedback"
                    }
                },
                {
                    "@name": "FragmentDensityEXT",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFragmentDensityMapFeaturesEXT",
                        "@feature": "fragmentDensityMap",
                        "@requires": "VK_EXT_fragment_density_map"
                    }
                },
                {
                    "@name": "PhysicalStorageBufferAddresses",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan12Features",
                            "@feature": "bufferDeviceAddress",
                            "@requires": "VK_VERSION_1_2,VK_KHR_buffer_device_address"
                        },
                        {
                            "@struct": "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
                            "@feature": "bufferDeviceAddress",
                            "@requires": "VK_EXT_buffer_device_address",
                            "@alias": "bufferDeviceAddressEXT"
                        }
                    ]
                },
                {
                    "@name": "CooperativeMatrixNV",
                    "enable": {
                        "@struct": "VkPhysicalDeviceCooperativeMatrixFeaturesNV",
                        "@feature": "cooperativeMatrix",
                        "@requires": "VK_NV_cooperative_matrix"
                    }
                },
                {
                    "@name": "IntegerFunctions2INTEL",
                    "enable": {
                        "@struct": "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL",
                        "@feature": "shaderIntegerFunctions2",
                        "@requires": "VK_INTEL_shader_integer_functions2"
                    }
                },
                {
                    "@name": "ShaderSMBuiltinsNV",
                    "enable": {
                        "@struct": "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV",
                        "@feature": "shaderSMBuiltins",
                        "@requires": "VK_NV_shader_sm_builtins"
                    }
                },
                {
                    "@name": "FragmentShaderSampleInterlockEXT",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
                        "@feature": "fragmentShaderSampleInterlock",
                        "@requires": "VK_EXT_fragment_shader_interlock"
                    }
                },
                {
                    "@name": "FragmentShaderPixelInterlockEXT",
                    "enable": {
                        "@struct": "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
                        "@feature": "fragmentShaderPixelInterlock",
                        "@requires": "VK_EXT_fragment_shader_interlock"
                    }
                },
                {
                    "@name": "FragmentShaderShadingRateInterlockEXT",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
                            "@feature": "fragmentShaderShadingRateInterlock",
                            "@requires": "VK_EXT_fragment_shader_interlock"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShadingRateImageFeaturesNV",
                            "@feature": "shadingRateImage",
                            "@requires": "VK_NV_shading_rate_image"
                        }
                    ]
                },
                {
                    "@name": "DemoteToHelperInvocationEXT",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan13Features",
                            "@feature": "shaderDemoteToHelperInvocation",
                            "@requires": "VK_VERSION_1_3,VK_EXT_shader_demote_to_helper_invocation"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT",
                            "@feature": "shaderDemoteToHelperInvocation",
                            "@requires": "VK_EXT_shader_demote_to_helper_invocation"
                        }
                    ]
                },
                {
                    "@name": "FragmentShadingRateKHR",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceFragmentShadingRateFeaturesKHR",
                            "@feature": "pipelineFragmentShadingRate",
                            "@requires": "VK_KHR_fragment_shading_rate"
                        },
                        {
                            "@struct": "VkPhysicalDeviceFragmentShadingRateFeaturesKHR",
                            "@feature": "primitiveFragmentShadingRate",
                            "@requires": "VK_KHR_fragment_shading_rate"
                        },
                        {
                            "@struct": "VkPhysicalDeviceFragmentShadingRateFeaturesKHR",
                            "@feature": "attachmentFragmentShadingRate",
                            "@requires": "VK_KHR_fragment_shading_rate"
                        }
                    ]
                },
                {
                    "@name": "WorkgroupMemoryExplicitLayoutKHR",
                    "enable": {
                        "@struct": "VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR",
                        "@feature": "workgroupMemoryExplicitLayout",
                        "@requires": "VK_KHR_workgroup_memory_explicit_layout"
                    }
                },
                {
                    "@name": "WorkgroupMemoryExplicitLayout8BitAccessKHR",
                    "enable": {
                        "@struct": "VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR",
                        "@feature": "workgroupMemoryExplicitLayout8BitAccess",
                        "@requires": "VK_KHR_workgroup_memory_explicit_layout"
                    }
                },
                {
                    "@name": "WorkgroupMemoryExplicitLayout16BitAccessKHR",
                    "enable": {
                        "@struct": "VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR",
                        "@feature": "workgroupMemoryExplicitLayout16BitAccess",
                        "@requires": "VK_KHR_workgroup_memory_explicit_layout"
                    }
                },
                {
                    "@name": "DotProductInputAllKHR",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan13Features",
                            "@feature": "shaderIntegerDotProduct",
                            "@requires": "VK_VERSION_1_3,VK_KHR_shader_integer_dot_product"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR",
                            "@feature": "shaderIntegerDotProduct",
                            "@requires": "VK_KHR_shader_integer_dot_product"
                        }
                    ]
                },
                {
                    "@name": "DotProductInput4x8BitKHR",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan13Features",
                            "@feature": "shaderIntegerDotProduct",
                            "@requires": "VK_VERSION_1_3,VK_KHR_shader_integer_dot_product"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR",
                            "@feature": "shaderIntegerDotProduct",
                            "@requires": "VK_KHR_shader_integer_dot_product"
                        }
                    ]
                },
                {
                    "@name": "DotProductInput4x8BitPackedKHR",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan13Features",
                            "@feature": "shaderIntegerDotProduct",
                            "@requires": "VK_VERSION_1_3,VK_KHR_shader_integer_dot_product"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR",
                            "@feature": "shaderIntegerDotProduct",
                            "@requires": "VK_KHR_shader_integer_dot_product"
                        }
                    ]
                },
                {
                    "@name": "DotProductKHR",
                    "enable": [
                        {
                            "@struct": "VkPhysicalDeviceVulkan13Features",
                            "@feature": "shaderIntegerDotProduct",
                            "@requires": "VK_VERSION_1_3,VK_KHR_shader_integer_dot_product"
                        },
                        {
                            "@struct": "VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR",
                            "@feature": "shaderIntegerDotProduct",
                            "@requires": "VK_KHR_shader_integer_dot_product"
                        }
                    ]
                }
            ]
        }
    }
}